{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nimport eventBus from '@/eventBus';\nexport default {\n  data() {\n    return {\n      posts: [],\n      page: 1,\n      limit: 20,\n      totalPages: 0\n    };\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const res = await apiClient.get(`/posts/paginated?page=${this.page}&limit=${this.limit}`);\n        console.log(res.data);\n        this.posts = res.data.posts;\n        this.totalPages = res.data.totalPages;\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n    nextPage() {\n      if (this.page < this.totalPages) {\n        this.page++;\n        this.fetchPosts();\n      }\n    },\n    prevPage() {\n      if (this.page > 1) {\n        this.page--;\n        this.fetchPosts();\n      }\n    },\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      return date.toLocaleDateString();\n    },\n    editPost(postId) {\n      this.$router.push(`/admin/post-edit/${postId}`); // Redirige a la vista de edición de usuario\n    },\n    async deletePost(postId) {\n      const token = localStorage.getItem('authToken');\n      if (token && confirm('¿Estás seguro de que deseas eliminar esta publicación?')) {\n        try {\n          await apiClient.delete(`/posts/${postId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.fetchPosts(); // Recarga la lista\n          eventBus.emit('alert', {\n            message: \"Publicación eliminada correctamente\",\n            type: \"success\"\n          });\n        } catch (error) {\n          console.error('Error deleting post:', error);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"names":["apiClient","eventBus","data","posts","page","limit","totalPages","methods","fetchPosts","res","get","console","log","error","nextPage","prevPage","formatDate","dateStr","date","Date","toLocaleDateString","editPost","postId","$router","push","deletePost","token","localStorage","getItem","confirm","delete","headers","Authorization","emit","message","type","mounted"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\admin\\posts-list_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h2>Lista de Publicaciones</h2>\r\n            <button class=\"btn btn-primary\" @click=\"createMyPost\">Crear Publicación</button>\r\n        </div>\r\n        <table class=\"table table-striped align-middle\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Imagen</th>\r\n                    <th>Título</th>\r\n                    <th>Categoria</th>\r\n                    <th>Descripción</th>\r\n                    <th>Usuario</th>\r\n                    <th>Cant. Lecturas</th>\r\n                    <th>Fec. Publicación </th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-if=\"posts.length === 0\">\r\n                    <td colspan=\"8\" class=\"text-center\">No hay publicaciones disponibles</td>\r\n                </tr>\r\n\r\n                <tr v-for=\"(post) in posts\" :key=\"post.id\">\r\n                    <td class=\"align-middle\">{{ post.id }}</td>\r\n                    <td class=\"align-middle\">\r\n                        <img :src=\"post.image\" alt=\"Imagen de la publicación\" class=\"img-thumbnail\"\r\n                            style=\"width: 50px; height: auto;\" />\r\n                    </td>\r\n                    <td class=\"align-middle\">{{ post.title }}</td>\r\n                    <td class=\"align-middle\">{{ post }}</td>\r\n                    <td class=\"align-middle\">{{ post.description }}</td>\r\n                    <td class=\"align-middle\">{{ post.username }}</td>\r\n                    <td class=\"align-middle\">{{ post.views }}</td>\r\n                    <td class=\"align-middle\">{{ formatDate(post.created_at) }}</td>\r\n                    <td class=\"align-middle\">\r\n                        <button class=\"btn btn-warning btn-sm mr-3\" @click=\"editPost(post.id)\">Editar</button>\r\n                        <button class=\"btn btn-danger btn-sm\" @click=\"deletePost(post.id)\">Eliminar</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <!-- Agrega esto después de la tabla -->\r\n        <div class=\"d-flex justify-content-center my-4\">\r\n            <button class=\"btn btn-secondary mx-1\" :disabled=\"page === 1\" @click=\"prevPage\">Anterior</button>\r\n            <span class=\"mx-2 align-self-center\">Página {{ page }} de {{ totalPages }}</span>\r\n            <button class=\"btn btn-secondary mx-1\" :disabled=\"page === totalPages\" @click=\"nextPage\">Siguiente</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\nimport eventBus from '@/eventBus';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            posts: [],\r\n            page: 1,\r\n            limit: 20,\r\n            totalPages: 0\r\n        };\r\n    },\r\n    methods: {\r\n        async fetchPosts() {\r\n            try {\r\n                const res = await apiClient.get(`/posts/paginated?page=${this.page}&limit=${this.limit}`);\r\n                console.log(res.data);\r\n                this.posts = res.data.posts;\r\n                this.totalPages = res.data.totalPages;\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        },\r\n        nextPage() {\r\n            if (this.page < this.totalPages) {\r\n                this.page++;\r\n                this.fetchPosts();\r\n            }\r\n        },\r\n        prevPage() {\r\n            if (this.page > 1) {\r\n                this.page--;\r\n                this.fetchPosts();\r\n            }\r\n        },\r\n        formatDate(dateStr) {\r\n            if (!dateStr) return '';\r\n            const date = new Date(dateStr);\r\n            return date.toLocaleDateString();\r\n        },\r\n\r\n        editPost(postId) {\r\n            this.$router.push(`/admin/post-edit/${postId}`); // Redirige a la vista de edición de usuario\r\n        },\r\n\r\n        async deletePost(postId) {\r\n            const token = localStorage.getItem('authToken');\r\n            if (token && confirm('¿Estás seguro de que deseas eliminar esta publicación?')) {\r\n                try {\r\n                    await apiClient.delete(`/posts/${postId}`, {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`\r\n                        }\r\n                    });\r\n                    this.fetchPosts(); // Recarga la lista\r\n                    eventBus.emit('alert', { message: \"Publicación eliminada correctamente\", type: \"success\" });\r\n                } catch (error) {\r\n                    console.error('Error deleting post:', error);\r\n                }\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.fetchPosts();\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n    margin-top: 20px;\r\n}\r\n</style>"],"mappings":";AAsDA,OAAOA,SAAQ,MAAO,uBAAuB;AAC7C,OAAOC,QAAO,MAAO,YAAY;AAEjC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;IAChB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMC,GAAE,GAAI,MAAMT,SAAS,CAACU,GAAG,CAAC,yBAAyB,IAAI,CAACN,IAAI,UAAU,IAAI,CAACC,KAAK,EAAE,CAAC;QACzFM,OAAO,CAACC,GAAG,CAACH,GAAG,CAACP,IAAI,CAAC;QACrB,IAAI,CAACC,KAAI,GAAIM,GAAG,CAACP,IAAI,CAACC,KAAK;QAC3B,IAAI,CAACG,UAAS,GAAIG,GAAG,CAACP,IAAI,CAACI,UAAU;MACzC,EAAE,OAAOO,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IACDC,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAACV,IAAG,GAAI,IAAI,CAACE,UAAU,EAAE;QAC7B,IAAI,CAACF,IAAI,EAAE;QACX,IAAI,CAACI,UAAU,CAAC,CAAC;MACrB;IACJ,CAAC;IACDO,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAACX,IAAG,GAAI,CAAC,EAAE;QACf,IAAI,CAACA,IAAI,EAAE;QACX,IAAI,CAACI,UAAU,CAAC,CAAC;MACrB;IACJ,CAAC;IACDQ,UAAUA,CAACC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;MACvB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,OAAO,CAAC;MAC9B,OAAOC,IAAI,CAACE,kBAAkB,CAAC,CAAC;IACpC,CAAC;IAEDC,QAAQA,CAACC,MAAM,EAAE;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,oBAAoBF,MAAM,EAAE,CAAC,EAAE;IACrD,CAAC;IAED,MAAMG,UAAUA,CAACH,MAAM,EAAE;MACrB,MAAMI,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAI,IAAKG,OAAO,CAAC,wDAAwD,CAAC,EAAE;QAC5E,IAAI;UACA,MAAM7B,SAAS,CAAC8B,MAAM,CAAC,UAAUR,MAAM,EAAE,EAAE;YACvCS,OAAO,EAAE;cACLC,aAAa,EAAE,UAAUN,KAAK;YAClC;UACJ,CAAC,CAAC;UACF,IAAI,CAAClB,UAAU,CAAC,CAAC,EAAE;UACnBP,QAAQ,CAACgC,IAAI,CAAC,OAAO,EAAE;YAAEC,OAAO,EAAE,qCAAqC;YAAEC,IAAI,EAAE;UAAU,CAAC,CAAC;QAC/F,EAAE,OAAOtB,KAAK,EAAE;UACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAChD;MACJ;IACJ;EACJ,CAAC;EACDuB,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC5B,UAAU,CAAC,CAAC;EACrB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}