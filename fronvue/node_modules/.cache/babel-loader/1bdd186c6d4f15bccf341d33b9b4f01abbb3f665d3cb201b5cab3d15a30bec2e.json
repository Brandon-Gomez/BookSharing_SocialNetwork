{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from \"../views/home_view.vue\";\nimport LoginView from '../views/login_view.vue';\nimport RegisterView from '../views/register_view.vue';\nimport ForgotPassword from \"../views/forgotpassword_view.vue\";\nimport ResetPassword from \"../views/resetpassword_view.vue\";\nimport ProfileView from \"../views/profile_view.vue\";\nimport EditProfileView from \"../views/editprofile_view.vue\";\nimport PostView from \"../views/post_view.vue\";\nimport EditPostView from \"../views/editpost_view.vue\";\nimport LikeView from \"../views/like_view.vue\";\nimport PdfPreviewView from \"../views/pdfpreview_view.vue\";\nimport FollowView from \"../views/follow_view.vue\";\nimport DashboardView from '../views/admin/dashboard_view.vue';\nimport UsersListView from '../views/admin/.vue';\nconst routes = [{\n  path: '/',\n  meta: {\n    requiresAdmin: false\n  },\n  children: [{\n    path: '',\n    name: 'Home',\n    component: HomeView\n  }, {\n    path: '/profile/:username',\n    name: 'Profile',\n    component: ProfileView,\n    meta: {\n      requiresAuth: true\n    },\n    props: true\n  }, {\n    path: '/profile/:username/edit-account',\n    name: 'EditProfile',\n    component: EditProfileView,\n    props: true\n  }, {\n    path: '/posts',\n    name: 'PostView',\n    component: PostView\n  }, {\n    path: '/posts/:postId/edit-post',\n    name: 'EditPost',\n    component: EditPostView,\n    props: true\n  }]\n}, {\n  path: '/admin',\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  },\n  children: [{\n    path: 'dashboard',\n    name: 'Dashboard',\n    component: DashboardView\n  }, {\n    path: 'listusers',\n    name: 'Listusers',\n    component: UsersListView\n  }]\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterView\n}, {\n  path: '/forgot-password',\n  name: 'ForgotPassword',\n  component: ForgotPassword\n}, {\n  path: '/reset-password',\n  name: 'ResetPassword',\n  component: ResetPassword\n}, {\n  path: '/pdf-preview',\n  name: 'PdfPreview',\n  component: PdfPreviewView\n}, {\n  path: '/likes',\n  name: 'LikeView',\n  component: LikeView\n}, {\n  path: '/follow',\n  name: 'FollowView',\n  component: FollowView\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Guard de navegación global\nrouter.beforeEach((to, from, next) => {\n  // const isAuthenticated = !!localStorage.getItem('authToken'); // Verifica si hay un token\n  // const isAdmin = localStorage.getItem('isAdmin') === 'true'; // Verifica si es admin\n\n  // if (to.meta.requiresAuth && !isAuthenticated) {\n  //   // Si la ruta requiere autenticación y no está autenticado, redirige al login\n  //   return next({ name: 'Login' });\n  // }\n\n  // if (to.meta.requiresAdmin && !isAdmin) {\n  //   // Si la ruta es solo para administradores y no es admin, redirige al home\n  //   return next({ name: 'Home' });\n  // }\n\n  // if (!to.meta.requiresAdmin && isAdmin) {\n  //   // Si la ruta es solo para usuarios y es admin, redirige al dashboard\n  //   return next({ name: 'Dashboard' });\n  // }\n\n  next(); // Permite la navegación\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","LoginView","RegisterView","ForgotPassword","ResetPassword","ProfileView","EditProfileView","PostView","EditPostView","LikeView","PdfPreviewView","FollowView","DashboardView","UsersListView","routes","path","meta","requiresAdmin","children","name","component","requiresAuth","props","router","history","beforeEach","to","from","next"],"sources":["D:/Downloads/BookSharing_SocialNetwork/fronvue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomeView from \"../views/home_view.vue\"\r\nimport LoginView from '../views/login_view.vue';\r\nimport RegisterView from '../views/register_view.vue';\r\nimport ForgotPassword from \"../views/forgotpassword_view.vue\";\r\nimport ResetPassword from \"../views/resetpassword_view.vue\";\r\nimport ProfileView from \"../views/profile_view.vue\"\r\nimport EditProfileView from \"../views/editprofile_view.vue\"\r\nimport PostView from \"../views/post_view.vue\"\r\nimport EditPostView from \"../views/editpost_view.vue\"\r\nimport LikeView from \"../views/like_view.vue\"\r\nimport PdfPreviewView from \"../views/pdfpreview_view.vue\"\r\nimport FollowView from \"../views/follow_view.vue\"\r\nimport DashboardView from '../views/admin/dashboard_view.vue';\r\nimport UsersListView from '../views/admin/.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    meta: { requiresAdmin: false },\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        name: 'Home',\r\n        component: HomeView,\r\n      },\r\n      {\r\n        path: '/profile/:username',\r\n        name: 'Profile',\r\n        component: ProfileView,\r\n        meta: { requiresAuth: true },\r\n        props: true,\r\n      },\r\n      {\r\n        path: '/profile/:username/edit-account',\r\n        name: 'EditProfile',\r\n        component: EditProfileView,\r\n        props: true,\r\n      },\r\n      {\r\n        path: '/posts',\r\n        name: 'PostView',\r\n        component: PostView,\r\n      },\r\n      {\r\n        path: '/posts/:postId/edit-post',\r\n        name: 'EditPost',\r\n        component: EditPostView,\r\n        props: true,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '/admin',\r\n    meta: { requiresAuth: true, requiresAdmin: true },\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        name: 'Dashboard',\r\n        component: DashboardView,\r\n      },\r\n      {\r\n\r\n        path: 'listusers',\r\n        name: 'Listusers',\r\n        component: UsersListView,\r\n\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: LoginView,\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: RegisterView,\r\n  },\r\n  {\r\n    path: '/forgot-password',\r\n    name: 'ForgotPassword',\r\n    component: ForgotPassword,\r\n  },\r\n  {\r\n    path: '/reset-password',\r\n    name: 'ResetPassword',\r\n    component: ResetPassword,\r\n  },\r\n  {\r\n    path: '/pdf-preview',\r\n    name: 'PdfPreview',\r\n    component: PdfPreviewView,\r\n  },\r\n  {\r\n    path: '/likes',\r\n    name: 'LikeView',\r\n    component: LikeView,\r\n  },\r\n  {\r\n    path: '/follow',\r\n    name: 'FollowView',\r\n    component: FollowView,\r\n  },\r\n];\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\n// Guard de navegación global\r\nrouter.beforeEach((to, from, next) => {\r\n  // const isAuthenticated = !!localStorage.getItem('authToken'); // Verifica si hay un token\r\n  // const isAdmin = localStorage.getItem('isAdmin') === 'true'; // Verifica si es admin\r\n\r\n  // if (to.meta.requiresAuth && !isAuthenticated) {\r\n  //   // Si la ruta requiere autenticación y no está autenticado, redirige al login\r\n  //   return next({ name: 'Login' });\r\n  // }\r\n\r\n  // if (to.meta.requiresAdmin && !isAdmin) {\r\n  //   // Si la ruta es solo para administradores y no es admin, redirige al home\r\n  //   return next({ name: 'Home' });\r\n  // }\r\n\r\n  // if (!to.meta.requiresAdmin && isAdmin) {\r\n  //   // Si la ruta es solo para usuarios y es admin, redirige al dashboard\r\n  //   return next({ name: 'Dashboard' });\r\n  // }\r\n\r\n  next(); // Permite la navegación\r\n});\r\n\r\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}