{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from \"../views/home_view.vue\";\nimport LoginView from '../views/login_view.vue';\nimport RegisterView from '../views/register_view.vue';\nimport ForgotPassword from \"../views/forgotpassword_view.vue\";\nimport ResetPassword from \"../views/resetpassword_view.vue\";\nimport ProfileView from \"../views/profile_view.vue\";\nimport EditProfileView from \"../views/editprofile_view.vue\";\nimport PostView from \"../views/post_view.vue\";\nimport EditPostView from \"../views/editpost_view.vue\";\nimport LikeView from \"../views/like_view.vue\";\nimport PdfPreviewView from \"../views/pdfpreview_view.vue\";\n// import FollowView from \"../views/follow_view.vue\"\nimport DashboardView from '../views/admin/dashboard_view.vue';\nimport MainLayout from '@/layouts/MainLayout.vue';\nimport ad from '@/layouts/AdminLayout.vue';\nconst routes = [{\n  path: '/',\n  component: MainLayout,\n  children: [{\n    path: '',\n    name: 'Home',\n    component: HomeView\n  }, {\n    path: '/profile/:username',\n    name: 'Profile',\n    component: ProfileView,\n    meta: {\n      requiresAuth: true\n    },\n    props: true\n  }, {\n    path: '/profile/:username/edit-account',\n    name: 'EditProfile',\n    component: EditProfileView,\n    props: true\n  }, {\n    path: '/posts',\n    name: 'PostView',\n    component: PostView\n  }, {\n    path: '/posts/:postId/edit-post',\n    name: 'EditPost',\n    component: EditPostView,\n    props: true\n  }]\n}, {\n  path: '/admin',\n  component: AdminLayout,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  },\n  children: [{\n    path: 'dashboard',\n    name: 'AdminDashboard',\n    component: DashboardView\n  }]\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterView\n}, {\n  path: '/forgot-password',\n  name: 'ForgotPassword',\n  component: ForgotPassword\n}, {\n  path: '/reset-password',\n  name: 'ResetPassword',\n  component: ResetPassword\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Guard de navegación global\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = !!localStorage.getItem('authToken'); // Verifica si hay un token\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    // Si la ruta requiere autenticación y no está autenticado, redirige al login\n    next({\n      path: '/login'\n    });\n  } else {\n    // De lo contrario, permite el acceso\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","LoginView","RegisterView","ForgotPassword","ResetPassword","ProfileView","EditProfileView","PostView","EditPostView","LikeView","PdfPreviewView","DashboardView","MainLayout","ad","routes","path","component","children","name","meta","requiresAuth","props","AdminLayout","requiresAdmin","router","history","beforeEach","to","from","next","isAuthenticated","localStorage","getItem"],"sources":["D:/Downloads/BookSharing_SocialNetwork/fronvue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomeView from \"../views/home_view.vue\"\r\nimport LoginView from '../views/login_view.vue';\r\nimport RegisterView from '../views/register_view.vue';\r\nimport ForgotPassword from \"../views/forgotpassword_view.vue\";\r\nimport ResetPassword from \"../views/resetpassword_view.vue\";\r\nimport ProfileView from \"../views/profile_view.vue\"\r\nimport EditProfileView from \"../views/editprofile_view.vue\"\r\nimport PostView from \"../views/post_view.vue\"\r\nimport EditPostView from \"../views/editpost_view.vue\"\r\nimport LikeView from \"../views/like_view.vue\"\r\nimport PdfPreviewView from \"../views/pdfpreview_view.vue\"\r\n// import FollowView from \"../views/follow_view.vue\"\r\nimport DashboardView from '../views/admin/dashboard_view.vue';\r\nimport MainLayout from '@/layouts/MainLayout.vue';\r\nimport ad from '@/layouts/AdminLayout.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: MainLayout,\r\n    children: [\r\n      {\r\n        path: '',\r\n        name: 'Home',\r\n        component: HomeView,\r\n      },\r\n      {\r\n        path: '/profile/:username',\r\n        name: 'Profile',\r\n        component: ProfileView,\r\n        meta: { requiresAuth: true },\r\n        props: true,\r\n      },\r\n      {\r\n        path: '/profile/:username/edit-account',\r\n        name: 'EditProfile',\r\n        component: EditProfileView,\r\n        props: true,\r\n      },\r\n      {\r\n        path: '/posts',\r\n        name: 'PostView',\r\n        component: PostView,\r\n      },\r\n      {\r\n        path: '/posts/:postId/edit-post',\r\n        name: 'EditPost',\r\n        component: EditPostView,\r\n        props: true,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '/admin',\r\n    component: AdminLayout,\r\n    meta: { requiresAuth: true, requiresAdmin: true },\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        name: 'AdminDashboard',\r\n        component: DashboardView,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: LoginView,\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: RegisterView,\r\n  },\r\n  {\r\n    path: '/forgot-password',\r\n    name: 'ForgotPassword',\r\n    component: ForgotPassword,\r\n  },\r\n  {\r\n    path: '/reset-password',\r\n    name: 'ResetPassword',\r\n    component: ResetPassword,\r\n  },\r\n];\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\n// Guard de navegación global\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = !!localStorage.getItem('authToken'); // Verifica si hay un token\r\n  if (to.meta.requiresAuth && !isAuthenticated) {\r\n      // Si la ruta requiere autenticación y no está autenticado, redirige al login\r\n      next({ path: '/login' });\r\n  } else {\r\n      // De lo contrario, permite el acceso\r\n      next();\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,cAAc,MAAM,8BAA8B;AACzD;AACA,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,EAAE,MAAM,2BAA2B;AAE1C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEJ,UAAU;EACrBK,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,EAAE;IACRG,IAAI,EAAE,MAAM;IACZF,SAAS,EAAEhB;EACb,CAAC,EACD;IACEe,IAAI,EAAE,oBAAoB;IAC1BG,IAAI,EAAE,SAAS;IACfF,SAAS,EAAEX,WAAW;IACtBc,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK,CAAC;IAC5BC,KAAK,EAAE;EACT,CAAC,EACD;IACEN,IAAI,EAAE,iCAAiC;IACvCG,IAAI,EAAE,aAAa;IACnBF,SAAS,EAAEV,eAAe;IAC1Be,KAAK,EAAE;EACT,CAAC,EACD;IACEN,IAAI,EAAE,QAAQ;IACdG,IAAI,EAAE,UAAU;IAChBF,SAAS,EAAET;EACb,CAAC,EACD;IACEQ,IAAI,EAAE,0BAA0B;IAChCG,IAAI,EAAE,UAAU;IAChBF,SAAS,EAAER,YAAY;IACvBa,KAAK,EAAE;EACT,CAAC;AAEL,CAAC,EACD;EACEN,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEM,WAAW;EACtBH,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEG,aAAa,EAAE;EAAK,CAAC;EACjDN,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,WAAW;IACjBG,IAAI,EAAE,gBAAgB;IACtBF,SAAS,EAAEL;EACb,CAAC;AAEL,CAAC,EACD;EACEI,IAAI,EAAE,QAAQ;EACdG,IAAI,EAAE,OAAO;EACbF,SAAS,EAAEf;AACb,CAAC,EACD;EACEc,IAAI,EAAE,WAAW;EACjBG,IAAI,EAAE,UAAU;EAChBF,SAAS,EAAEd;AACb,CAAC,EACD;EACEa,IAAI,EAAE,kBAAkB;EACxBG,IAAI,EAAE,gBAAgB;EACtBF,SAAS,EAAEb;AACb,CAAC,EACD;EACEY,IAAI,EAAE,iBAAiB;EACvBG,IAAI,EAAE,eAAe;EACrBF,SAAS,EAAEZ;AACb,CAAC,CACF;AACD,MAAMoB,MAAM,GAAG1B,YAAY,CAAC;EAC1B2B,OAAO,EAAE1B,gBAAgB,CAAC,CAAC;EAC3Be;AACF,CAAC,CAAC;;AAEF;AACAU,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EAC7D,IAAIL,EAAE,CAACR,IAAI,CAACC,YAAY,IAAI,CAACU,eAAe,EAAE;IAC1C;IACAD,IAAI,CAAC;MAAEd,IAAI,EAAE;IAAS,CAAC,CAAC;EAC5B,CAAC,MAAM;IACH;IACAc,IAAI,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}