{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"edit-post-container container my-4 py-4\"\n};\nconst _hoisted_2 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_3 = {\n  class: \"form-group my-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.newPost ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Editar Publicación\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.updatePost && $options.updatePost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Título\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPost.title = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newPost.description = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.description]])]), _createCommentVNode(\" <div class=\\\"form-group my-2\\\">\\r\\n          <label for=\\\"image\\\">Imagen</label>\\r\\n          <input type=\\\"file\\\" id=\\\"image\\\" @change=\\\"handleImageUpload\\\" class=\\\"form-control\\\" accept=\\\"image/*\\\"/>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"form-group my-2\\\">\\r\\n          <label for=\\\"pdf\\\">Archivo PDF</label>\\r\\n          <input type=\\\"file\\\" id=\\\"pdf\\\" @change=\\\"handlePdfUpload\\\" class=\\\"form-control\\\" />\\r\\n        </div> \"), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Guardar Cambios\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deletePost && $options.deletePost(...args)),\n    class: \"btn btn-danger ml-2\"\n  }, \"Eliminar Publicación\")], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$data","newPost","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","updatePost","_hoisted_2","for","type","id","$event","title","_hoisted_3","description","_createCommentVNode","onClick","deletePost"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editpost_component.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"newPost\" class=\"edit-post-container container my-4 py-4\">\r\n      <h2>Editar Publicación</h2>\r\n      <form @submit.prevent=\"updatePost\">\r\n        <div class=\"form-group my-2\">\r\n          <label for=\"title\">Título</label>\r\n          <input type=\"text\" id=\"title\" v-model=\"newPost.title\" class=\"form-control\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group my-2\">\r\n          <label for=\"description\">Descripción</label>\r\n          <textarea id=\"description\" v-model=\"newPost.description\" class=\"form-control\"></textarea>\r\n        </div>\r\n  \r\n        <!-- <div class=\"form-group my-2\">\r\n          <label for=\"image\">Imagen</label>\r\n          <input type=\"file\" id=\"image\" @change=\"handleImageUpload\" class=\"form-control\" accept=\"image/*\"/>\r\n        </div>\r\n  \r\n        <div class=\"form-group my-2\">\r\n          <label for=\"pdf\">Archivo PDF</label>\r\n          <input type=\"file\" id=\"pdf\" @change=\"handlePdfUpload\" class=\"form-control\" />\r\n        </div> -->\r\n        <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n        <button @click=\"deletePost\" class=\"btn btn-danger ml-2\">Eliminar Publicación</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  props: {\r\n    postId: String, \r\n  },\r\n  data() {\r\n    return {\r\n      newPost: { \r\n        title: '',\r\n        description: '',\r\n      },\r\n      // newImageFile: null,\r\n      // newPdfFile: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n  methods: {\r\n    async fetchPost() {\r\n  try {\r\n    const response = await apiClient.get(`/posts/${this.postId}`);\r\n    this.newPost = response.data;\r\n    console.log(\"DATA OBTENIDA:\", response.data);\r\n  } catch (error) {\r\n    console.error('Error fetching post:', error);\r\n  }\r\n},\r\n    handleImageUpload(event) {\r\n      this.newImageFile = event.target.files[0];\r\n    },\r\n    handlePdfUpload(event) {\r\n      this.newPdfFile = event.target.files[0];\r\n    },\r\n    async updatePost() {\r\n  const token = localStorage.getItem('authToken');\r\n  if (token) {\r\n    const formData = new FormData();\r\n    \r\n    formData.append('title', this.newPost.title);\r\n    formData.append('description', this.newPost.description);\r\n\r\n    // Agrega los nuevos archivos solo si existen\r\n    if (this.newImageFile) formData.append('images', this.newImageFile);\r\n    if (this.newPdfFile) formData.append('pdf_file', this.newPdfFile);\r\n\r\n    // Log de datos que se enviarán\r\n    for (const [key, value] of formData.entries()) {\r\n      console.log(`${key}:`, value);\r\n    }\r\n\r\n    try {\r\n      const response = await apiClient.put(`/posts/${this.postId}`, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log(response.data);\r\n\r\n      // Redirecciona después de la actualización exitosa\r\n      this.$router.push(`/profile/${this.$route.params.username}`);\r\n    } catch (error) {\r\n      console.error('Error updating post:', error);\r\n    }\r\n  }\r\n},\r\n    async deletePost() {\r\n      try {\r\n        await apiClient.delete(`/posts/${this.postId}`);\r\n        this.$router.push(`/profile/${this.$route.params.username}`);\r\n      } catch (error) {\r\n        console.error('Error deleting post:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n  \r\n  <style scoped>\r\n  .edit-post-container {\r\n    background-color: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAAAA,GAAA;EACwBC,KAAK,EAAC;;;EAGjBA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAiB;;SARrBC,KAAA,CAAAC,OAAO,I,cAAlBC,mBAAA,CAyBM,OAzBNC,UAyBM,G,0BAxBJC,mBAAA,CAA2B,YAAvB,oBAAkB,sBACtBA,mBAAA,CAsBO;IAtBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BJ,mBAAA,CAGM,OAHNO,UAGM,G,0BAFJP,mBAAA,CAAiC;IAA1BQ,GAAG,EAAC;EAAO,GAAC,QAAM,sB,gBACzBR,mBAAA,CAA6E;IAAtES,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IANvC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAMiDf,KAAA,CAAAC,OAAO,CAACe,KAAK,GAAAD,MAAA;IAAEhB,KAAK,EAAC;iDAArBC,KAAA,CAAAC,OAAO,CAACe,KAAK,E,KAGtDZ,mBAAA,CAGM,OAHNa,UAGM,G,0BAFJb,mBAAA,CAA4C;IAArCQ,GAAG,EAAC;EAAa,GAAC,aAAW,sB,gBACpCR,mBAAA,CAAyF;IAA/EU,EAAE,EAAC,aAAa;IAXpC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAW8Cf,KAAA,CAAAC,OAAO,CAACiB,WAAW,GAAAH,MAAA;IAAEhB,KAAK,EAAC;iDAA3BC,KAAA,CAAAC,OAAO,CAACiB,WAAW,E,KAGzDC,mBAAA,2bAQU,E,0BACVf,mBAAA,CAAsE;IAA9DS,IAAI,EAAC,QAAQ;IAACd,KAAK,EAAC;KAAkB,iBAAe,sBAC7DK,mBAAA,CAAqF;IAA5EgB,OAAK,EAAAd,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAY,UAAA,IAAAZ,QAAA,CAAAY,UAAA,IAAAb,IAAA,CAAU;IAAET,KAAK,EAAC;KAAsB,sBAAoB,E,gCAxBpFoB,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}