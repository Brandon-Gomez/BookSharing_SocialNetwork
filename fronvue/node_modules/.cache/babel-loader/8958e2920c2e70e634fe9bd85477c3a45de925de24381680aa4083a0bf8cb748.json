{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from \"@/services/ApiService\";\nimport { logoutUser } from \"@/services/useAuth.js\";\nexport default {\n  components: {},\n  data() {\n    return {\n      categories: [],\n      userData: {\n        id: \"\",\n        email: \"\",\n        password: \"\",\n        username: \"\",\n        name: \"\",\n        birthdate: \"\",\n        gender: \"\",\n        description: \"\",\n        profile_picture: \"\"\n      },\n      isCurrentUser: true,\n      publications: 0,\n      follows: {\n        isFollowing: false,\n        followers: 0,\n        following: 0\n      },\n      countPosts: 0,\n      profileImageFile: null,\n      profilePhoto: null,\n      newPost: {\n        id: \"\",\n        title: \"\",\n        description: \"\",\n        images: \"\",\n        pdf: \"\"\n      }\n    };\n  },\n  methods: {\n    onPageChange(n) {\n      this.page = n;\n    },\n    async fetchUser() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const username = localStorage.getItem(\"username\");\n        const response = await apiClient.get(`/profile/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        let user = response.data.user;\n        // Formatea la fecha para el input date\n        if (user.birthdate) {\n          user.birthdate = user.birthdate.split(\"T\")[0];\n        }\n        this.userData = {\n          ...user,\n          password: \"\"\n        };\n        this.isCurrentUser = response.data.isCurrentUser;\n\n        // Obtener seguidores y seguidos\n        if (user.id) {\n          // Seguidores\n          const resFollowers = await apiClient.get(`/follow/followers/count/${user.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.follows.followers = resFollowers.data.followerCount || 0;\n\n          // Seguidos\n          const resFollowing = await apiClient.get(`/follow/following/count/${user.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.follows.following = resFollowing.data.followingCount || 0;\n\n          // cantidad de publicaciones\n          const res = await apiClient.get(`/posts/count/${user.id}`);\n          this.countPosts = res.data.post_count;\n        }\n      } catch (error) {\n        console.error(\"Error al obtener el usuario:\", error.response?.data || error);\n      }\n    },\n    async fetchCategories() {\n      try {\n        const response = await apiClient.get(\"/categories\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n          }\n        });\n        this.categories = response.data;\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    getUserImage() {\n      return this.userData.profile_picture || \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\";\n    },\n    handleImageUpload(event) {\n      this.newPost.images = event.target.files[0];\n    },\n    handlePdfUpload(event) {\n      this.newPost.pdf = event.target.files[0];\n    },\n    logout() {\n      logoutUser(this.$router);\n    },\n    goToEditProfile() {\n      this.$router.push(`/profile/${this.userData.username}/edit-account`);\n    },\n    async createPost() {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        const formData = new FormData();\n        if (!this.newPost.images || !this.newPost.pdf) {\n          alert(\"Se requieren una imagen y un archivo PDF.\");\n          return;\n        }\n        formData.append(\"title\", this.newPost.title);\n        formData.append(\"description\", this.newPost.description);\n        formData.append(\"category_id\", this.newPost.category_id);\n        formData.append(\"images\", this.newPost.images);\n        formData.append(\"pdf\", this.newPost.pdf);\n        try {\n          const response = await apiClient.post(\"/posts\", formData, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n          console.log(\"Publicación creada:\", response.data);\n          this.$router.push(`/profile/${this.userData.username}`);\n        } catch (error) {\n          console.error(\"Error creando publicación:\", error);\n        }\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchCategories(), this.fetchUser();\n  }\n};","map":{"version":3,"names":["apiClient","logoutUser","components","data","categories","userData","id","email","password","username","name","birthdate","gender","description","profile_picture","isCurrentUser","publications","follows","isFollowing","followers","following","countPosts","profileImageFile","profilePhoto","newPost","title","images","pdf","methods","onPageChange","n","page","fetchUser","token","localStorage","getItem","response","get","headers","Authorization","user","split","resFollowers","followerCount","resFollowing","followingCount","res","post_count","error","console","fetchCategories","getUserImage","handleImageUpload","event","target","files","handlePdfUpload","logout","$router","goToEditProfile","push","createPost","formData","FormData","alert","append","category_id","post","log","mounted"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\createpost_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- Toolbar-->\r\n\r\n    <h2 class=\"h3 pt-2 pb-4 mb-0 text-center text-sm-start border-bottom mt-2\">\r\n      Crear publicación\r\n    </h2>\r\n    <form @submit.prevent=\"createPost\">\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"title\">Título</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          v-model=\"newPost.title\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"description\">Descripción</label>\r\n        <textarea\r\n          id=\"description\"\r\n          v-model=\"newPost.description\"\r\n          class=\"form-control\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"category\">Categoría</label>\r\n        <select\r\n          id=\"category\"\r\n          v-model=\"newPost.category_id\"\r\n          class=\"form-control form-control-sm\"\r\n        >\r\n          <option value=\"\" disabled selected>Selecciona una categoría</option>\r\n          <option\r\n            v-for=\"category in categories\"\r\n            :key=\"category.id\"\r\n            :value=\"category.id\"\r\n          >\r\n            {{ category.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"image\">Imagen</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          @change=\"handleImageUpload\"\r\n          class=\"form-control\"\r\n          accept=\"image/*\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"pdf\">Archivo PDF</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"pdf\"\r\n          @change=\"handlePdfUpload\"\r\n          class=\"form-control\"\r\n          accept=\"application/*\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-success mt-2\">\r\n        Crear publicación\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport { logoutUser } from \"@/services/useAuth.js\";\r\n\r\nexport default {\r\n  components: {},\r\n\r\n  data() {\r\n    return {\r\n      categories: [],\r\n      userData: {\r\n        id: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        birthdate: \"\",\r\n        gender: \"\",\r\n        description: \"\",\r\n        profile_picture: \"\",\r\n      },\r\n      isCurrentUser: true,\r\n      publications: 0,\r\n      follows: {\r\n        isFollowing: false,\r\n        followers: 0,\r\n        following: 0,\r\n      },\r\n      countPosts: 0,\r\n      profileImageFile: null,\r\n      profilePhoto: null,\r\n      newPost: {\r\n        id: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        images: \"\",\r\n        pdf: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    onPageChange(n) {\r\n      this.page = n;\r\n    },\r\n\r\n    async fetchUser() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const username = localStorage.getItem(\"username\");\r\n        const response = await apiClient.get(`/profile/${username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        let user = response.data.user;\r\n        // Formatea la fecha para el input date\r\n        if (user.birthdate) {\r\n          user.birthdate = user.birthdate.split(\"T\")[0];\r\n        }\r\n        this.userData = {\r\n          ...user,\r\n          password: \"\",\r\n        };\r\n        this.isCurrentUser = response.data.isCurrentUser;\r\n\r\n        // Obtener seguidores y seguidos\r\n        if (user.id) {\r\n          // Seguidores\r\n          const resFollowers = await apiClient.get(\r\n            `/follow/followers/count/${user.id}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          this.follows.followers = resFollowers.data.followerCount || 0;\r\n\r\n          // Seguidos\r\n          const resFollowing = await apiClient.get(\r\n            `/follow/following/count/${user.id}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          this.follows.following = resFollowing.data.followingCount || 0;\r\n\r\n          // cantidad de publicaciones\r\n          const res = await apiClient.get(`/posts/count/${user.id}`);\r\n          this.countPosts = res.data.post_count;\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error al obtener el usuario:\",\r\n          error.response?.data || error\r\n        );\r\n      }\r\n    },\r\n\r\n    async fetchCategories() {\r\n      try {\r\n        const response = await apiClient.get(\"/categories\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n          },\r\n        });\r\n        this.categories = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n      }\r\n    },\r\n    getUserImage() {\r\n      return (\r\n        this.userData.profile_picture ||\r\n        \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\"\r\n      );\r\n    },\r\n    handleImageUpload(event) {\r\n      this.newPost.images = event.target.files[0];\r\n    },\r\n    handlePdfUpload(event) {\r\n      this.newPost.pdf = event.target.files[0];\r\n    },\r\n    logout() {\r\n      logoutUser(this.$router);\r\n    },\r\n    goToEditProfile() {\r\n      this.$router.push(`/profile/${this.userData.username}/edit-account`);\r\n    },\r\n    async createPost() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (token) {\r\n        const formData = new FormData();\r\n\r\n        if (!this.newPost.images || !this.newPost.pdf) {\r\n          alert(\"Se requieren una imagen y un archivo PDF.\");\r\n          return;\r\n        }\r\n        formData.append(\"title\", this.newPost.title);\r\n        formData.append(\"description\", this.newPost.description);\r\n        formData.append(\"category_id\", this.newPost.category_id);\r\n        formData.append(\"images\", this.newPost.images);\r\n        formData.append(\"pdf\", this.newPost.pdf);\r\n\r\n        try {\r\n          const response = await apiClient.post(\"/posts\", formData, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          console.log(\"Publicación creada:\", response.data);\r\n          this.$router.push(`/profile/${this.userData.username}`);\r\n        } catch (error) {\r\n          console.error(\"Error creando publicación:\", error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    await this.fetchCategories(), this.fetchUser();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.library-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.library-item .card {\r\n  height: 100%;\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-img-top {\r\n  height: 300px;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}