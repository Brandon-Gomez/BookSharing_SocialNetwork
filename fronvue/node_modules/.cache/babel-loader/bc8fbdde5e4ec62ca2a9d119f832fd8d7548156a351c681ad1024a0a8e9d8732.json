{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_3 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_4 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_7 = {\n  class: \"form-group my-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Toolbar\"), _cache[13] || (_cache[13] = _createElementVNode(\"h2\", {\n    class: \"h3 pt-2 pb-4 mb-0 text-center text-sm-start border-bottom mt-2\"\n  }, \" Crear publicación \", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Título\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPost.title = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newPost.description = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.description]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"category\"\n  }, \"Categoría\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"category\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newPost.category_id = $event),\n    class: \"form-control form-control-sm\"\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"Selecciona una categoría\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: category.id,\n      value: category.id\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.newPost.category_id]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"image\"\n  }, \"Imagen\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"image\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    class: \"form-control\",\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"pdf\"\n  }, \"Archivo PDF\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"pdf\",\n    onChange: _cache[4] || (_cache[4] = (...args) => $options.handlePdfUpload && $options.handlePdfUpload(...args)),\n    class: \"form-control\",\n    accept: \"application/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _cache[12] || (_cache[12] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-success mt-2\"\n  }, \" Crear publicación \", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","createPost","_hoisted_2","for","type","id","$event","$data","newPost","title","_hoisted_3","description","_hoisted_4","category_id","value","disabled","selected","_Fragment","_renderList","categories","category","key","name","_hoisted_5","_hoisted_6","onChange","handleImageUpload","accept","_hoisted_7","handlePdfUpload"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\createpost_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- Toolbar-->\r\n\r\n    <h2 class=\"h3 pt-2 pb-4 mb-0 text-center text-sm-start border-bottom mt-2\">\r\n      Crear publicación\r\n    </h2>\r\n    <form @submit.prevent=\"createPost\">\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"title\">Título</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          v-model=\"newPost.title\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"description\">Descripción</label>\r\n        <textarea\r\n          id=\"description\"\r\n          v-model=\"newPost.description\"\r\n          class=\"form-control\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"category\">Categoría</label>\r\n        <select\r\n          id=\"category\"\r\n          v-model=\"newPost.category_id\"\r\n          class=\"form-control form-control-sm\"\r\n        >\r\n          <option value=\"\" disabled selected>Selecciona una categoría</option>\r\n          <option\r\n            v-for=\"category in categories\"\r\n            :key=\"category.id\"\r\n            :value=\"category.id\"\r\n          >\r\n            {{ category.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"image\">Imagen</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          @change=\"handleImageUpload\"\r\n          class=\"form-control\"\r\n          accept=\"image/*\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"pdf\">Archivo PDF</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"pdf\"\r\n          @change=\"handlePdfUpload\"\r\n          class=\"form-control\"\r\n          accept=\"application/*\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-success mt-2\">\r\n        Crear publicación\r\n      </button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport { logoutUser } from \"@/services/useAuth.js\";\r\n\r\nexport default {\r\n  components: {},\r\n\r\n  data() {\r\n    return {\r\n      categories: [],\r\n      userData: {\r\n        id: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        birthdate: \"\",\r\n        gender: \"\",\r\n        description: \"\",\r\n        profile_picture: \"\",\r\n      },\r\n      isCurrentUser: true,\r\n      publications: 0,\r\n      follows: {\r\n        isFollowing: false,\r\n        followers: 0,\r\n        following: 0,\r\n      },\r\n      countPosts: 0,\r\n      profileImageFile: null,\r\n      profilePhoto: null,\r\n      newPost: {\r\n        id: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        images: \"\",\r\n        pdf: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    onPageChange(n) {\r\n      this.page = n;\r\n    },\r\n\r\n    async fetchUser() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const username = localStorage.getItem(\"username\");\r\n        const response = await apiClient.get(`/profile/${username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        let user = response.data.user;\r\n        // Formatea la fecha para el input date\r\n        if (user.birthdate) {\r\n          user.birthdate = user.birthdate.split(\"T\")[0];\r\n        }\r\n        this.userData = {\r\n          ...user,\r\n          password: \"\",\r\n        };\r\n        this.isCurrentUser = response.data.isCurrentUser;\r\n\r\n        // Obtener seguidores y seguidos\r\n        if (user.id) {\r\n          // Seguidores\r\n          const resFollowers = await apiClient.get(\r\n            `/follow/followers/count/${user.id}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          this.follows.followers = resFollowers.data.followerCount || 0;\r\n\r\n          // Seguidos\r\n          const resFollowing = await apiClient.get(\r\n            `/follow/following/count/${user.id}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          this.follows.following = resFollowing.data.followingCount || 0;\r\n\r\n          // cantidad de publicaciones\r\n          const res = await apiClient.get(`/posts/count/${user.id}`);\r\n          this.countPosts = res.data.post_count;\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error al obtener el usuario:\",\r\n          error.response?.data || error\r\n        );\r\n      }\r\n    },\r\n\r\n    async fetchCategories() {\r\n      try {\r\n        const response = await apiClient.get(\"/categories\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n          },\r\n        });\r\n        this.categories = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n      }\r\n    },\r\n    getUserImage() {\r\n      return (\r\n        this.userData.profile_picture ||\r\n        \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\"\r\n      );\r\n    },\r\n    handleImageUpload(event) {\r\n      this.newPost.images = event.target.files[0];\r\n    },\r\n    handlePdfUpload(event) {\r\n      this.newPost.pdf = event.target.files[0];\r\n    },\r\n    logout() {\r\n      logoutUser(this.$router);\r\n    },\r\n    goToEditProfile() {\r\n      this.$router.push(`/profile/${this.userData.username}/edit-account`);\r\n    },\r\n    async createPost() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (token) {\r\n        const formData = new FormData();\r\n\r\n        if (!this.newPost.images || !this.newPost.pdf) {\r\n          alert(\"Se requieren una imagen y un archivo PDF.\");\r\n          return;\r\n        }\r\n        formData.append(\"title\", this.newPost.title);\r\n        formData.append(\"description\", this.newPost.description);\r\n        formData.append(\"category_id\", this.newPost.category_id);\r\n        formData.append(\"images\", this.newPost.images);\r\n        formData.append(\"pdf\", this.newPost.pdf);\r\n\r\n        try {\r\n          const response = await apiClient.post(\"/posts\", formData, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          console.log(\"Publicación creada:\", response.data);\r\n          this.$router.push(`/profile/${this.userData.username}`);\r\n        } catch (error) {\r\n          console.error(\"Error creando publicación:\", error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    await this.fetchCategories(), this.fetchUser();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.library-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.library-item .card {\r\n  height: 100%;\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-img-top {\r\n  height: 300px;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}