{"ast":null,"code":"import ApiService from '@/services/ApiService'; // Asegúrate de que ApiService esté configurado correctamente\n\nexport default {\n  data() {\n    return {\n      followerCount: 0,\n      followingCount: 0,\n      followers: [],\n      following: [],\n      showFollowers: false,\n      showFollowing: false,\n      isFollowing: false // Para saber si el usuario ya sigue a la persona\n    };\n  },\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    targetUserId: {\n      type: Number,\n      required: true\n    }\n  },\n  mounted() {\n    this.fetchFollowerCount();\n    this.fetchFollowingCount();\n    this.checkIfFollowing();\n  },\n  methods: {\n    // Verificar si el usuario ya está siguiendo\n    async checkIfFollowing() {\n      try {\n        const response = await ApiService.get(`/follow/${this.userId}/following`);\n        this.isFollowing = response.data.some(followed => followed.id === this.targetUserId);\n      } catch (error) {\n        console.error('Error checking follow status:', error);\n      }\n    },\n    // Seguir a un usuario\n    async followUser() {\n      try {\n        await ApiService.post('/follow', {\n          followed_id: this.userId\n        });\n        this.isFollowing = true;\n        this.fetchFollowingCount(); // Actualizar contador de seguidos\n      } catch (error) {\n        console.error('Error following user:', error);\n      }\n    },\n    // Dejar de seguir a un usuario\n    async unfollowUser() {\n      try {\n        await ApiService.delete('/unfollow', {\n          data: {\n            followed_id: this.userId\n          }\n        });\n        this.isFollowing = false;\n        this.fetchFollowingCount(); // Actualizar contador de seguidos\n      } catch (error) {\n        console.error('Error unfollowing user:', error);\n      }\n    },\n    // Obtener la cantidad de seguidores\n    async fetchFollowerCount() {\n      try {\n        const response = await ApiService.get(`/follow/${this.targetUserId}/followers/count`);\n        this.followerCount = response.data.followerCount;\n      } catch (error) {\n        console.error('Error fetching follower count:', error);\n      }\n    },\n    // Obtener la cantidad de seguidos\n    async fetchFollowingCount() {\n      try {\n        const response = await ApiService.get(`/follow/${this.targetUserId}/following/count`);\n        this.followingCount = response.data.followingCount;\n      } catch (error) {\n        console.error('Error fetching following count:', error);\n      }\n    },\n    // Obtener la lista de seguidores\n    async fetchFollowers() {\n      try {\n        const response = await ApiService.get(`/follow/${this.targetUserId}/followers`);\n        this.followers = response.data;\n      } catch (error) {\n        console.error('Error fetching followers:', error);\n      }\n    },\n    // Obtener la lista de seguidos\n    async fetchFollowing() {\n      try {\n        const response = await ApiService.get(`/follow/${this.targetUserId}/following`);\n        this.following = response.data;\n      } catch (error) {\n        console.error('Error fetching following:', error);\n      }\n    },\n    // Toggle para mostrar/ocultar la lista de seguidores\n    toggleFollowersList() {\n      this.showFollowers = !this.showFollowers;\n      if (this.showFollowers) {\n        this.fetchFollowers();\n      }\n    },\n    // Toggle para mostrar/ocultar la lista de seguidos\n    toggleFollowingList() {\n      this.showFollowing = !this.showFollowing;\n      if (this.showFollowing) {\n        this.fetchFollowing();\n      }\n    }\n  }\n};","map":{"version":3,"names":["ApiService","data","followerCount","followingCount","followers","following","showFollowers","showFollowing","isFollowing","props","userId","type","Number","required","targetUserId","mounted","fetchFollowerCount","fetchFollowingCount","checkIfFollowing","methods","response","get","some","followed","id","error","console","followUser","post","followed_id","unfollowUser","delete","fetchFollowers","fetchFollowing","toggleFollowersList","toggleFollowingList"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\follow_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"follow-container\">\r\n    <!-- Sección para seguir o dejar de seguir -->\r\n    <div class=\"follow-actions\">\r\n      <button @click=\"followUser\" :disabled=\"isFollowing\">Follow</button>\r\n      <button @click=\"unfollowUser\" :disabled=\"!isFollowing\">Unfollow</button>\r\n    </div>\r\n\r\n    <!-- Información de seguidores -->\r\n    <div class=\"followers\">\r\n      <h3>Followers</h3>\r\n      <p>{{ followerCount }} Followers</p>\r\n      <button @click=\"toggleFollowersList\">View Followers</button>\r\n\r\n      <div v-if=\"showFollowers\" class=\"followers-list\">\r\n        <ul>\r\n          <li v-for=\"follower in followers\" :key=\"follower.id\">\r\n            <img :src=\"follower.profile_picture\" alt=\"profile\" class=\"profile-img\" />\r\n            <p>{{ follower.name }}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Información de seguidos -->\r\n    <div class=\"following\">\r\n      <h3>Following</h3>\r\n      <p>{{ followingCount }} Following</p>\r\n      <button @click=\"toggleFollowingList\">View Following</button>\r\n\r\n      <div v-if=\"showFollowing\" class=\"following-list\">\r\n        <ul>\r\n          <li v-for=\"followed in following\" :key=\"followed.id\">\r\n            <img :src=\"followed.profile_picture\" alt=\"profile\" class=\"profile-img\" />\r\n            <p>{{ followed.name }}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ApiService from '@/services/ApiService'; // Asegúrate de que ApiService esté configurado correctamente\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      followerCount: 0,\r\n      followingCount: 0,\r\n      followers: [],\r\n      following: [],\r\n      showFollowers: false,\r\n      showFollowing: false,\r\n      isFollowing: false, // Para saber si el usuario ya sigue a la persona\r\n    };\r\n  },\r\n  props: {\r\n    userId: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    targetUserId: {\r\n      type: Number,\r\n      required: true,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchFollowerCount();\r\n    this.fetchFollowingCount();\r\n    this.checkIfFollowing();\r\n  },\r\n  methods: {\r\n    // Verificar si el usuario ya está siguiendo\r\n    async checkIfFollowing() {\r\n      try {\r\n        const response = await ApiService.get(`/follow/${this.userId}/following`);\r\n        this.isFollowing = response.data.some(followed => followed.id === this.targetUserId);\r\n      } catch (error) {\r\n        console.error('Error checking follow status:', error);\r\n      }\r\n    },\r\n    // Seguir a un usuario\r\n    async followUser() {\r\n      try {\r\n        await ApiService.post('/follow', { followed_id: this.userId });\r\n        this.isFollowing = true;\r\n        this.fetchFollowingCount(); // Actualizar contador de seguidos\r\n      } catch (error) {\r\n        console.error('Error following user:', error);\r\n      }\r\n    },\r\n    // Dejar de seguir a un usuario\r\n    async unfollowUser() {\r\n      try {\r\n        await ApiService.delete('/unfollow', { data: { followed_id: this.userId } });\r\n        this.isFollowing = false;\r\n        this.fetchFollowingCount(); // Actualizar contador de seguidos\r\n      } catch (error) {\r\n        console.error('Error unfollowing user:', error);\r\n      }\r\n    },\r\n    // Obtener la cantidad de seguidores\r\n    async fetchFollowerCount() {\r\n      try {\r\n        const response = await ApiService.get(`/follow/${this.targetUserId}/followers/count`);\r\n        this.followerCount = response.data.followerCount;\r\n      } catch (error) {\r\n        console.error('Error fetching follower count:', error);\r\n      }\r\n    },\r\n    // Obtener la cantidad de seguidos\r\n    async fetchFollowingCount() {\r\n      try {\r\n        const response = await ApiService.get(`/follow/${this.targetUserId}/following/count`);\r\n        this.followingCount = response.data.followingCount;\r\n      } catch (error) {\r\n        console.error('Error fetching following count:', error);\r\n      }\r\n    },\r\n    // Obtener la lista de seguidores\r\n    async fetchFollowers() {\r\n      try {\r\n        const response = await ApiService.get(`/follow/${this.targetUserId}/followers`);\r\n        this.followers = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching followers:', error);\r\n      }\r\n    },\r\n    // Obtener la lista de seguidos\r\n    async fetchFollowing() {\r\n      try {\r\n        const response = await ApiService.get(`/follow/${this.targetUserId}/following`);\r\n        this.following = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching following:', error);\r\n      }\r\n    },\r\n    // Toggle para mostrar/ocultar la lista de seguidores\r\n    toggleFollowersList() {\r\n      this.showFollowers = !this.showFollowers;\r\n      if (this.showFollowers) {\r\n        this.fetchFollowers();\r\n      }\r\n    },\r\n    // Toggle para mostrar/ocultar la lista de seguidos\r\n    toggleFollowingList() {\r\n      this.showFollowing = !this.showFollowing;\r\n      if (this.showFollowing) {\r\n        this.fetchFollowing();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.follow-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n}\r\n\r\n.follow-actions {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.followers, .following {\r\n  margin: 20px 0;\r\n}\r\n\r\n.followers-list, .following-list {\r\n  margin-top: 10px;\r\n}\r\n\r\n.profile-img {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}