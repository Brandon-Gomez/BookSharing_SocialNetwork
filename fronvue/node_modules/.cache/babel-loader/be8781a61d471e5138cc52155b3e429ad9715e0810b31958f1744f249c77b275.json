{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [!$data.isFollowing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.followUser && $options.followUser(...args))\n  }, \" Seguir \")) : _createCommentVNode(\"v-if\", true), $data.isFollowing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"btn btn-secondary\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.unfollowUser && $options.unfollowUser(...args))\n  }, \" Dejar de seguir \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","$data","isFollowing","key","class","onClick","_cache","args","$options","followUser","_createCommentVNode","unfollowUser"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\follow_component.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"follow-container\">\r\n      \r\n      <div class=\"followers\">\r\n        <h3>Followers</h3>\r\n        <p>{{ followerCount }} Followers</p>\r\n        <button @click=\"toggleFollowersList\">View Followers</button>\r\n  \r\n        \r\n        <div v-if=\"showFollowers\" class=\"followers-list\">\r\n          <ul>\r\n            <li v-for=\"follower in followers\" :key=\"follower.id\">\r\n              <img :src=\"follower.profile_picture\" alt=\"profile\" class=\"profile-img\" />\r\n              <p>{{ follower.name }}</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n  \r\n      \r\n      <div class=\"following\">\r\n        <h3>Following</h3>\r\n        <p>{{ followingCount }} Following</p>\r\n        <button @click=\"toggleFollowingList\">View Following</button>\r\n  \r\n        \r\n        <div v-if=\"showFollowing\" class=\"following-list\">\r\n          <ul>\r\n            <li v-for=\"followed in following\" :key=\"followed.id\">\r\n              <img :src=\"followed.profile_picture\" alt=\"profile\" class=\"profile-img\" />\r\n              <p>{{ followed.name }}</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import ApiService from '@/services/ApiService'; // Asegúrate de que ApiService esté configurado correctamente\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        followerCount: 0,\r\n        followingCount: 0,\r\n        followers: [],\r\n        following: [],\r\n        showFollowers: false,\r\n        showFollowing: false,\r\n      };\r\n    },\r\n    props: {\r\n      userId: {\r\n        type: Number,\r\n        required: true,\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchFollowerCount();\r\n      this.fetchFollowingCount();\r\n    },\r\n    methods: {\r\n      // Obtener la cantidad de seguidores\r\n      async fetchFollowerCount() {\r\n        try {\r\n          const response = await ApiService.get(`/follow/${this.userId}/followers/count`);\r\n          this.followerCount = response.data.followerCount;\r\n        } catch (error) {\r\n          console.error('Error fetching follower count:', error);\r\n        }\r\n      },\r\n      // Obtener la cantidad de seguidos\r\n      async fetchFollowingCount() {\r\n        try {\r\n          const response = await ApiService.get(`/follow/${this.userId}/following/count`);\r\n          this.followingCount = response.data.followingCount;\r\n        } catch (error) {\r\n          console.error('Error fetching following count:', error);\r\n        }\r\n      },\r\n      // Obtener la lista de seguidores\r\n      async fetchFollowers() {\r\n        try {\r\n          const response = await ApiService.get(`/follow/${this.userId}/followers`);\r\n          this.followers = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching followers:', error);\r\n        }\r\n      },\r\n      // Obtener la lista de seguidos\r\n      async fetchFollowing() {\r\n        try {\r\n          const response = await ApiService.get(`/follow/${this.userId}/following`);\r\n          this.following = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching following:', error);\r\n        }\r\n      },\r\n      // Toggle para mostrar/ocultar la lista de seguidores\r\n      toggleFollowersList() {\r\n        this.showFollowers = !this.showFollowers;\r\n        if (this.showFollowers) {\r\n          this.fetchFollowers();\r\n        }\r\n      },\r\n      // Toggle para mostrar/ocultar la lista de seguidos\r\n      toggleFollowingList() {\r\n        this.showFollowing = !this.showFollowing;\r\n        if (this.showFollowing) {\r\n          this.fetchFollowing();\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .follow-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin: 20px;\r\n  }\r\n  \r\n  .followers, .following {\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  h3 {\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .followers-list, .following-list {\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .profile-img {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  </style> -->\r\n  \r\n\r\n\r\n  <template>\r\n    <div>\r\n      <button\r\n        v-if=\"!isFollowing\"\r\n        class=\"btn btn-primary\"\r\n        @click=\"followUser\"\r\n      >\r\n        Seguir\r\n      </button>\r\n      <button\r\n        v-if=\"isFollowing\"\r\n        class=\"btn btn-secondary\"\r\n        @click=\"unfollowUser\"\r\n      >\r\n        Dejar de seguir\r\n      </button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from \"@/services/ApiService\";\r\n  \r\n  export default {\r\n    props: {\r\n      username: String, // El nombre de usuario al que seguir\r\n    },\r\n    data() {\r\n      return {\r\n        isFollowing: false, // Si ya sigues al usuario\r\n      };\r\n    },\r\n    methods: {\r\n      async followUser() {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        try {\r\n          const response = await apiClient.post(\r\n            `/follow/${this.username}`,\r\n            {},\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            }\r\n          );\r\n          if (response.status === 200) {\r\n            this.isFollowing = true;\r\n            this.$emit(\"update-followers\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error follow user:\", error);\r\n        }\r\n      },\r\n      async unfollowUser() {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        try {\r\n          const response = await apiClient.delete(\r\n            `/follow/${this.username}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            }\r\n          );\r\n          if (response.status === 200) {\r\n            this.isFollowing = false;\r\n            this.$emit(\"update-followers\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error unfollow user:\", error);\r\n        }\r\n      },\r\n      async checkIfFollowing() {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        try {\r\n          const response = await apiClient.get(`/follow/check/${this.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          this.isFollowing = response.data.isFollowing;\r\n        } catch (error) {\r\n          console.error(\"Error checking follow status:\", error);\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.checkIfFollowing();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .btn {\r\n    margin: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;uBA4KIA,mBAAA,CAeM,c,CAbKC,KAAA,CAAAC,WAAW,I,cADpBF,mBAAA,CAMS;IAnLfG,GAAA;IA+KQC,KAAK,EAAC,iBAAiB;IACtBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KACnB,UAED,KAnLNG,mBAAA,gBAqLcT,KAAA,CAAAC,WAAW,I,cADnBF,mBAAA,CAMS;IA1LfG,GAAA;IAsLQC,KAAK,EAAC,mBAAmB;IACxBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,YAAA,IAAAH,QAAA,CAAAG,YAAA,IAAAJ,IAAA,CAAY;KACrB,mBAED,KA1LNG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}