{"ast":null,"code":"import apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: {\n        name: '',\n        description: '',\n        profilePicture: '',\n        blog: '',\n        location: ''\n      },\n      username: this.$route.params.username,\n      // Tomamos el username de la ruta\n      currentUser: null,\n      // Guardaremos el usuario autenticado\n      publications: 0,\n      // Datos ficticios para publicaciones\n      followers: 843,\n      // Datos ficticios para seguidores\n      following: 1176 // Datos ficticios para seguidos\n    };\n  },\n  computed: {\n    isCurrentUser() {\n      // Verifica si el usuario autenticado es el mismo que está viendo el perfil\n      return this.currentUser && this.currentUser.username === this.username;\n    }\n  },\n  async mounted() {\n    const token = localStorage.getItem('authToken'); // Obtenemos el token de autenticación\n    if (token) {\n      try {\n        // Obtener el perfil del usuario que se está viendo\n        const profileResponse = await apiClient.get(`/profile/${this.username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.profileData = profileResponse.data.user; // Guardamos los datos del perfil\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error);\n      }\n    } else {\n      console.error(\"No auth token found\");\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","name","description","profilePicture","blog","location","username","$route","params","currentUser","publications","followers","following","computed","isCurrentUser","mounted","token","localStorage","getItem","profileResponse","get","headers","Authorization","user","error","console"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\profile_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"profile-header\">\r\n      <img \r\n        :src=\"profileData.profilePicture || 'https://via.placeholder.com/150'\" \r\n        class=\"profile-image\" \r\n        alt=\"Profile Picture\" \r\n      />\r\n      <div class=\"profile-info\">\r\n        <h1>{{ profileData.name }}</h1>\r\n        <p><strong>{{ username || 'No disponible' }}</strong></p>\r\n        <div class=\"profile-stats\">\r\n          <span>{{ publications }} publicaciones</span>\r\n          <span>{{ followers }} seguidores</span>\r\n          <span>{{ following }} seguidos</span>\r\n        </div>\r\n        <p v-if=\"profileData.description\">{{ profileData.description }}</p>\r\n        \r\n        <!-- Mostrar el botón de editar solo si el usuario autenticado es el mismo -->\r\n        <router-link \r\n          v-if=\"isCurrentUser\" \r\n          :to=\"`/profile/${username}/edit-account`\" \r\n          class=\"btn btn-primary\"\r\n        >\r\n          Editar perfil\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n    <div class=\"profile-bio\">\r\n      <p>Blog personal: <span>{{ profileData.blog || 'No disponible' }}</span></p>\r\n      <p><span class=\"location\">{{ profileData.location || 'No disponible' }}</span></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        description: '',\r\n        profilePicture: '',\r\n        blog: '',\r\n        location: ''\r\n      },\r\n      username: this.$route.params.username, // Tomamos el username de la ruta\r\n      currentUser: null, // Guardaremos el usuario autenticado\r\n      publications: 0,   // Datos ficticios para publicaciones\r\n      followers: 843,    // Datos ficticios para seguidores\r\n      following: 1176    // Datos ficticios para seguidos\r\n    };\r\n  },\r\n  computed: {\r\n    isCurrentUser() {\r\n      // Verifica si el usuario autenticado es el mismo que está viendo el perfil\r\n      return this.currentUser && this.currentUser.username === this.username;\r\n    }\r\n  },\r\n  async mounted() {\r\n    const token = localStorage.getItem('authToken'); // Obtenemos el token de autenticación\r\n    if (token) {\r\n      try {\r\n        \r\n        // Obtener el perfil del usuario que se está viendo\r\n        const profileResponse = await apiClient.get(`/profile/${this.username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.profileData = profileResponse.data.user; // Guardamos los datos del perfil\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    } else {\r\n      console.error(\"No auth token found\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.profile-image {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n}\r\n\r\n.profile-info {\r\n  flex-grow: 1;\r\n}\r\n\r\n.profile-stats {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n}\r\n\r\n.profile-bio {\r\n  margin-top: 20px;\r\n  border-top: 1px solid #ddd;\r\n  padding-top: 10px;\r\n}\r\n\r\n.btn {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAoCA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,cAAc,EAAE,EAAE;QAClBC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ,CAAC;MACDC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAQ;MAAE;MACvCG,WAAW,EAAE,IAAI;MAAE;MACnBC,YAAY,EAAE,CAAC;MAAI;MACnBC,SAAS,EAAE,GAAG;MAAK;MACnBC,SAAS,EAAE,IAAG,CAAK;IACrB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd;MACA,OAAO,IAAI,CAACL,WAAU,IAAK,IAAI,CAACA,WAAW,CAACH,QAAO,KAAM,IAAI,CAACA,QAAQ;IACxE;EACF,CAAC;EACD,MAAMS,OAAOA,CAAA,EAAG;IACd,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;IACjD,IAAIF,KAAK,EAAE;MACT,IAAI;QAEF;QACA,MAAMG,eAAc,GAAI,MAAMrB,SAAS,CAACsB,GAAG,CAAC,YAAY,IAAI,CAACd,QAAQ,EAAE,EAAE;UACvEe,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAAChB,WAAU,GAAImB,eAAe,CAACpB,IAAI,CAACwB,IAAI,EAAE;MAEhD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,OAAO;MACLC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}