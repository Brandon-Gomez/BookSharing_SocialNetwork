{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_3 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_4 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = [\"href\"];\nconst _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"Editar Publicación\", -1 /* HOISTED */)), $data.postData ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.updatePost && $options.updatePost(...args), [\"prevent\"])),\n    class: \"mt-4\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Título\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.postData.title = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.postData.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.postData.description = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.postData.description]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"image\"\n  }, \"Imagen actual\", -1 /* HOISTED */)), $data.postData.image ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: $data.postData.image,\n    alt: \"Imagen actual\",\n    class: \"img-thumbnail mb-2\",\n    style: {\n      \"max-width\": \"200px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"image\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.onImageChange && $options.onImageChange(...args)),\n    class: \"form-control\",\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"pdf\"\n  }, \"Archivo PDF actual\", -1 /* HOISTED */)), $data.postData.pdf_file ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"a\", {\n    href: $data.postData.pdf_file,\n    target: \"_blank\"\n  }, \"Ver PDF\", 8 /* PROPS */, _hoisted_9)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"pdf\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.onPdfChange && $options.onPdfChange(...args)),\n    class: \"form-control\",\n    accept: \"application/pdf\"\n  }, null, 32 /* NEED_HYDRATION */)]), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Guardar Cambios\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary ml-3\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.cancel && $options.cancel(...args))\n  }, \"Cancelar\")], 32 /* NEED_HYDRATION */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[11] || (_cache[11] = [_createElementVNode(\"p\", null, \"Cargando publicación...\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","postData","onSubmit","_cache","_withModifiers","args","$options","updatePost","_hoisted_2","for","type","id","$event","title","required","_hoisted_3","description","_hoisted_4","image","_hoisted_5","src","alt","style","_hoisted_6","_createCommentVNode","onChange","onImageChange","accept","_hoisted_7","pdf_file","_hoisted_8","href","target","_hoisted_9","onPdfChange","onClick","cancel","_hoisted_10"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\admin\\post-edit_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-4\">\r\n        <h2>Editar Publicación</h2>\r\n        <form @submit.prevent=\"updatePost\" class=\"mt-4\" v-if=\"postData\">\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"title\">Título</label>\r\n                <input type=\"text\" id=\"title\" v-model=\"postData.title\" class=\"form-control\" required />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"description\">Descripción</label>\r\n                <textarea id=\"description\" v-model=\"postData.description\" class=\"form-control\" required></textarea>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"image\">Imagen actual</label>\r\n                <div v-if=\"postData.image\">\r\n                    <img :src=\"postData.image\" alt=\"Imagen actual\" class=\"img-thumbnail mb-2\"\r\n                        style=\"max-width: 200px;\" />\r\n                </div>\r\n                <input type=\"file\" id=\"image\" @change=\"onImageChange\" class=\"form-control\" accept=\"image/*\" />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"pdf\">Archivo PDF actual</label>\r\n                <div v-if=\"postData.pdf_file\">\r\n                    <a :href=\"postData.pdf_file\" target=\"_blank\">Ver PDF</a>\r\n                </div>\r\n                <input type=\"file\" id=\"pdf\" @change=\"onPdfChange\" class=\"form-control\" accept=\"application/pdf\" />\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n            <button type=\"button\" class=\"btn btn-secondary ml-3\" @click=\"cancel\">Cancelar</button>\r\n        </form>\r\n        <div v-else>\r\n            <p>Cargando publicación...</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport eventBus from \"@/eventBus.js\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            postData: null,\r\n            image: null,\r\n            pdf: null,\r\n        };\r\n    },\r\n    methods: {\r\n        async fetchPost() {\r\n            try {\r\n                const token = localStorage.getItem(\"authToken\");\r\n                const postId = this.$route.params.postId;\r\n                const response = await apiClient.get(`/posts/${postId}`, {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n                this.postData = response.data;\r\n            } catch (error) {\r\n                console.error(\"Error al obtener la publicación:\", error.response?.data || error);\r\n                alert(\"Error al obtener la publicación.\");\r\n            }\r\n        },\r\n        onImageChange(event) {\r\n            this.image = event.target.files[0];\r\n        },\r\n        onPdfChange(event) {\r\n            this.pdf = event.target.files[0];\r\n        },\r\n        async updatePost() {\r\n            try {\r\n                const token = localStorage.getItem(\"authToken\");\r\n                const postId = this.$route.params.postId;\r\n                const formData = new FormData();\r\n                formData.append(\"title\", this.postData.title);\r\n                formData.append(\"description\", this.postData.description);\r\n                if (this.image) formData.append(\"images\", this.image);\r\n                if (this.pdf) formData.append(\"pdf\", this.pdf);\r\n\r\n                await apiClient.put(`/posts/${postId}`, formData, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"multipart/form-data\"\r\n                    }\r\n                });\r\n                this.$router.push({\r\n                    path: \"/admin/posts-list\",\r\n                    query: { alert: \"Publicación actualizada exitosamente\", type: \"success\" }\r\n                });\r\n                alert(\"Publicación actualizada exitosamente\");\r\n                this.$router.push(\"/admin/posts-list\");\r\n            } catch (error) {\r\n                console.error(\"Error al actualizar la publicación:\", error.response?.data || error);\r\n                alert(\"Error al actualizar la publicación.\");\r\n            }\r\n        },\r\n        cancel() {\r\n            this.$router.push(\"/admin/posts-list\");\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchPost();\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    max-width: 600px;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAGdA,KAAK,EAAC;AAAiB;;EAIvBA,KAAK,EAAC;AAAiB;;EAIvBA,KAAK,EAAC;AAAiB;;EAZxCC,GAAA;AAAA;mBAAA;;EAoBiBD,KAAK,EAAC;AAAiB;;EApBxCC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAgCM,OAhCNC,UAgCM,G,4BA/BFC,mBAAA,CAA2B,YAAvB,oBAAkB,sBACgCC,KAAA,CAAAC,QAAQ,I,cAA9DJ,mBAAA,CA0BO;IA7BfD,GAAA;IAGeM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHrBC,cAAA,KAAAC,IAAA,KAG+BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEV,KAAK,EAAC;MACrCI,mBAAA,CAGM,OAHNS,UAGM,G,0BAFFT,mBAAA,CAAiC;IAA1BU,GAAG,EAAC;EAAO,GAAC,QAAM,sB,gBACzBV,mBAAA,CAAuF;IAAhFW,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAN7C,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAMuDZ,KAAA,CAAAC,QAAQ,CAACY,KAAK,GAAAD,MAAA;IAAEjB,KAAK,EAAC,cAAc;IAACmB,QAAQ,EAAR;iDAArCd,KAAA,CAAAC,QAAQ,CAACY,KAAK,E,KAEzDd,mBAAA,CAGM,OAHNgB,UAGM,G,0BAFFhB,mBAAA,CAA4C;IAArCU,GAAG,EAAC;EAAa,GAAC,aAAW,sB,gBACpCV,mBAAA,CAAmG;IAAzFY,EAAE,EAAC,aAAa;IAV1C,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAUoDZ,KAAA,CAAAC,QAAQ,CAACe,WAAW,GAAAJ,MAAA;IAAEjB,KAAK,EAAC,cAAc;IAACmB,QAAQ,EAAR;iDAA3Cd,KAAA,CAAAC,QAAQ,CAACe,WAAW,E,KAE5DjB,mBAAA,CAOM,OAPNkB,UAOM,G,0BANFlB,mBAAA,CAAwC;IAAjCU,GAAG,EAAC;EAAO,GAAC,eAAa,sBACrBT,KAAA,CAAAC,QAAQ,CAACiB,KAAK,I,cAAzBrB,mBAAA,CAGM,OAjBtBsB,UAAA,GAeoBpB,mBAAA,CACgC;IAD1BqB,GAAG,EAAEpB,KAAA,CAAAC,QAAQ,CAACiB,KAAK;IAAEG,GAAG,EAAC,eAAe;IAAC1B,KAAK,EAAC,oBAAoB;IACrE2B,KAAyB,EAAzB;MAAA;IAAA;0BAhBxBC,UAAA,E,KAAAC,mBAAA,gBAkBgBzB,mBAAA,CAA8F;IAAvFW,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAAEc,QAAM,EAAAtB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAoB,aAAA,IAAApB,QAAA,CAAAoB,aAAA,IAAArB,IAAA,CAAa;IAAEV,KAAK,EAAC,cAAc;IAACgC,MAAM,EAAC;uCAEtF5B,mBAAA,CAMM,OANN6B,UAMM,G,0BALF7B,mBAAA,CAA2C;IAApCU,GAAG,EAAC;EAAK,GAAC,oBAAkB,sBACxBT,KAAA,CAAAC,QAAQ,CAAC4B,QAAQ,I,cAA5BhC,mBAAA,CAEM,OAxBtBiC,UAAA,GAuBoB/B,mBAAA,CAAwD;IAApDgC,IAAI,EAAE/B,KAAA,CAAAC,QAAQ,CAAC4B,QAAQ;IAAEG,MAAM,EAAC;KAAS,SAAO,iBAvBxEC,UAAA,E,KAAAT,mBAAA,gBAyBgBzB,mBAAA,CAAkG;IAA3FW,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,KAAK;IAAEc,QAAM,EAAAtB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAA4B,WAAA,IAAA5B,QAAA,CAAA4B,WAAA,IAAA7B,IAAA,CAAW;IAAEV,KAAK,EAAC,cAAc;IAACgC,MAAM,EAAC;mEAElF5B,mBAAA,CAAsE;IAA9DW,IAAI,EAAC,QAAQ;IAACf,KAAK,EAAC;KAAkB,iBAAe,sBAC7DI,mBAAA,CAAsF;IAA9EW,IAAI,EAAC,QAAQ;IAACf,KAAK,EAAC,wBAAwB;IAAEwC,OAAK,EAAAhC,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAA8B,MAAA,IAAA9B,QAAA,CAAA8B,MAAA,IAAA/B,IAAA,CAAM;KAAE,UAAQ,E,6CAEjFR,mBAAA,CAEM,OAhCdwC,WAAA,EAAAlC,MAAA,SAAAA,MAAA,QA+BYJ,mBAAA,CAA8B,WAA3B,yBAAuB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}