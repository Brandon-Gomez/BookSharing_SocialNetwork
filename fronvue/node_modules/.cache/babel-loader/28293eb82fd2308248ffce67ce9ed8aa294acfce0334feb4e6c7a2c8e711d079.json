{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  components: {},\n  data() {\n    return {\n      isCurrentUser: false,\n      profileData: {\n        name: '',\n        birthdate: '',\n        gender: '',\n        description: '',\n        edad: ''\n      },\n      form: {\n        photo: []\n      },\n      profilePhoto: []\n    };\n  },\n  mounted() {\n    this.fetchUser();\n    this.profileData = JSON.parse(localStorage.getItem('profileData'));\n    this.profileData.birthdate = this.formatDate(this.profileData.birthdate);\n  },\n  methods: {\n    async fetchUser() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const username = this.$route.params.username;\n        const response = await apiClient.get(`/profile/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"User data:\", response.data);\n        this.profileData = response.data.user;\n        // Formatea la fecha para el input date\n        if (this.profileData.birthdate) {\n          this.profileData.birthdate = this.profileData.birthdate.split('T')[0];\n        }\n        // this.profileData = {\n        //   ... this.profileData,\n        //   password: \"\"\n        // };\n        this.isCurrentUser = response.data.isCurrentUser;\n\n        // Obtener seguidores y seguidos\n        // if (user.id) {\n        //   // Seguidores\n        //   const resFollowers = await apiClient.get(`/follow/followers/count/${user.id}`, {\n        //     headers: { Authorization: `Bearer ${token}` }\n        //   });\n        //   this.follows.followers = resFollowers.data.followerCount || 0;\n\n        //   // Seguidos\n        //   const resFollowing = await apiClient.get(`/follow/following/count/${user.id}`, {\n        //     headers: { Authorization: `Bearer ${token}` }\n        //   });\n        //   this.follows.following = resFollowing.data.followingCount || 0;\n        // }\n      } catch (error) {\n        console.error(\"Error al obtener el usuario:\", error.response?.data || error);\n        alert(\"Error al obtener los datos del usuario.\");\n      }\n    },\n    async updateProfile() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          const response = await apiClient.put(`/profile/${this.profileData.username}/edit-account`, this.profileData, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Profile updated successfully:', response.data);\n          if (this.form.photo.length > 0) {\n            const formData = new FormData();\n            formData.append('photo', this.form.photo[0]);\n            const responsePhoto = await apiClient.post(`/upload/profile`, formData, {\n              headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            console.log('Profile photo updated successfully:', responsePhoto.data);\n          }\n          this.$router.push(`/profile/${this.profileData.username}`).then(() => {\n            window.location.reload();\n          });\n        } catch (error) {\n          console.error('Error updating profile:', error);\n        }\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) dateString = \"2000-01-02\";\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // Mes en formato 2 dígitos\n      const day = String(date.getDate()).padStart(2, '0'); // Día en formato 2 dígitos\n      return `${year}-${month}-${day}`;\n    },\n    handleFileUpload(event) {\n      const files = Array.from(event.target.files);\n      this.form.photo = files; // Almacena las imágenes seleccionadas\n      this.profilePhoto = files.map(file => ({\n        name: file.name,\n        previewURL: URL.createObjectURL(file)\n      }));\n    }\n  }\n};","map":{"version":3,"names":["apiClient","components","data","isCurrentUser","profileData","name","birthdate","gender","description","edad","form","photo","profilePhoto","mounted","fetchUser","JSON","parse","localStorage","getItem","formatDate","methods","token","username","$route","params","response","get","headers","Authorization","console","log","user","split","error","alert","updateProfile","put","length","formData","FormData","append","responsePhoto","post","$router","push","then","window","location","reload","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleFileUpload","event","files","Array","from","target","map","file","previewURL","URL","createObjectURL"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editprofile_component.vue"],"sourcesContent":["<template>\r\n\r\n  <!-- <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card shadow-lg p-4\">\r\n          <div class=\"card-body text-center\">\r\n            <h2 class=\"mb-4\">Editar perfil</h2>\r\n            <form @submit.prevent=\"updateProfile\">\r\n\r\n              <div class=\"form-group col-lg-6 col-md-6 col-sm-12 d-flex flex-column mb-4 file-input\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"profileImageInput\" @change=\"handleFileUpload\">\r\n                <div class=\"file-input-preview\">\r\n                  <div v-if=\"profilePhoto\">\r\n                    <img :src=\"profilePhoto\" alt=\"Preview\" class=\"preview-image\">\r\n                  </div>\r\n                  <div v-else>\r\n                    <div class=\"placeholder-text\">Selecciona una imagen</div>\r\n                  </div>\r\n                </div>\r\n                <label class=\"btn btn-primary btn-rp fw-bold mt-3 fs-5 text-capitalize file-input-button\"\r\n                  for=\"profileImageInput\">\r\n                  <span class=\"bi bi-upload me-2\"></span>Cargar Imagen</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"name\">Nombre</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"profileData.name\" class=\"form-control\" />\r\n              </div>\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"edad\">Edad</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"profileData.edad\" class=\"form-control\" required />\r\n              </div>\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"dob\">dia</label>\r\n                <label for=\"dob\">Fecha de Nacimiento</label>\r\n                <input type=\"date\" id=\"dob\" v-model=\"profileData.birthdate\" class=\"form-control\" />\r\n              </div>\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"gender\">Género</label>\r\n                <select id=\"gender\" v-model=\"profileData.gender\" class=\"form-control\">\r\n                  <option value=\"Masculino\">Masculino</option>\r\n                  <option value=\"Femenino\">Femenino</option>\r\n                  <option value=\"Otro\">Otro</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"form-group mb-4\">\r\n                <label for=\"description\">Descripción</label>\r\n                <textarea id=\"description\" v-model=\"profileData.description\" class=\"form-control\" rows=\"3\"></textarea>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary w-100\">\r\n                Guardar cambios\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n\r\n\r\n  <div>\r\n    <div class=\"page-title-overlap bg-dark pt-4\">\r\n      <div\r\n        class=\"container d-flex flex-wrap flex-sm-nowrap justify-content-center justify-content-sm-between align-items-center pt-2\">\r\n        <div class=\"d-flex align-items-center pb-3\">\r\n          <div class=\"img-thumbnail rounded-circle position-relative flex-shrink-0\" style=\"width: 6.375rem;\"><img\r\n              class=\"rounded-circle\" src=\"img/marketplace/account/avatar.png\" alt=\"Createx Studio\"></div>\r\n          <div class=\"ps-3\">\r\n            <!-- <h3 class=\"text-light fs-lg mb-0\">{{ userData.name }}</h3>\r\n            <span class=\"d-block text-light fs-ms opacity-60 py-1\">@{{ userData.username }}</span> -->\r\n          </div>\r\n        </div>\r\n        <!-- Desktop version -->\r\n        <div class=\"d-none d-sm-flex\">\r\n          <div class=\"text-sm-end me-4\">\r\n            <!-- <div class=\"text-light fs-base\">{{ posts.length }}\r\n              <span class=\"text-muted fs-base pl-1\">Publicaciones</span>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"text-sm-end me-4\">\r\n            <!-- <div class=\"text-light fs-base \">{{ follows.followers }}<span\r\n                class=\"text-muted fs-base pl-1\">Seguidores</span>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"text-sm-end\">\r\n            <!-- <div class=\"text-light fs-base\">{{ follows.following }}<span class=\"text-muted fs-base pl-1\">Seguidos</span>\r\n            </div> -->\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"container mb-5 pb-3\">\r\n      <div class=\"bg-light shadow-lg rounded-3 overflow-hidden\">\r\n        <div class=\"row\">\r\n          <!-- Sidebar-->\r\n          <aside class=\"col-lg-4 pt-4 pt-lg-0 pe-xl-5\">\r\n            <div class=\"d-block d-lg-none p-4\"><a class=\"btn btn-outline-accent d-block\" href=\"#account-menu\"\r\n                data-bs-toggle=\"collapse\" aria-expanded=\"true\"><i class=\"ci-menu me-2\"></i>Account menu</a></div>\r\n            <div class=\"bg-white rounded-3 shadow-lg pt-1  mb-lg-0\">\r\n              <div class=\"d-lg-block collapse\" id=\"account-menu\">\r\n                <div class=\"bg-secondary px-4 py-3\">\r\n                  <h3 class=\"fs-sm mb-0 text-muted\">Cuenta</h3>\r\n                </div>\r\n                <ul class=\"list-unstyled mb-0\">\r\n                  <li class=\"border-bottom mb-0\">\r\n                    <a class=\"nav-link-style d-flex align-items-center px-4 py-3 \" href=\"#\">\r\n                      <i class=\"ci-book opacity-60 me-2\"></i>\r\n                      Publicaciones\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"border-bottom mb-0\">\r\n                    <a class=\"nav-link-style d-flex align-items-center px-4 py-3\" href=\"#\">\r\n                      <i class=\"ci-heart opacity-60 me-2\"></i>\r\n                      Favoritos\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <div v-if=\"isCurrentUser\">\r\n                  <div class=\"bg-secondary px-4 py-3\">\r\n                    <h3 class=\"fs-sm mb-0 text-muted\">Configuración</h3>\r\n                  </div>\r\n                  <ul class=\"list-unstyled mb-0\">\r\n                    <li class=\"border-bottom mb-0\">\r\n                      <a type=\"button\" class=\"nav-link-style d-flex align-items-center px-4 py-3\"\r\n                        @click.prevent=\"goToEditProfile\">\r\n                        <i class=\"ci-user opacity-60 me-2\"></i>\r\n                        Información personal\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"d-lg-none border-top mb-0\">\r\n                      <a class=\"nav-link-style d-flex align-items-center px-4 py-3\" href=\"#\" @click=\"logout\">\r\n                        <i class=\"ci-sign-out opacity-60 me-2\"></i>\r\n                        Cerrar sesión\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </aside>\r\n          <!-- Content-->\r\n          <section class=\"col-lg-8 pt-lg-4 pb-4 mb-3\">\r\n            <!-- Toolbar-->\r\n\r\n            <h2 class=\"h3 pt-2 pb-4 mb-0 text-center text-sm-start border-bottom\">Modificar perfil</h2>\r\n            <!-- content -->\r\n\r\n            <!-- Pagination-->\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  components: {\r\n  },\r\n  data() {\r\n    return {\r\n      isCurrentUser: false,\r\n      profileData: {\r\n        name: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: '',\r\n        edad: ''\r\n      },\r\n\r\n      form: {\r\n        photo: []\r\n      },\r\n      profilePhoto: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUser();\r\n    this.profileData = JSON.parse(localStorage.getItem('profileData'));\r\n    this.profileData.birthdate = this.formatDate(this.profileData.birthdate)\r\n  },\r\n  methods: {\r\n\r\n    async fetchUser() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const username = this.$route.params.username;\r\n        const response = await apiClient.get(`/profile/${username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        console.log(\"User data:\", response.data);\r\n        this.profileData = response.data.user;\r\n        // Formatea la fecha para el input date\r\n        if (this.profileData.birthdate) {\r\n          this.profileData.birthdate = this.profileData.birthdate.split('T')[0];\r\n        }\r\n        // this.profileData = {\r\n        //   ... this.profileData,\r\n        //   password: \"\"\r\n        // };\r\n        this.isCurrentUser = response.data.isCurrentUser;\r\n\r\n        // Obtener seguidores y seguidos\r\n        // if (user.id) {\r\n        //   // Seguidores\r\n        //   const resFollowers = await apiClient.get(`/follow/followers/count/${user.id}`, {\r\n        //     headers: { Authorization: `Bearer ${token}` }\r\n        //   });\r\n        //   this.follows.followers = resFollowers.data.followerCount || 0;\r\n\r\n        //   // Seguidos\r\n        //   const resFollowing = await apiClient.get(`/follow/following/count/${user.id}`, {\r\n        //     headers: { Authorization: `Bearer ${token}` }\r\n        //   });\r\n        //   this.follows.following = resFollowing.data.followingCount || 0;\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error al obtener el usuario:\", error.response?.data || error);\r\n        alert(\"Error al obtener los datos del usuario.\");\r\n      }\r\n    },\r\n    async updateProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          const response = await apiClient.put(`/profile/${this.profileData.username}/edit-account`, this.profileData, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          console.log('Profile updated successfully:', response.data);\r\n\r\n          if (this.form.photo.length > 0) {\r\n            const formData = new FormData();\r\n            formData.append('photo', this.form.photo[0]);\r\n            const responsePhoto = await apiClient.post(`/upload/profile`, formData, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'multipart/form-data',\r\n              }\r\n            });\r\n            console.log('Profile photo updated successfully:', responsePhoto.data);\r\n          }\r\n          this.$router.push(`/profile/${this.profileData.username}`).then(() => {\r\n            window.location.reload();\r\n          });\r\n\r\n        } catch (error) {\r\n          console.error('Error updating profile:', error);\r\n        }\r\n      }\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) dateString = \"2000-01-02\"\r\n      const date = new Date(dateString);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // Mes en formato 2 dígitos\r\n      const day = String(date.getDate()).padStart(2, '0'); // Día en formato 2 dígitos\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    handleFileUpload(event) {\r\n      const files = Array.from(event.target.files);\r\n      this.form.photo = files; // Almacena las imágenes seleccionadas\r\n      this.profilePhoto = files.map((file) => ({\r\n        name: file.name,\r\n        previewURL: URL.createObjectURL(file),\r\n      }));\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.file-input {\r\n  position: relative;\r\n  width: 100%;\r\n  /* Permitir que el contenedor ocupe el ancho completo */\r\n}\r\n\r\n.file-input input[type=\"file\"] {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  /* Ocupa todo el ancho del contenedor */\r\n  height: 100%;\r\n  /* Ocupa toda la altura del contenedor */\r\n  opacity: 0;\r\n  /* Ocultar el input */\r\n  cursor: pointer;\r\n  /* Cambiar el cursor al pasar sobre el área de carga */\r\n}\r\n\r\n.file-input-preview {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* Permitir que los elementos se ajusten en múltiples filas */\r\n  gap: 10px;\r\n  /* Espacio entre elementos */\r\n  margin-top: 10px;\r\n  /* Espacio entre el input y la vista previa */\r\n}\r\n\r\n.preview-item {\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 100%;\r\n  /* Asegurar que no se desborde */\r\n  flex: 1 1 calc(33.33% - 10px);\r\n  /* Flexbox para ajustar el tamaño */\r\n  min-width: 80px;\r\n  /* Ancho mínimo para los elementos */\r\n  box-sizing: border-box;\r\n  /* Incluir padding y border en el tamaño total */\r\n}\r\n\r\n.preview-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n  /* Bordes redondeados para las imágenes */\r\n}\r\n\r\n.preview-filename {\r\n  margin-left: 10px;\r\n  overflow: hidden;\r\n  /* Ocultar texto que se desborde */\r\n  text-overflow: ellipsis;\r\n  /* Mostrar puntos suspensivos para el texto largo */\r\n  white-space: nowrap;\r\n  /* Evitar que el texto se divida en varias líneas */\r\n}\r\n\r\n.placeholder-text {\r\n  display: block;\r\n  color: #adb5bd;\r\n  text-align: center;\r\n}\r\n\r\n/* Responsividad */\r\n@media (max-width: 768px) {\r\n  .preview-item {\r\n    flex: 1 1 calc(50% - 10px);\r\n    /* Dos elementos en pantallas más pequeñas */\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .preview-item {\r\n    flex: 1 1 100%;\r\n    /* Un solo elemento en pantallas muy pequeñas */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}