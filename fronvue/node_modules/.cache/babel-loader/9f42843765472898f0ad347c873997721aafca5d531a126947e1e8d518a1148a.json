{"ast":null,"code":"import apiClient from \"@/services/ApiService\";\nexport default {\n  props: {\n    postId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isLiked: false,\n      likeCount: 0\n    };\n  },\n  // async created() {\n  //   await this.fetchLikeCount();\n  //   this.checkIfLiked();\n  // },\n  methods: {\n    async fetchLikeCount() {\n      try {\n        const response = await apiClient.get(`/like/count/${this.postId}`);\n        this.likeCount = response.data.likeCount;\n      } catch (error) {\n        console.error(\"Error fetching like count:\", error);\n      }\n    },\n    async toggleLike() {\n      try {\n        if (this.isLiked) {\n          await apiClient.delete(`/like/${this.postId}`);\n          this.likeCount--;\n        } else {\n          await apiClient.post(`/like`, {\n            postId: this.postId\n          });\n          this.likeCount++;\n        }\n        this.isLiked = !this.isLiked;\n      } catch (error) {\n        console.error(\"Error toggling like:\", error);\n      }\n    },\n    async checkIfLiked() {\n      try {\n        const response = await apiClient.get(`/like/${this.postId}`);\n        this.isLiked = response.data.isLiked;\n      } catch (error) {\n        console.error(\"Error checking if liked:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","postId","type","String","required","data","isLiked","likeCount","methods","fetchLikeCount","response","get","error","console","toggleLike","delete","post","checkIfLiked"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\like_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"like-container\">\r\n      <button @click=\"toggleLike\" :class=\"{ liked: isLiked }\">\r\n        <span v-if=\"isLiked\">üíñ</span>\r\n        <span v-else>ü§ç</span>\r\n      </button>\r\n      <span>{{ likeCount }} Me gusta</span>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from \"@/services/ApiService\";\r\n  \r\n  export default {\r\n    props: {\r\n      postId: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        isLiked: false,\r\n        likeCount: 0,\r\n      };\r\n    },\r\n    // async created() {\r\n    //   await this.fetchLikeCount();\r\n    //   this.checkIfLiked();\r\n    // },\r\n    methods: {\r\n      async fetchLikeCount() {\r\n        try {\r\n          const response = await apiClient.get(`/like/count/${this.postId}`);\r\n          this.likeCount = response.data.likeCount;\r\n        } catch (error) {\r\n          console.error(\"Error fetching like count:\", error);\r\n        }\r\n      },\r\n      async toggleLike() {\r\n        try {\r\n          if (this.isLiked) {\r\n            await apiClient.delete(`/like/${this.postId}`);\r\n            this.likeCount--;\r\n          } else {\r\n            await apiClient.post(`/like`, { postId: this.postId });\r\n            this.likeCount++;\r\n          }\r\n          this.isLiked = !this.isLiked;\r\n        } catch (error) {\r\n          console.error(\"Error toggling like:\", error);\r\n        }\r\n      },\r\n      async checkIfLiked() {\r\n        try {\r\n          const response = await apiClient.get(`/like/${this.postId}`);\r\n          this.isLiked = response.data.isLiked;\r\n        } catch (error) {\r\n          console.error(\"Error checking if liked:\", error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .like-container {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 1.5em;\r\n  }\r\n  button.liked {\r\n    color: red;\r\n  }\r\n  span {\r\n    margin-left: 0.5em;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAWE,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,SAAS,CAACY,GAAG,CAAC,eAAe,IAAI,CAACV,MAAM,EAAE,CAAC;QAClE,IAAI,CAACM,SAAQ,GAAIG,QAAQ,CAACL,IAAI,CAACE,SAAS;MAC1C,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,IAAI,IAAI,CAACR,OAAO,EAAE;UAChB,MAAMP,SAAS,CAACgB,MAAM,CAAC,SAAS,IAAI,CAACd,MAAM,EAAE,CAAC;UAC9C,IAAI,CAACM,SAAS,EAAE;QAClB,OAAO;UACL,MAAMR,SAAS,CAACiB,IAAI,CAAC,OAAO,EAAE;YAAEf,MAAM,EAAE,IAAI,CAACA;UAAO,CAAC,CAAC;UACtD,IAAI,CAACM,SAAS,EAAE;QAClB;QACA,IAAI,CAACD,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;MAC9B,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAMK,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMX,SAAS,CAACY,GAAG,CAAC,SAAS,IAAI,CAACV,MAAM,EAAE,CAAC;QAC5D,IAAI,CAACK,OAAM,GAAII,QAAQ,CAACL,IAAI,CAACC,OAAO;MACtC,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}