{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/LogoRM.png';\nconst _hoisted_1 = {\n  class: \"resetpassword fadeInDown\"\n};\nconst _hoisted_2 = {\n  id: \"formContent\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"fadeIn first\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    id: \"icon\",\n    alt: \"logo\"\n  })], -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Restablecer Contraseña\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.resetPassword && $options.resetPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    id: \"newPassword\",\n    class: \"fadeIn second\",\n    placeholder: \"Nueva Contraseña\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    id: \"confirmPassword\",\n    class: \"fadeIn third\",\n    placeholder: \"Confirmar Contraseña\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _cache[3] || (_cache[3] = _createElementVNode(\"input\", {\n    type: \"submit\",\n    class: \"fadeIn fourth\",\n    value: \"Restablecer Contraseña\"\n  }, null, -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["_imports_0","class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","src","alt","onSubmit","_cache","_withModifiers","args","$options","resetPassword","type","$event","$data","newPassword","placeholder","required","confirmPassword","value"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\resetpassword_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"resetpassword fadeInDown\">\r\n    <div id=\"formContent\">\r\n      <div class=\"fadeIn first\">\r\n        <img src=\"@/assets/LogoRM.png\" id=\"icon\" alt=\"logo\" />\r\n      </div>\r\n      <h2>Restablecer Contraseña</h2>\r\n      <form @submit.prevent=\"resetPassword\">\r\n        <div>\r\n          <input type=\"password\" v-model=\"newPassword\" id=\"newPassword\" class=\"fadeIn second\" placeholder=\"Nueva Contraseña\" required />\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" v-model=\"confirmPassword\" id=\"confirmPassword\" class=\"fadeIn third\" placeholder=\"Confirmar Contraseña\" required />\r\n        </div>\r\n        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Restablecer Contraseña\">\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async resetPassword() {\r\n      // Verificar si las contraseñas coinciden\r\n      if (this.newPassword !== this.confirmPassword) {\r\n        this.message = \"Las contraseñas no coinciden.\";\r\n        return;\r\n      }\r\n\r\n      const token = this.$route.query.token; // Obtener el token de los parámetros de la URL\r\n\r\n      if (!token) {\r\n        this.message = \"Token no válido o ausente.\";\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Llamar a la API para restablecer la contraseña\r\n        const response = await apiClient.post(\"/reset-password\", {\r\n          token: token,\r\n          newPassword: this.newPassword,\r\n        });\r\n        console.log(\"Response from API:\", response);\r\n        this.message = response.data.message || \"Contraseña restablecida correctamente.\";\r\n\r\n        // Redirigir al inicio de sesión después de un éxito\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error(\"Error during password reset:\", error);\r\n        this.message = error.response?.data?.error || \"Error al restablecer la contraseña.\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reset-password {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";OAIaA,UAAyB;;EAH/BC,KAAK,EAAC;AAA0B;;EAC9BC,EAAE,EAAC;AAAa;;uBADvBC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJC,mBAAA,CAcM,OAdNC,UAcM,G,0BAbJD,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAc,IACvBI,mBAAA,CAAsD;IAAjDE,GAAyB,EAAzBP,UAAyB;IAACE,EAAE,EAAC,MAAM;IAACM,GAAG,EAAC;qDAE/CH,mBAAA,CAA+B,YAA3B,wBAAsB,sBAC1BA,mBAAA,CAQO;IARAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPnBC,cAAA,KAAAC,IAAA,KAO6BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCP,mBAAA,CAEM,c,gBADJA,mBAAA,CAA8H;IAAvHU,IAAI,EAAC,UAAU;IAThC,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAS0CC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEd,EAAE,EAAC,aAAa;IAACD,KAAK,EAAC,eAAe;IAACkB,WAAW,EAAC,kBAAkB;IAACC,QAAQ,EAAR;iDAAnFH,KAAA,CAAAC,WAAW,E,KAE7Cb,mBAAA,CAEM,c,gBADJA,mBAAA,CAAyI;IAAlIU,IAAI,EAAC,UAAU;IAZhC,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAY0CC,KAAA,CAAAI,eAAe,GAAAL,MAAA;IAAEd,EAAE,EAAC,iBAAiB;IAACD,KAAK,EAAC,cAAc;IAACkB,WAAW,EAAC,sBAAsB;IAACC,QAAQ,EAAR;iDAA9FH,KAAA,CAAAI,eAAe,E,+BAEjDhB,mBAAA,CAA0E;IAAnEU,IAAI,EAAC,QAAQ;IAACd,KAAK,EAAC,eAAe;IAACqB,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}