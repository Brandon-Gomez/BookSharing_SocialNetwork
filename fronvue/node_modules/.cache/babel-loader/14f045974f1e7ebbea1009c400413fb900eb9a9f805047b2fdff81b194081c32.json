{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"edit-post-container container my-4 py-4\"\n};\nconst _hoisted_2 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_3 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_4 = {\n  class: \"form-group my-2\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"image-preview\"\n};\nconst _hoisted_6 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.post ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"Editar Publicación\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.updatePost && $options.updatePost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Título\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.post.title = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.post.description = $event),\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.description]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"photo\"\n  }, \"Imagen\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"photo\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    class: \"form-control\"\n  }, null, 32 /* NEED_HYDRATION */)]), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Guardar Cambios\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deletePost && $options.deletePost(...args)),\n    class: \"btn btn-danger ml-2\"\n  }, \"Eliminar Publicación\")], 32 /* NEED_HYDRATION */), $data.profilePhoto.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"h4\", null, \"Vista Previa de la Imagen:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.profilePhoto, image => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      src: image.previewURL,\n      key: image.name,\n      class: \"img-thumbnail\"\n    }, null, 8 /* PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$data","post","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","updatePost","_hoisted_2","for","type","id","$event","title","_hoisted_3","description","_hoisted_4","onChange","handleFileUpload","onClick","deletePost","profilePhoto","length","_hoisted_5","_Fragment","_renderList","image","src","previewURL","name","_hoisted_6","_createCommentVNode"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editpost_component.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"post\" class=\"edit-post-container container my-4 py-4\">\r\n    <h2>Editar Publicación</h2>\r\n    <form @submit.prevent=\"updatePost\">\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"title\">Título</label>\r\n        <input type=\"text\" id=\"title\" v-model=\"post.title\" class=\"form-control\" />\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"description\">Descripción</label>\r\n        <textarea id=\"description\" v-model=\"post.description\" class=\"form-control\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"photo\">Imagen</label>\r\n        <input type=\"file\" id=\"photo\" @change=\"handleFileUpload\" class=\"form-control\" />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n      <button @click=\"deletePost\" class=\"btn btn-danger ml-2\">Eliminar Publicación</button>\r\n    </form>\r\n    \r\n    <div v-if=\"profilePhoto.length > 0\" class=\"image-preview\">\r\n      <h4>Vista Previa de la Imagen:</h4>\r\n      <img v-for=\"image in profilePhoto\" :src=\"image.previewURL\" :key=\"image.name\" class=\"img-thumbnail\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  props: {\r\n    postId: String,\r\n  },\r\n  data() {\r\n    return {\r\n      post: {\r\n        title: '',\r\n        description: '',\r\n      },\r\n      form: {\r\n        photo: [],\r\n      },\r\n      profilePhoto: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n  methods: {\r\n    async fetchPost() {\r\n      try {\r\n        const response = await apiClient.get(`/posts/${this.postId}`);\r\n        this.post = response.data;\r\n        console.log(\"DATA OBTENIDA:\", response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching post:', error);\r\n      }\r\n    },\r\n    async updatePost() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          // Actualiza los datos del post\r\n          const response = await apiClient.put(`/posts/${this.postId}`, this.post, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          console.log('Post updated successfully:', response.data);\r\n          \r\n          // Si se subió una nueva imagen, manejar la carga\r\n          if (this.form.photo.length > 0) {\r\n            const formData = new FormData();\r\n            formData.append('photo', this.form.photo[0]);\r\n            const responsePhoto = await apiClient.post(`/upload/post`, formData, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'multipart/form-data',\r\n              },\r\n            });\r\n            console.log('Post photo updated successfully:', responsePhoto.data);\r\n          }\r\n          \r\n          this.$router.push(`/profile/${this.$route.params.username}`).then(() => {\r\n            window.location.reload();\r\n          });\r\n\r\n        } catch (error) {\r\n          console.error('Error updating post:', error);\r\n        }\r\n      }\r\n    },\r\n    handleFileUpload(event) {\r\n      const files = Array.from(event.target.files);\r\n      this.form.photo = files; // Almacena las imágenes seleccionadas\r\n      this.profilePhoto = files.map((file) => ({\r\n        name: file.name,\r\n        previewURL: URL.createObjectURL(file),\r\n      }));\r\n    },\r\n    async deletePost() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          await apiClient.delete(`/posts/${this.postId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          console.log('Post deleted successfully');\r\n          this.$router.push(`/profile/${this.$route.params.username}`);\r\n        } catch (error) {\r\n          console.error('Error deleting post:', error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n  \r\n  <style scoped>\r\n  .edit-post-container {\r\n    background-color: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAAAA,GAAA;EACmBC,KAAK,EAAC;;;EAGdA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAiB;;EAdlCD,GAAA;EAuBwCC,KAAK,EAAC;;mBAvB9C;;SACaC,KAAA,CAAAC,IAAI,I,cAAfC,mBAAA,CA0BM,OA1BNC,UA0BM,G,4BAzBJC,mBAAA,CAA2B,YAAvB,oBAAkB,sBACtBA,mBAAA,CAkBO;IAlBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BJ,mBAAA,CAGM,OAHNO,UAGM,G,0BAFJP,mBAAA,CAAiC;IAA1BQ,GAAG,EAAC;EAAO,GAAC,QAAM,sB,gBACzBR,mBAAA,CAA0E;IAAnES,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IANrC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAM+Cf,KAAA,CAAAC,IAAI,CAACe,KAAK,GAAAD,MAAA;IAAEhB,KAAK,EAAC;iDAAlBC,KAAA,CAAAC,IAAI,CAACe,KAAK,E,KAGnDZ,mBAAA,CAGM,OAHNa,UAGM,G,0BAFJb,mBAAA,CAA4C;IAArCQ,GAAG,EAAC;EAAa,GAAC,aAAW,sB,gBACpCR,mBAAA,CAAsF;IAA5EU,EAAE,EAAC,aAAa;IAXlC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAW4Cf,KAAA,CAAAC,IAAI,CAACiB,WAAW,GAAAH,MAAA;IAAEhB,KAAK,EAAC;iDAAxBC,KAAA,CAAAC,IAAI,CAACiB,WAAW,E,KAGtDd,mBAAA,CAGM,OAHNe,UAGM,G,0BAFJf,mBAAA,CAAiC;IAA1BQ,GAAG,EAAC;EAAO,GAAC,QAAM,sBACzBR,mBAAA,CAAgF;IAAzES,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAAEM,QAAM,EAAAd,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAY,gBAAA,IAAAZ,QAAA,CAAAY,gBAAA,IAAAb,IAAA,CAAgB;IAAET,KAAK,EAAC;iEAGjEK,mBAAA,CAAsE;IAA9DS,IAAI,EAAC,QAAQ;IAACd,KAAK,EAAC;KAAkB,iBAAe,sBAC7DK,mBAAA,CAAqF;IAA5EkB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,IAAAf,IAAA,CAAU;IAAET,KAAK,EAAC;KAAsB,sBAAoB,E,4BAGnEC,KAAA,CAAAwB,YAAY,CAACC,MAAM,Q,cAA9BvB,mBAAA,CAGM,OAHNwB,UAGM,G,0BAFJtB,mBAAA,CAAmC,YAA/B,4BAA0B,uB,kBAC9BF,mBAAA,CAAqGyB,SAAA,QAzB3GC,WAAA,CAyB2B5B,KAAA,CAAAwB,YAAY,EAArBK,KAAK;yBAAjB3B,mBAAA,CAAqG;MAAjE4B,GAAG,EAAED,KAAK,CAACE,UAAU;MAAGjC,GAAG,EAAE+B,KAAK,CAACG,IAAI;MAAEjC,KAAK,EAAC;4BAzBzFkC,UAAA;sCAAAC,mBAAA,e,KAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}