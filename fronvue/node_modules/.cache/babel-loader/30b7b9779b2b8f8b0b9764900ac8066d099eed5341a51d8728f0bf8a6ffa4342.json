{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  props: {\n    postId: String\n  },\n  data() {\n    return {\n      post: {\n        image: '',\n        pdf_file: '',\n        newImageFile: null,\n        newPdfFile: null\n      }\n    };\n  },\n  methods: {\n    async fetchPost() {\n      try {\n        const response = await apiClient.get(`/posts/${this.postId}`);\n        this.post = response.data;\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    },\n    handleImageUpload(event) {\n      this.newImageFile = event.target.files[0];\n    },\n    handlePdfUpload(event) {\n      this.newPdfFile = event.target.files[0];\n    },\n    async submitEdit() {\n      console.log(`Actualizando post en URL: /posts/${this.postId}`); // Verificar URL de la API\n      const formData = new FormData();\n      formData.append('title', this.post.title);\n      formData.append('description', this.post.description);\n      if (this.newImageFile) formData.append('image', this.newImageFile);\n      if (this.newPdfFile) formData.append('pdf_file', this.newPdfFile);\n      try {\n        await apiClient.put(`/posts/${this.postId}`, formData);\n        this.$router.push(`/profile/${this.$route.params.username}`);\n      } catch (error) {\n        console.error('Error al actualizar la publicación:', error);\n      }\n    },\n    async deletePost() {\n      try {\n        await apiClient.delete(`/posts/${this.postId}`);\n        this.$router.push(`/profile/${this.$route.params.username}`);\n      } catch (error) {\n        console.error('Error deleting post:', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchPost();\n    const localPost = localStorage.getItem('post');\n    if (localPost) {\n      this.post = JSON.parse(localPost);\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","postId","String","data","post","image","pdf_file","newImageFile","newPdfFile","methods","fetchPost","response","get","error","console","handleImageUpload","event","target","files","handlePdfUpload","submitEdit","log","formData","FormData","append","title","description","put","$router","push","$route","params","username","deletePost","delete","mounted","localPost","localStorage","getItem","JSON","parse"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editpost_component.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"post\" class=\"edit-post-container container my-4 py-4\">\r\n      <h2>Editar Publicación</h2>\r\n      <form @submit.prevent=\"submitEdit\">\r\n        <div class=\"form-group my-2\">\r\n          <label for=\"title\">Título</label>\r\n          <input type=\"text\" id=\"title\" v-model=\"post.title\" class=\"form-control\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group my-2\">\r\n          <label for=\"description\">Descripción</label>\r\n          <textarea id=\"description\" v-model=\"post.description\" class=\"form-control\"></textarea>\r\n        </div>\r\n  \r\n        <div class=\"form-group my-2\">\r\n          <label for=\"image\">Imagen</label>\r\n          <input type=\"file\" id=\"image\" @change=\"handleImageUpload\" class=\"form-control\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group my-2\">\r\n          <label for=\"pdf\">Archivo PDF</label>\r\n          <input type=\"file\" id=\"pdf\" @change=\"handlePdfUpload\" class=\"form-control\" />\r\n        </div>\r\n  \r\n        <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n        <button @click=\"deletePost\" class=\"btn btn-danger ml-2\">Eliminar Publicación</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from '@/services/ApiService';\r\n  \r\n  export default {\r\n    props: {\r\n      postId: String,\r\n    },\r\n    data() {\r\n      return {\r\n        post: { \r\n        image: '',\r\n        pdf_file: '',\r\n        newImageFile: null,\r\n        newPdfFile: null,\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchPost() {\r\n        try {\r\n          const response = await apiClient.get(`/posts/${this.postId}`);\r\n          this.post = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching post:', error);\r\n        }\r\n      },\r\n      handleImageUpload(event) {\r\n        this.newImageFile = event.target.files[0];\r\n      },\r\n      handlePdfUpload(event) {\r\n        this.newPdfFile = event.target.files[0];\r\n      },\r\n      async submitEdit() {\r\n  console.log(`Actualizando post en URL: /posts/${this.postId}`); // Verificar URL de la API\r\n  const formData = new FormData();\r\n  formData.append('title', this.post.title);\r\n  formData.append('description', this.post.description);\r\n  if (this.newImageFile) formData.append('image', this.newImageFile);\r\n  if (this.newPdfFile) formData.append('pdf_file', this.newPdfFile);\r\n\r\n  try {\r\n    await apiClient.put(`/posts/${this.postId}`, formData);\r\n    this.$router.push(`/profile/${this.$route.params.username}`);\r\n  } catch (error) {\r\n    console.error('Error al actualizar la publicación:', error);\r\n  }\r\n},\r\n\r\n      async deletePost() {\r\n        try {\r\n          await apiClient.delete(`/posts/${this.postId}`);\r\n          this.$router.push(`/profile/${this.$route.params.username}`);\r\n        } catch (error) {\r\n          console.error('Error deleting post:', error);\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchPost();\r\n      const localPost = localStorage.getItem('post');\r\n      if (localPost) {\r\n        this.post = JSON.parse(localPost);\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .edit-post-container {\r\n    background-color: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  </style>\r\n  "],"mappings":";AA+BE,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAEC;EACV,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,SAAS,CAACa,GAAG,CAAC,UAAU,IAAI,CAACX,MAAM,EAAE,CAAC;QAC7D,IAAI,CAACG,IAAG,GAAIO,QAAQ,CAACR,IAAI;MAC3B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDE,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACT,YAAW,GAAIS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IACDC,eAAeA,CAACH,KAAK,EAAE;MACrB,IAAI,CAACR,UAAS,GAAIQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzC,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACvBN,OAAO,CAACO,GAAG,CAAC,oCAAoC,IAAI,CAACpB,MAAM,EAAE,CAAC,EAAE;MAChE,MAAMqB,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpB,IAAI,CAACqB,KAAK,CAAC;MACzCH,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACpB,IAAI,CAACsB,WAAW,CAAC;MACrD,IAAI,IAAI,CAACnB,YAAY,EAAEe,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACjB,YAAY,CAAC;MAClE,IAAI,IAAI,CAACC,UAAU,EAAEc,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAAChB,UAAU,CAAC;MAEjE,IAAI;QACF,MAAMT,SAAS,CAAC4B,GAAG,CAAC,UAAU,IAAI,CAAC1B,MAAM,EAAE,EAAEqB,QAAQ,CAAC;QACtD,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,YAAY,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE,CAAC;MAC9D,EAAE,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAEK,MAAMoB,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMlC,SAAS,CAACmC,MAAM,CAAC,UAAU,IAAI,CAACjC,MAAM,EAAE,CAAC;QAC/C,IAAI,CAAC2B,OAAO,CAACC,IAAI,CAAC,YAAY,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE,CAAC;MAC9D,EAAE,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EACDsB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACzB,SAAS,CAAC,CAAC;IAChB,MAAM0B,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,IAAI,CAAChC,IAAG,GAAImC,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;IACnC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}