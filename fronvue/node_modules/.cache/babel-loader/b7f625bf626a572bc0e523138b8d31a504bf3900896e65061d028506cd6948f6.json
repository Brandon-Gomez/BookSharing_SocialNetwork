{"ast":null,"code":"import apiClient from '@/services/ApiService';\nexport default {\n  name: 'NavComponent',\n  data() {\n    return {\n      username: null // Aquí almacenaremos el nombre de usuario\n    };\n  },\n  methods: {\n    async fetchUserProfile() {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          const response = await apiClient.get(`/profile/${this.route.params.username}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data && response.data.user) {\n            this.username = response.data.user.username; // Asignar el nombre de usuario\n          }\n        }\n      } catch (error) {\n        console.error('Error al obtener el perfil del usuario:', error);\n      }\n    }\n    // logout() {\n    //   // Eliminar el token de autenticación o limpiar los datos de sesión\n    //   localStorage.removeItem('authToken');\n    //   localStorage.removeItem('profileData'); // Limpiar el perfil almacenado\n\n    //   // Redirigir al usuario a la página de login\n    //   this.$router.push('/login');\n    // },\n  },\n  mounted() {\n    this.fetchUserProfile();\n  }\n};","map":{"version":3,"names":["apiClient","name","data","username","methods","fetchUserProfile","token","localStorage","getItem","response","get","route","params","headers","Authorization","user","error","console","mounted"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\navbar_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <ul>\r\n      <!-- Enlace a Inicio -->\r\n      <li>\r\n        <router-link to=\"/\">Inicio</router-link>\r\n        <i class=\"fa fa-home\"></i>\r\n      </li>\r\n\r\n      <!-- Enlace al Perfil del usuario autenticado -->\r\n      <li>\r\n        <router-link :to=\"`/profile/${username}`\">Perfil</router-link>\r\n        <i class=\"fa fa-user\"></i>\r\n      </li>\r\n\r\n      <!-- Enlace a la búsqueda -->\r\n      <li>\r\n        <router-link to=\"/search\">Buscar</router-link>\r\n        <i class=\"fa fa-search\"></i>\r\n      </li>\r\n\r\n      <!-- Cerrar sesión -->\r\n      <li>\r\n        <a href=\"#\" @click.prevent=\"logout\">Cerrar sesión</a>\r\n        <i class=\"fa fa-sign-out\"></i>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  name: 'NavComponent',\r\n  data() {\r\n    return {\r\n      username: null, // Aquí almacenaremos el nombre de usuario\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUserProfile() {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n          const response = await apiClient.get(`/profile/${this.route.params.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (response.data && response.data.user) {\r\n            this.username = response.data.user.username; // Asignar el nombre de usuario\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener el perfil del usuario:', error);\r\n      }\r\n    },\r\n    // logout() {\r\n    //   // Eliminar el token de autenticación o limpiar los datos de sesión\r\n    //   localStorage.removeItem('authToken');\r\n    //   localStorage.removeItem('profileData'); // Limpiar el perfil almacenado\r\n\r\n    //   // Redirigir al usuario a la página de login\r\n    //   this.$router.push('/login');\r\n    // },\r\n  },\r\n  mounted() {\r\n    this.fetchUserProfile(); \r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.sidebar {\r\n  width: 200px;\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  position: fixed;\r\n  height: 100%;\r\n}\r\n\r\n.sidebar ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar li:hover {\r\n  background-color: #e9ecef;\r\n}\r\n</style>\r\n"],"mappings":"AA+BA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,IAAIF,KAAK,EAAE;UACT,MAAMG,QAAO,GAAI,MAAMT,SAAS,CAACU,GAAG,CAAC,YAAY,IAAI,CAACC,KAAK,CAACC,MAAM,CAACT,QAAQ,EAAE,EAAE;YAC7EU,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUR,KAAK;YAChC;UACF,CAAC,CAAC;UAEF,IAAIG,QAAQ,CAACP,IAAG,IAAKO,QAAQ,CAACP,IAAI,CAACa,IAAI,EAAE;YACvC,IAAI,CAACZ,QAAO,GAAIM,QAAQ,CAACP,IAAI,CAACa,IAAI,CAACZ,QAAQ,EAAE;UAC/C;QACF;MACF,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}