{"ast":null,"code":"import apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: {\n        name: '',\n        birthdate: '',\n        gender: '',\n        description: ''\n      },\n      username: this.$route.params.username // Obtener el nombre de usuario desde la URL\n    };\n  },\n  async mounted() {\n    await this.fetchProfileData(); // Cargar los datos del perfil cuando el componente se monte\n  },\n  watch: {\n    '$route.params.username': 'fetchProfileData' // Escuchar los cambios en la ruta\n  },\n  methods: {\n    async fetchProfileData() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          const response = await apiClient.get(`/profile/${this.username}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.profileData = response.data.msg; // Asignar los datos del perfil\n        } catch (error) {\n          console.error('Error fetching profile:', error);\n        }\n      }\n    }\n  },\n  beforeRouteEnter(to, from, next) {\n    // Ejecutar fetchProfileData antes de que el componente se monte\n    next(vm => {\n      vm.fetchProfileData();\n    });\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","name","birthdate","gender","description","username","$route","params","mounted","fetchProfileData","watch","methods","token","localStorage","getItem","response","get","headers","Authorization","msg","error","console","beforeRouteEnter","to","from","next","vm"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\profile_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card shadow-lg p-4\">\r\n          <div class=\"card-body text-center\">\r\n            <h2 class=\"mb-4\">Información del perfil</h2>\r\n            <div class=\"mb-3\">\r\n              <img src=\"https://via.placeholder.com/150\" class=\"rounded-circle img-thumbnail\" alt=\"Profile Picture\"/>\r\n            </div>\r\n            <p><strong>Nombre:</strong> {{ profileData.name }}</p>\r\n            <p><strong>Fecha de Nacimiento:</strong> {{ profileData.birthdate }}</p>\r\n            <p><strong>Género:</strong> {{ profileData.gender }}</p>\r\n            <p><strong>Descripción:</strong> {{ profileData.description }}</p>\r\n            <router-link :to=\"`/profile/${username}/edit-account`\" class=\"btn btn-primary w-100\">\r\n              Editar perfil\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: ''\r\n      },\r\n      username: this.$route.params.username // Obtener el nombre de usuario desde la URL\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchProfileData(); // Cargar los datos del perfil cuando el componente se monte\r\n  },\r\n  watch: {\r\n    '$route.params.username': 'fetchProfileData' // Escuchar los cambios en la ruta\r\n  },\r\n  methods: {\r\n    async fetchProfileData() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          const response = await apiClient.get(`/profile/${this.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.profileData = response.data.msg; // Asignar los datos del perfil\r\n        } catch (error) {\r\n          console.error('Error fetching profile:', error);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  beforeRouteEnter(to, from, next) {\r\n    // Ejecutar fetchProfileData antes de que el componente se monte\r\n    next(vm => {\r\n      vm.fetchProfileData();\r\n    });\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAyBA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE;MACf,CAAC;MACDC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAO,CAAE;IACxC,CAAC;EACH,CAAC;EACD,MAAMG,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAE;EACjC,CAAC;EACDC,KAAK,EAAE;IACL,wBAAwB,EAAE,kBAAiB,CAAE;EAC/C,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,gBAAgBA,CAAA,EAAG;MACvB,MAAMG,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAO,GAAI,MAAMjB,SAAS,CAACkB,GAAG,CAAC,YAAY,IAAI,CAACX,QAAQ,EAAE,EAAE;YAChEY,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUN,KAAK;YAChC;UACF,CAAC,CAAC;UACF,IAAI,CAACZ,WAAU,GAAIe,QAAQ,CAAChB,IAAI,CAACoB,GAAG,EAAE;QACxC,EAAE,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF;EACF,CAAC;EACDE,gBAAgBA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/B;IACAA,IAAI,CAACC,EAAC,IAAK;MACTA,EAAE,CAACjB,gBAAgB,CAAC,CAAC;IACvB,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}