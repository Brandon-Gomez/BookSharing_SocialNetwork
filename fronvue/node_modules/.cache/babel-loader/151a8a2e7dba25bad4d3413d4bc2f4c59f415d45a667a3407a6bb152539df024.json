{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"like-container\"\n};\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"ci-heart\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  xmlns: \"http://www.w3.org/2000/svg\",\n  version: \"1.1\",\n  width: \"14\",\n  height: \"14\",\n  viewBox: \"0 0 20 20\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.isLiked !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"btn-wishlist btn-sm ml-3\",\n    type: \"button\",\n    \"data-bs-toggle\": \"tooltip\",\n    \"data-bs-placement\": \"left\",\n    title: $data.isLiked ? 'Quitar de favoritos' : 'Añadir a favoritos',\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleLike && $options.toggleLike(...args))\n  }, [!$data.isLiked ? (_openBlock(), _createElementBlock(\"i\", _hoisted_3)) : (_openBlock(), _createElementBlock(\"svg\", _hoisted_4, _cache[1] || (_cache[1] = [_createElementVNode(\"path\", {\n    d: \"M10 3.22l-0.61-0.6c-0.983-0.931-2.314-1.504-3.779-1.504-3.038 0-5.5 2.462-5.5 5.5 0 1.462 0.571 2.791 1.501 3.776l-0.002-0.003 8.39 8.39 8.39-8.4c0.928-0.983 1.499-2.312 1.499-3.774 0-3.038-2.462-5.5-5.5-5.5-1.465 0-2.796 0.573-3.782 1.506l0.003-0.002-0.61 0.61z\",\n    fill: \"red\"\n  }, null, -1 /* HOISTED */)])))], 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", null, _toDisplayString($data.likeCount) + \" Me gusta\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","xmlns","version","width","height","viewBox","$data","isLiked","_createElementBlock","_hoisted_1","_createElementVNode","type","title","onClick","_cache","args","$options","toggleLike","_hoisted_3","_hoisted_4","d","fill","_hoisted_2","_toDisplayString","likeCount","_createCommentVNode"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\like_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"like-container\" v-if=\"isLiked !== null\">\r\n    <button\r\n      class=\"btn-wishlist btn-sm ml-3\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"tooltip\"\r\n      data-bs-placement=\"left\"\r\n      :title=\"isLiked ? 'Quitar de favoritos' : 'Añadir a favoritos'\"\r\n      @click=\"toggleLike\"\r\n    >\r\n      <i v-if=\"!isLiked\" class=\"ci-heart\"></i>\r\n      <svg v-else xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"14\" height=\"14\" viewBox=\"0 0 20 20\">\r\n        <path\r\n          d=\"M10 3.22l-0.61-0.6c-0.983-0.931-2.314-1.504-3.779-1.504-3.038 0-5.5 2.462-5.5 5.5 0 1.462 0.571 2.791 1.501 3.776l-0.002-0.003 8.39 8.39 8.39-8.4c0.928-0.983 1.499-2.312 1.499-3.774 0-3.038-2.462-5.5-5.5-5.5-1.465 0-2.796 0.573-3.782 1.506l0.003-0.002-0.61 0.61z\"\r\n          fill=\"red\"\r\n        />\r\n      </svg>\r\n    </button>\r\n    <span>{{ likeCount }} Me gusta</span>\r\n  </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from \"@/services/ApiService\";\r\n  \r\n  export default {\r\n    props: {\r\n      postId: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        isLiked: null, // Cambiar a null para evitar un valor inicial incorrecto\r\n        likeCount: 0,\r\n      };\r\n    },\r\n    async created() {\r\n      try {\r\n        // Obtén el contador de \"likes\" y verifica si el usuario ya ha dado like\r\n        await this.fetchLikeCount();\r\n        await this.checkIfLiked();\r\n      } catch (error) {\r\n        console.error(\"Error during initialization:\", error);\r\n      }\r\n    },\r\n    methods: {\r\n      // Obtiene el contador de \"likes\"\r\n      async fetchLikeCount() {\r\n        try {\r\n          const response = await apiClient.get(`/like/count/${this.postId}`);\r\n          this.likeCount = response.data.likeCount;\r\n        } catch (error) {\r\n          console.error(\"Error fetching like count:\", error);\r\n        }\r\n      },\r\n      // Cambia el estado del \"like\" (activar/desactivar)\r\n      async toggleLike() {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (!token) {\r\n          console.error(\"Authentication token not found\");\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          if (this.isLiked) {\r\n            // Quitar \"like\"\r\n            await apiClient.delete(`/like/${this.postId}`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n              data: { postId: this.postId },\r\n            });\r\n            this.likeCount--;\r\n            this.isLiked = false;\r\n          } else {\r\n            // Agregar \"like\"\r\n            await apiClient.post(\r\n              `/like`,\r\n              { postId: this.postId },\r\n              { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n            this.likeCount++;\r\n            this.isLiked = true;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error toggling like:\", error);\r\n        }\r\n      },\r\n      // Verifica si el usuario ya ha dado like\r\n      async checkIfLiked() {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (!token) {\r\n          console.error(\"Authentication token not found\");\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await apiClient.get(`/like/check/${this.postId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          this.isLiked = response.data.isLiked; // Establecemos el valor de isLiked con la respuesta de la API\r\n        } catch (error) {\r\n          console.error(\"Error checking if liked:\", error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;EAAAA,GAAA;EACOC,KAAK,EAAC;;mBADb;;EAAAD,GAAA;EAUyBC,KAAK,EAAC;;;EAV/BD,GAAA;EAWkBE,KAAK,EAAC,4BAA4B;EAACC,OAAO,EAAC,KAAK;EAACC,KAAK,EAAC,IAAI;EAACC,MAAM,EAAC,IAAI;EAACC,OAAO,EAAC;;;SAV9DC,KAAA,CAAAC,OAAO,a,cAAzCC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,CAeS;IAdPV,KAAK,EAAC,0BAA0B;IAChCW,IAAI,EAAC,QAAQ;IACb,gBAAc,EAAC,SAAS;IACxB,mBAAiB,EAAC,MAAM;IACvBC,KAAK,EAAEN,KAAA,CAAAC,OAAO;IACdM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;OAERT,KAAA,CAAAC,OAAO,I,cAAjBC,mBAAA,CAAwC,KAAxCU,UAAwC,M,cACxCV,mBAAA,CAKM,OALNW,UAKM,EAAAL,MAAA,QAAAA,MAAA,OAJJJ,mBAAA,CAGE;IAFAU,CAAC,EAAC,wQAAwQ;IAC1QC,IAAI,EAAC;kDAdfC,UAAA,GAkBIZ,mBAAA,CAAqC,cAAAa,gBAAA,CAA5BjB,KAAA,CAAAkB,SAAS,IAAG,WAAS,gB,KAlBlCC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}