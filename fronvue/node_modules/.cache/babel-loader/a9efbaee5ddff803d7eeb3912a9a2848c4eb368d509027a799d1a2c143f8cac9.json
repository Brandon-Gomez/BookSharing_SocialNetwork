{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container post-container my-4\"\n};\nconst _hoisted_2 = {\n  class: \"container py-4\"\n};\nconst _hoisted_3 = {\n  class: \"mb-3\"\n};\nconst _hoisted_4 = {\n  class: \"mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"mb-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", {\n    class: \"mb-4\"\n  }, \"Nueva Publicación\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"title\",\n    class: \"form-label\"\n  }, \"Título:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPost.title = $event),\n    type: \"text\",\n    id: \"title\",\n    class: \"form-control\",\n    placeholder: \"Ingrese el título de la publicación\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.title]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"description\",\n    class: \"form-label\"\n  }, \"Descripción:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newPost.description = $event),\n    id: \"description\",\n    class: \"form-control\",\n    rows: \"4\",\n    placeholder: \"Escriba la descripción aquí\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPost.description]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"photo\",\n    class: \"form-label\"\n  }, \"Subir Foto:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"photo\",\n    class: \"form-control\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"book\",\n    class: \"form-label\"\n  }, \"Subir Libro (PDF):\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"book\",\n    class: \"form-control\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.onPdfChange && $options.onPdfChange(...args)),\n    accept: \"application/pdf\"\n  }, null, 32 /* NEED_HYDRATION */)]), _cache[9] || (_cache[9] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary w-100\"\n  }, \"Publicar\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","createPost","_hoisted_3","for","$event","$data","newPost","title","type","id","placeholder","required","_hoisted_4","description","rows","_hoisted_5","onChange","onFileChange","accept","_hoisted_6","onPdfChange"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\post_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container post-container my-4\">\r\n    <div class=\"container py-4\">\r\n      <h2 class=\"mb-4\">Nueva Publicación</h2>\r\n      <form @submit.prevent=\"createPost\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"title\" class=\"form-label\">Título:</label>\r\n          <input v-model=\"newPost.title\" type=\"text\" id=\"title\" class=\"form-control\"\r\n            placeholder=\"Ingrese el título de la publicación\" required />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"description\" class=\"form-label\">Descripción:</label>\r\n          <textarea v-model=\"newPost.description\" id=\"description\" class=\"form-control\" rows=\"4\"\r\n            placeholder=\"Escriba la descripción aquí\" required></textarea>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"photo\" class=\"form-label\">Subir Foto:</label>\r\n          <input type=\"file\" id=\"photo\" class=\"form-control\" @change=\"onFileChange\" accept=\"image/*\" />\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label for=\"book\" class=\"form-label\">Subir Libro (PDF):</label>\r\n          <input type=\"file\" id=\"book\" class=\"form-control\" @change=\"onPdfChange\" accept=\"application/pdf\" />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary w-100\">Publicar</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newPost: {\r\n        title: '',\r\n        description: '',\r\n      },\r\n      images: '',\r\n      pdf_file: '',\r\n      profileData: {\r\n        name: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: ''\r\n      },\r\n      posts: [],\r\n      newComment: '',\r\n      profilePhoto: [],\r\n    };\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.newPost.images = event.target.files[0]; // Asigna la imagen\r\n    },\r\n    onPdfChange(event) {\r\n      this.newPost.pdf_file = event.target.files[0]; // Asigna el PDF\r\n    },\r\n    async createPost() {\r\n  try {\r\n    const token = localStorage.getItem('authToken');\r\n    \r\n    // Crear FormData y agregar los datos de la publicación\r\n    const formData = new FormData();\r\n    formData.append(\"title\", this.newPost.title);\r\n    formData.append(\"description\", this.newPost.description);\r\n    formData.append(\"images\", this.newPost.images);\r\n    formData.append(\"pdf\", this.newPost.pdf_file);\r\n\r\n    // Enviar la solicitud con FormData\r\n    const response = await apiClient.post('/posts', formData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n\r\n    // // Reiniciar los campos de la publicación después de crearla\r\n    // this.newPost.title = '';\r\n    // this.newPost.description = '';\r\n    // this.newPost.images = null;\r\n    // this.newPost.pdf_file = null;\r\n\r\n    // Actualizar la lista de publicaciones\r\n    console.log(response.data);\r\n    this.$router.push(`/profile/${this.profileData.username}`).then(() => {\r\n      window.location.reload();\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating post:', error);\r\n  }\r\n},\r\n  },\r\n  mounted() {\r\n    this.profileData = JSON.parse(localStorage.getItem('profileData'));\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.post {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.post-container {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  /* Blanco con 90% de opacidad */\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.text-muted {\r\n  font-size: 0.9rem;\r\n  font-style: italic;\r\n}\r\n\r\n.img-fluid {\r\n  max-height: 300px;\r\n  /* Limitar la altura de la imagen si es muy grande */\r\n  object-fit: cover;\r\n}\r\n\r\n.container {\r\n  max-width: 600px;\r\n}\r\n\r\n.form-label {\r\n  font-weight: bold;\r\n}\r\n\r\n.btn {\r\n  font-size: 1.1em;\r\n  padding: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAA+B;;EACnCA,KAAK,EAAC;AAAgB;;EAGlBA,KAAK,EAAC;AAAM;;EAKZA,KAAK,EAAC;AAAM;;EAKZA,KAAK,EAAC;AAAM;;EAIZA,KAAK,EAAC;AAAM;;uBAlBvBC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,CAuBM,OAvBNC,UAuBM,G,4BAtBJD,mBAAA,CAAuC;IAAnCH,KAAK,EAAC;EAAM,GAAC,mBAAiB,sBAClCG,mBAAA,CAoBO;IApBAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJnBC,cAAA,KAAAC,IAAA,KAI6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BL,mBAAA,CAIM,OAJNQ,UAIM,G,0BAHJR,mBAAA,CAAqD;IAA9CS,GAAG,EAAC,OAAO;IAACZ,KAAK,EAAC;KAAa,SAAO,sB,gBAC7CG,mBAAA,CAC+D;IARzE,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAO0BC,KAAA,CAAAC,OAAO,CAACC,KAAK,GAAAH,MAAA;IAAEI,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAAClB,KAAK,EAAC,cAAc;IACxEmB,WAAW,EAAC,qCAAqC;IAACC,QAAQ,EAAR;iDADpCN,KAAA,CAAAC,OAAO,CAACC,KAAK,E,KAG/Bb,mBAAA,CAIM,OAJNkB,UAIM,G,0BAHJlB,mBAAA,CAAgE;IAAzDS,GAAG,EAAC,aAAa;IAACZ,KAAK,EAAC;KAAa,cAAY,sB,gBACxDG,mBAAA,CACgE;IAb1E,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAY6BC,KAAA,CAAAC,OAAO,CAACO,WAAW,GAAAT,MAAA;IAAEK,EAAE,EAAC,aAAa;IAAClB,KAAK,EAAC,cAAc;IAACuB,IAAI,EAAC,GAAG;IACpFJ,WAAW,EAAC,6BAA6B;IAACC,QAAQ,EAAR;iDADzBN,KAAA,CAAAC,OAAO,CAACO,WAAW,E,KAGxCnB,mBAAA,CAGM,OAHNqB,UAGM,G,0BAFJrB,mBAAA,CAAyD;IAAlDS,GAAG,EAAC,OAAO;IAACZ,KAAK,EAAC;KAAa,aAAW,sBACjDG,mBAAA,CAA6F;IAAtFc,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAAClB,KAAK,EAAC,cAAc;IAAEyB,QAAM,EAAAnB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAiB,YAAA,IAAAjB,QAAA,CAAAiB,YAAA,IAAAlB,IAAA,CAAY;IAAEmB,MAAM,EAAC;uCAEnFxB,mBAAA,CAGM,OAHNyB,UAGM,G,0BAFJzB,mBAAA,CAA+D;IAAxDS,GAAG,EAAC,MAAM;IAACZ,KAAK,EAAC;KAAa,oBAAkB,sBACvDG,mBAAA,CAAmG;IAA5Fc,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;IAAClB,KAAK,EAAC,cAAc;IAAEyB,QAAM,EAAAnB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAoB,WAAA,IAAApB,QAAA,CAAAoB,WAAA,IAAArB,IAAA,CAAW;IAAEmB,MAAM,EAAC;iEAEjFxB,mBAAA,CAAqE;IAA7Dc,IAAI,EAAC,QAAQ;IAACjB,KAAK,EAAC;KAAwB,UAAQ,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}