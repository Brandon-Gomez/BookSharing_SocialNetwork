{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container post-container my-4\"\n};\nconst _hoisted_2 = {\n  class: \"container py-4\"\n};\nconst _hoisted_3 = {\n  class: \"mb-3\"\n};\nconst _hoisted_4 = {\n  class: \"mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"mb-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", {\n    class: \"mb-4\"\n  }, \"Crear una nueva publicación\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => _ctx.createPost && _ctx.createPost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"title\",\n    class: \"form-label\"\n  }, \"Título:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newPost.title = $event),\n    type: \"text\",\n    id: \"title\",\n    class: \"form-control\",\n    placeholder: \"Ingrese el título de la publicación\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newPost.title]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"description\",\n    class: \"form-label\"\n  }, \"Descripción:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.newPost.description = $event),\n    id: \"description\",\n    class: \"form-control\",\n    rows: \"4\",\n    placeholder: \"Escriba la descripción aquí\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newPost.description]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"photo\",\n    class: \"form-label\"\n  }, \"Subir Foto:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"photo\",\n    class: \"form-control\",\n    onChange: _cache[2] || (_cache[2] = (...args) => _ctx.onFileChange && _ctx.onFileChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"book\",\n    class: \"form-label\"\n  }, \"Subir Libro (PDF):\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"book\",\n    class: \"form-control\",\n    onChange: _cache[3] || (_cache[3] = (...args) => _ctx.onPdfChange && _ctx.onPdfChange(...args)),\n    accept: \"application/pdf\"\n  }, null, 32 /* NEED_HYDRATION */)]), _cache[9] || (_cache[9] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary w-100\"\n  }, \"Publicar\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" <h2>Publicaciones recientes:</h2>\\r\\n    <div v-for=\\\"post in posts.filter(post => post.username === this.profileData.username).slice(0, 3)\\\" :key=\\\"post.id\\\" class=\\\"card mb-4 shadow-sm\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h2 class=\\\"card-title\\\">{{ post.title }}</h2>\\r\\n        <p class=\\\"text-muted small mb-2\\\">subido por {{ post.username }}</p>\\r\\n        <p class=\\\"card-text\\\">{{ post.description }}</p>\\r\\n        <img v-if=\\\"post.image\\\" :src=\\\"post.image\\\" alt=\\\"Post Image\\\"\\r\\n          class=\\\"img-fluid rounded my-3\\\" />\\r\\n        <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n          <a v-if=\\\"post.pdf_file\\\" :href=\\\"post.image\\\" target=\\\"_blank\\\" class=\\\"btn btn-primary\\\">\\r\\n            📄 Ver libro (PDF)\\r\\n          </a>\\r\\n          <button @click=\\\"likePost(post.id)\\\" class=\\\"btn btn-success\\\">\\r\\n            👍 Like ( {{ post.likes_count || 0 }} )\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div> \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","_ctx","createPost","_hoisted_3","for","$event","newPost","title","type","id","placeholder","required","_hoisted_4","description","rows","_hoisted_5","onChange","onFileChange","accept","_hoisted_6","onPdfChange","_createCommentVNode"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\post_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container post-container my-4\">\r\n    <div class=\"container py-4\">\r\n      <h2 class=\"mb-4\">Crear una nueva publicación</h2>\r\n      <form @submit.prevent=\"createPost\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"title\" class=\"form-label\">Título:</label>\r\n          <input v-model=\"newPost.title\" type=\"text\" id=\"title\" class=\"form-control\"\r\n            placeholder=\"Ingrese el título de la publicación\" required />\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"description\" class=\"form-label\">Descripción:</label>\r\n          <textarea v-model=\"newPost.description\" id=\"description\" class=\"form-control\" rows=\"4\"\r\n            placeholder=\"Escriba la descripción aquí\" required></textarea>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"photo\" class=\"form-label\">Subir Foto:</label>\r\n          <input type=\"file\" id=\"photo\" class=\"form-control\" @change=\"onFileChange\" accept=\"image/*\" />\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label for=\"book\" class=\"form-label\">Subir Libro (PDF):</label>\r\n          <input type=\"file\" id=\"book\" class=\"form-control\" @change=\"onPdfChange\" accept=\"application/pdf\" />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary w-100\">Publicar</button>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- <h2>Publicaciones recientes:</h2>\r\n    <div v-for=\"post in posts.filter(post => post.username === this.profileData.username).slice(0, 3)\" :key=\"post.id\" class=\"card mb-4 shadow-sm\">\r\n      <div class=\"card-body\">\r\n        <h2 class=\"card-title\">{{ post.title }}</h2>\r\n        <p class=\"text-muted small mb-2\">subido por {{ post.username }}</p>\r\n        <p class=\"card-text\">{{ post.description }}</p>\r\n        <img v-if=\"post.image\" :src=\"post.image\" alt=\"Post Image\"\r\n          class=\"img-fluid rounded my-3\" />\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <a v-if=\"post.pdf_file\" :href=\"post.image\" target=\"_blank\" class=\"btn btn-primary\">\r\n            📄 Ver libro (PDF)\r\n          </a>\r\n          <button @click=\"likePost(post.id)\" class=\"btn btn-success\">\r\n            👍 Like ( {{ post.likes_count || 0 }} )\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: '',\r\n        profile_picture: ''\r\n      },\r\n      isCurrentUser: false,\r\n      publications: 0,\r\n      followers: 0,\r\n      following: 0,\r\n      posts: []\r\n    };\r\n  },\r\n  computed: {\r\n    formattedBirthdate() {\r\n      if (this.profileData.birthdate) {\r\n        const date = new Date(this.profileData.birthdate);\r\n        return date.toLocaleDateString();\r\n      }\r\n      return '';\r\n    }\r\n  },\r\n  watch: {\r\n    '$route'() {\r\n      this.getProfile();\r\n      this.getAllPosts();\r\n    }\r\n  },\r\n  methods: {\r\n    async getProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.profileData = response.data.user;\r\n          this.isCurrentUser = response.data.isCurrentUser;\r\n          if (this.isCurrentUser) localStorage.setItem('profileData', JSON.stringify(this.profileData));\r\n        } catch (error) {\r\n          console.error(\"Error fetching profile:\", error);\r\n        }\r\n      }\r\n    },\r\n    getProfileImage() {\r\n      const staticFiles = \"http://localhost:4000/static/profiles/\";\r\n      return this.profileData.profile_picture\r\n        ? staticFiles + this.profileData.profile_picture\r\n        : staticFiles + \"default.jpg\";\r\n    },\r\n    async getAllPosts() {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        const response = await apiClient.get('/posts/user', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n        )\r\n        this.posts = response.data;\r\n        console.log(this.posts);\r\n      } catch (error) {\r\n        console.error('Error getting post:', error);\r\n      }\r\n    },\r\n    // Método para manejar la creación de una nueva publicación\r\n    addNewPost() {\r\n      this.$router.push('/posts');\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getProfile();\r\n    this.getAllPosts();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  /* Blanco con 90% de opacidad */\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n}\r\n\r\n.profile-image {\r\n  width: 150px;\r\n  height: 150px;\r\n}\r\n\r\n.profile-info h1 {\r\n  font-size: 1.75rem;\r\n}\r\n\r\n.profile-stats {\r\n  font-size: 1rem;\r\n}\r\n\r\n.profile-bio {\r\n  border-top: 1px solid #ddd;\r\n  padding-top: 15px;\r\n}\r\n\r\n.add-post-button .btn {\r\n  font-size: 1.5rem;\r\n  width: 50px;\r\n  height: 50px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.btn {\r\n  margin-top: 10px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .profile-header {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-image {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .profile-info {\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-stats {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAA+B;;EACnCA,KAAK,EAAC;AAAgB;;EAGlBA,KAAK,EAAC;AAAM;;EAKZA,KAAK,EAAC;AAAM;;EAKZA,KAAK,EAAC;AAAM;;EAIZA,KAAK,EAAC;AAAM;;uBAlBvBC,mBAAA,CA4CM,OA5CNC,UA4CM,GA3CJC,mBAAA,CAuBM,OAvBNC,UAuBM,G,4BAtBJD,mBAAA,CAAiD;IAA7CH,KAAK,EAAC;EAAM,GAAC,6BAA2B,sBAC5CG,mBAAA,CAoBO;IApBAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJnBC,cAAA,KAAAC,IAAA,KAI6BC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BL,mBAAA,CAIM,OAJNQ,UAIM,G,0BAHJR,mBAAA,CAAqD;IAA9CS,GAAG,EAAC,OAAO;IAACZ,KAAK,EAAC;KAAa,SAAO,sB,gBAC7CG,mBAAA,CAC+D;IARzE,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAO0BJ,IAAA,CAAAK,OAAO,CAACC,KAAK,GAAAF,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAACjB,KAAK,EAAC,cAAc;IACxEkB,WAAW,EAAC,qCAAqC;IAACC,QAAQ,EAAR;iDADpCV,IAAA,CAAAK,OAAO,CAACC,KAAK,E,KAG/BZ,mBAAA,CAIM,OAJNiB,UAIM,G,0BAHJjB,mBAAA,CAAgE;IAAzDS,GAAG,EAAC,aAAa;IAACZ,KAAK,EAAC;KAAa,cAAY,sB,gBACxDG,mBAAA,CACgE;IAb1E,uBAAAG,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAY6BJ,IAAA,CAAAK,OAAO,CAACO,WAAW,GAAAR,MAAA;IAAEI,EAAE,EAAC,aAAa;IAACjB,KAAK,EAAC,cAAc;IAACsB,IAAI,EAAC,GAAG;IACpFJ,WAAW,EAAC,6BAA6B;IAACC,QAAQ,EAAR;iDADzBV,IAAA,CAAAK,OAAO,CAACO,WAAW,E,KAGxClB,mBAAA,CAGM,OAHNoB,UAGM,G,0BAFJpB,mBAAA,CAAyD;IAAlDS,GAAG,EAAC,OAAO;IAACZ,KAAK,EAAC;KAAa,aAAW,sBACjDG,mBAAA,CAA6F;IAAtFa,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAACjB,KAAK,EAAC,cAAc;IAAEwB,QAAM,EAAAlB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,IAAA,CAAAgB,YAAA,IAAAhB,IAAA,CAAAgB,YAAA,IAAAjB,IAAA,CAAY;IAAEkB,MAAM,EAAC;uCAEnFvB,mBAAA,CAGM,OAHNwB,UAGM,G,0BAFJxB,mBAAA,CAA+D;IAAxDS,GAAG,EAAC,MAAM;IAACZ,KAAK,EAAC;KAAa,oBAAkB,sBACvDG,mBAAA,CAAmG;IAA5Fa,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;IAACjB,KAAK,EAAC,cAAc;IAAEwB,QAAM,EAAAlB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,IAAA,CAAAmB,WAAA,IAAAnB,IAAA,CAAAmB,WAAA,IAAApB,IAAA,CAAW;IAAEkB,MAAM,EAAC;iEAEjFvB,mBAAA,CAAqE;IAA7Da,IAAI,EAAC,QAAQ;IAAChB,KAAK,EAAC;KAAwB,UAAQ,qB,8BAIhE6B,mBAAA,+9BAiBU,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}