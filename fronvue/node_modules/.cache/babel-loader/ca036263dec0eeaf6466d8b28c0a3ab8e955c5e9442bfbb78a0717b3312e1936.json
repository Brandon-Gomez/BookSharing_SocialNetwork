{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reset-password\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Restablecer Contraseña\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.resetPassword && $options.resetPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"newPassword\"\n  }, \"Nueva Contraseña\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    id: \"newPassword\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"Confirmar Contraseña\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    id: \"confirmPassword\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Restablecer Contraseña\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.message ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","resetPassword","for","type","$event","$data","newPassword","id","required","confirmPassword","message","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\resetpassword_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"reset-password\">\r\n    <h2>Restablecer Contraseña</h2>\r\n    <form @submit.prevent=\"resetPassword\">\r\n      <div>\r\n        <label for=\"newPassword\">Nueva Contraseña</label>\r\n        <input type=\"password\" v-model=\"newPassword\" id=\"newPassword\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"confirmPassword\">Confirmar Contraseña</label>\r\n        <input type=\"password\" v-model=\"confirmPassword\" id=\"confirmPassword\" required />\r\n      </div>\r\n      <button type=\"submit\">Restablecer Contraseña</button>\r\n    </form>\r\n    <div v-if=\"message\" class=\"message\">{{ message }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ApiService from \"@/services/ApiService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      message: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async resetPassword() {\r\n      // Verificar si las contraseñas coinciden\r\n      if (this.newPassword !== this.confirmPassword) {\r\n        this.message = \"Las contraseñas no coinciden.\";\r\n        return;\r\n      }\r\n\r\n      const token = this.$route.query.token; // Obtener el token de los parámetros de la URL\r\n      if (!token) {\r\n        this.message = \"Token no válido o ausente.\";\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Llamar a la API para restablecer la contraseña\r\n        const response = await ApiService.post(\"/reset-password\", {\r\n          token: token,\r\n          newPassword: this.newPassword,\r\n        });\r\n        this.message = response.data.message || \"Contraseña restablecida correctamente.\";\r\n\r\n        // Redirigir al inicio de sesión después de un éxito\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        this.message = error.response?.data?.error || \"Error al restablecer la contraseña.\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reset-password {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;EAcwBD,KAAK,EAAC;;;uBAb5BE,mBAAA,CAcM,OAdNC,UAcM,G,0BAbJC,mBAAA,CAA+B,YAA3B,wBAAsB,sBAC1BA,mBAAA,CAUO;IAVAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiD;IAA1CO,GAAG,EAAC;EAAa,GAAC,kBAAgB,sB,gBACzCP,mBAAA,CAAyE;IAAlEQ,IAAI,EAAC,UAAU;IAN9B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMwCC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,EAAE,EAAC,aAAa;IAACC,QAAQ,EAAR;iDAA9BH,KAAA,CAAAC,WAAW,E,KAE7CX,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAyD;IAAlDO,GAAG,EAAC;EAAiB,GAAC,sBAAoB,sB,gBACjDP,mBAAA,CAAiF;IAA1EQ,IAAI,EAAC,UAAU;IAV9B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAUwCC,KAAA,CAAAI,eAAe,GAAAL,MAAA;IAAEG,EAAE,EAAC,iBAAiB;IAACC,QAAQ,EAAR;iDAAtCH,KAAA,CAAAI,eAAe,E,+BAEjDd,mBAAA,CAAqD;IAA7CQ,IAAI,EAAC;EAAQ,GAAC,wBAAsB,qB,4BAEnCE,KAAA,CAAAK,OAAO,I,cAAlBjB,mBAAA,CAAuD,OAAvDkB,UAAuD,EAAAC,gBAAA,CAAhBP,KAAA,CAAAK,OAAO,oBAdlDG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}