{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  props: {\n    postId: String\n  },\n  data() {\n    return {\n      post: {\n        title: '',\n        description: ''\n      },\n      form: {\n        image: null,\n        pdf: null\n      },\n      profilePhoto: []\n    };\n  },\n  mounted() {\n    this.fetchPost();\n  },\n  methods: {\n    async fetchPost() {\n      try {\n        const response = await apiClient.get(`/posts/${this.postId}`);\n        this.post = response.data;\n        console.log(\"DATA OBTENIDA:\", response.data);\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    },\n    handleImageUpload(event) {\n      this.form.image = event.target.files[0];\n      this.profilePhoto = [this.form.image]; // Guardar la imagen seleccionada para vista previa\n    },\n    handlePdfUpload(event) {\n      this.form.pdf = event.target.files[0]; // Guardar el archivo PDF\n    },\n    async updatePost() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        const formData = new FormData();\n\n        // Agregar los datos existentes y nuevos a FormData\n        formData.append('title', this.post.title);\n        formData.append('description', this.post.description);\n\n        // Agregar archivos solo si existen\n        if (this.form.image) formData.append('images', this.form.image);\n        if (this.form.pdf) formData.append('pdf_file', this.form.pdf);\n        try {\n          // Actualizar la publicación\n          const response = await apiClient.put(`/posts/${this.postId}`, formData, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('Post updated successfully:', response.data);\n\n          // Redireccionar al perfil del usuario\n          this.$router.push(`/profile/${this.$route.params.username}`).then(() => {\n            window.location.reload();\n          });\n        } catch (error) {\n          console.error('Error updating post:', error);\n        }\n      }\n    },\n    async deletePost() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          await apiClient.delete(`/posts/${this.postId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Post deleted successfully');\n          this.$router.push(`/profile/${this.$route.params.username}`);\n        } catch (error) {\n          console.error('Error deleting post:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","postId","String","data","post","title","description","form","image","pdf","profilePhoto","mounted","fetchPost","methods","response","get","console","log","error","handleImageUpload","event","target","files","handlePdfUpload","updatePost","token","localStorage","getItem","formData","FormData","append","put","headers","Authorization","$router","push","$route","params","username","then","window","location","reload","deletePost","delete"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editpost_component.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"post\" class=\"edit-post-container container my-4 py-4\">\r\n    <h2>Editar Publicación</h2>\r\n    <form @submit.prevent=\"updatePost\">\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"title\">Título</label>\r\n        <input type=\"text\" id=\"title\" v-model=\"post.title\" class=\"form-control\" />\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"description\">Descripción</label>\r\n        <textarea id=\"description\" v-model=\"post.description\" class=\"form-control\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"image\">Imagen</label>\r\n        <input type=\"file\" id=\"image\" @change=\"handleImageUpload\" class=\"form-control\" />\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"pdf\">Archivo PDF</label>\r\n        <input type=\"file\" id=\"pdf\" @change=\"handlePdfUpload\" class=\"form-control\" />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n      <button @click.prevent=\"deletePost\" class=\"btn btn-danger ml-2\">Eliminar Publicación</button>\r\n    </form>\r\n\r\n    <div v-if=\"profilePhoto.length > 0\" class=\"image-preview\">\r\n      <h4>Vista Previa de la Imagen:</h4>\r\n      <img v-for=\"image in profilePhoto\" :src=\"image.previewURL\" :key=\"image.name\" class=\"img-thumbnail\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  props: {\r\n    postId: String,\r\n  },\r\n  data() {\r\n    return {\r\n      post: {\r\n        title: '',\r\n        description: '',\r\n      },\r\n      form: {\r\n        image: null,\r\n        pdf: null,\r\n      },\r\n      profilePhoto: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n  methods: {\r\n    async fetchPost() {\r\n      try {\r\n        const response = await apiClient.get(`/posts/${this.postId}`);\r\n        this.post = response.data;\r\n        console.log(\"DATA OBTENIDA:\", response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching post:', error);\r\n      }\r\n    },\r\n    handleImageUpload(event) {\r\n      this.form.image = event.target.files[0];\r\n      this.profilePhoto = [this.form.image]; // Guardar la imagen seleccionada para vista previa\r\n    },\r\n    handlePdfUpload(event) {\r\n      this.form.pdf = event.target.files[0]; // Guardar el archivo PDF\r\n    },\r\n    async updatePost() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        const formData = new FormData();\r\n\r\n        // Agregar los datos existentes y nuevos a FormData\r\n        formData.append('title', this.post.title);\r\n        formData.append('description', this.post.description);\r\n\r\n        // Agregar archivos solo si existen\r\n        if (this.form.image) formData.append('images', this.form.image);\r\n        if (this.form.pdf) formData.append('pdf_file', this.form.pdf);\r\n\r\n        try {\r\n          // Actualizar la publicación\r\n          const response = await apiClient.put(`/posts/${this.postId}`, formData, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n          console.log('Post updated successfully:', response.data);\r\n          \r\n          // Redireccionar al perfil del usuario\r\n          this.$router.push(`/profile/${this.$route.params.username}`).then(() => {\r\n            window.location.reload();\r\n          });\r\n\r\n        } catch (error) {\r\n          console.error('Error updating post:', error);\r\n        }\r\n      }\r\n    },\r\n    async deletePost() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          await apiClient.delete(`/posts/${this.postId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          console.log('Post deleted successfully');\r\n          this.$router.push(`/profile/${this.$route.params.username}`);\r\n        } catch (error) {\r\n          console.error('Error deleting post:', error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n  \r\n  <style scoped>\r\n  .edit-post-container {\r\n    background-color: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}