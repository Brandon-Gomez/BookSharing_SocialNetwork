{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from './ApiService';\nconst loginUser = async ({\n  email,\n  password,\n  router\n}) => {\n  try {\n    const response = await apiClient.post('/login', {\n      email,\n      password\n    });\n    const username = response.data.username;\n    const is_admin = response.data.is_admin;\n    localStorage.setItem('authToken', response.data.token);\n    localStorage.setItem('isAdmin', is_admin);\n    localStorage.setItem('username', username);\n    console.log('Login successful:', response.data);\n    alert('Login successful!');\n    localStorage.setItem('userData', JSON.stringify(response.data));\n    if (is_admin) {\n      router.push(`/admin/dashboard`).then(() => window.location.reload());\n    } else {\n      router.push(`/profile/${username}`).then(() => window.location.reload());\n    }\n  } catch (error) {\n    console.error('Error en el login:', error.response);\n    throw error;\n  }\n};\nconst logoutUser = router => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('isAdmin');\n  localStorage.removeItem('username');\n  router.push('/').then(() => window.location.reload());\n};\nexport { loginUser, logoutUser };","map":{"version":3,"names":["apiClient","loginUser","email","password","router","response","post","username","data","is_admin","localStorage","setItem","token","console","log","alert","JSON","stringify","push","then","window","location","reload","error","logoutUser","removeItem"],"sources":["D:/Downloads/BookSharing_SocialNetwork/fronvue/src/services/useAuth.js"],"sourcesContent":["import apiClient from './ApiService';\r\nconst loginUser = async ({ email, password, router }) => {\r\n  try {\r\n    const response = await apiClient.post('/login', { email, password });\r\n    const username = response.data.username;\r\n    const is_admin = response.data.is_admin;\r\n\r\n    localStorage.setItem('authToken', response.data.token);\r\n    localStorage.setItem('isAdmin', is_admin);\r\n    localStorage.setItem('username', username);\r\n    console.log('Login successful:', response.data);\r\n\r\n    alert('Login successful!');\r\n    localStorage.setItem('userData', JSON.stringify(response.data));\r\n\r\n    if (is_admin) {\r\n      router.push(`/admin/dashboard`).then(() => window.location.reload());\r\n    } else {\r\n      router.push(`/profile/${username}`).then(() => window.location.reload());\r\n    }\r\n  } catch (error) {\r\n    console.error('Error en el login:', error.response);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst logoutUser = (router) => {\r\n  localStorage.removeItem('authToken');\r\n  localStorage.removeItem('isAdmin');\r\n  localStorage.removeItem('username');\r\n  router.push('/').then(() => window.location.reload());\r\n};\r\n\r\nexport { loginUser, logoutUser };"],"mappings":";AAAA,OAAOA,SAAS,MAAM,cAAc;AACpC,MAAMC,SAAS,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,SAAS,CAACM,IAAI,CAAC,QAAQ,EAAE;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IACpE,MAAMI,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACD,QAAQ;IACvC,MAAME,QAAQ,GAAGJ,QAAQ,CAACG,IAAI,CAACC,QAAQ;IAEvCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEN,QAAQ,CAACG,IAAI,CAACI,KAAK,CAAC;IACtDF,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEF,QAAQ,CAAC;IACzCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IAC1CM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAET,QAAQ,CAACG,IAAI,CAAC;IAE/CO,KAAK,CAAC,mBAAmB,CAAC;IAC1BL,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEK,IAAI,CAACC,SAAS,CAACZ,QAAQ,CAACG,IAAI,CAAC,CAAC;IAE/D,IAAIC,QAAQ,EAAE;MACZL,MAAM,CAACc,IAAI,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;IACtE,CAAC,MAAM;MACLlB,MAAM,CAACc,IAAI,CAAC,YAAYX,QAAQ,EAAE,CAAC,CAACY,IAAI,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;IAC1E;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAClB,QAAQ,CAAC;IACnD,MAAMkB,KAAK;EACb;AACF,CAAC;AAED,MAAMC,UAAU,GAAIpB,MAAM,IAAK;EAC7BM,YAAY,CAACe,UAAU,CAAC,WAAW,CAAC;EACpCf,YAAY,CAACe,UAAU,CAAC,SAAS,CAAC;EAClCf,YAAY,CAACe,UAAU,CAAC,UAAU,CAAC;EACnCrB,MAAM,CAACc,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;AACvD,CAAC;AAED,SAASrB,SAAS,EAAEuB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}