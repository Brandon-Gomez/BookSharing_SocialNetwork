{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import FollowComponent from '@/components/follow_component.vue';\nimport apiClient from '@/services/ApiService';\nimport LikeComponent from '@/components/like_component.vue';\nimport PdfPreviewComponent from '@/components/pdfpreview_component.vue';\nexport default {\n  components: {\n    LikeComponent,\n    PdfPreviewComponent\n    // FollowComponent,\n  },\n  data() {\n    return {\n      profileData: {\n        name: '',\n        birthdate: '',\n        gender: '',\n        description: '',\n        profile_picture: ''\n      },\n      isCurrentUser: false,\n      posts: [],\n      publications: 0,\n      follows: {\n        isFollowing: null,\n        followers: 0,\n        following: 0\n      }\n    };\n  },\n  computed: {\n    formattedBirthdate() {\n      if (this.profileData.birthdate) {\n        const date = new Date(this.profileData.birthdate);\n        return date.toLocaleDateString();\n      }\n      return '';\n    }\n  },\n  watch: {\n    '$route'() {\n      this.getProfile();\n      this.fetchDataFollows();\n      // this.getAllPosts();\n    }\n  },\n  methods: {\n    formattedDescription(description) {\n      return description ? description.replace(/\\n/g, '<br>') : '';\n    },\n    async getProfile() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.profileData = response.data.user;\n          this.isCurrentUser = response.data.isCurrentUser;\n\n          // console.log('User ID:', this.profileData.id);\n\n          if (this.isCurrentUser) localStorage.setItem('profileData', JSON.stringify(this.profileData));\n          this.getPostCount(this.profileData.id);\n          this.getAllPosts(this.profileData.id);\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      }\n    },\n    getProfileImage() {\n      const defaultImageUrl = \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\"; // Reemplaza con la URL de tu imagen predeterminada en Firebase\n      return this.profileData.profile_picture ? this.profileData.profile_picture : defaultImageUrl;\n    },\n    async getAllPosts(userId) {\n      try {\n        const token = localStorage.getItem('authToken');\n        const response = await apiClient.get(`/posts/user/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.posts = response.data;\n      } catch (error) {\n        console.error('Error getting posts:', error);\n      }\n    },\n    async getPostCount(userId) {\n      const token = localStorage.getItem('authToken');\n      try {\n        const response = await apiClient.get(`/posts/count/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.publications = response.data.post_count; // Asignamos el conteo de publicaciones\n      } catch (error) {\n        console.error(\"Error getting post count:\", error);\n      }\n    },\n    filteredPosts(username) {\n      return this.posts.filter(post => post.username === username);\n    },\n    addNewPost() {\n      this.$router.push('/posts');\n    },\n    editPost(postId) {\n      this.$router.push(`/posts/${postId}/edit-post`);\n    },\n    async deletePost(postId) {\n      const token = localStorage.getItem('authToken');\n      if (confirm(\"¿Estás seguro de que deseas eliminar esta publicación?\")) {\n        try {\n          await apiClient.delete(`/posts/${postId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.posts = this.posts.filter(post => post.id !== postId); // Actualiza la lista de publicaciones\n          this.$router.push(`/profile/${this.profileData.username}`).then(() => {\n            window.location.reload();\n          });\n        } catch (error) {\n          console.error('Error deleting post:', error);\n        }\n      }\n    },\n    // FOLLOWS\n    async fetchDataFollows() {\n      try {\n        await this.fetchFollowerCount();\n        await this.fetchFollowingCount();\n        await this.checkIfFollowing();\n        console.log(\"Datos actualizados para userId:\", this.profileData.id);\n      } catch (error) {\n        console.error(\"Error al actualizar datos:\", error);\n      }\n    },\n    async fetchFollowerCount() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        const response = await apiClient.get(`/follow/followers/count/${this.profileData.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.follows.followers = response.data.followerCount;\n      } catch (error) {\n        console.error(\"Error al obtener la cantidad de seguidores:\", error);\n      }\n    },\n    async fetchFollowingCount() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        const response = await apiClient.get(`/follow/following/count/${this.profileData.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.follows.following = response.data.followingCount;\n      } catch (error) {\n        console.error(\"Error al obtener la cantidad de seguidos:\", error);\n      }\n    },\n    async toggleFollow() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      if (!this.profileData.id) {\n        console.error(\"ID de usuario no definido\");\n        return;\n      }\n      try {\n        if (this.follows.isFollowing) {\n          await apiClient.delete(`/follow/${this.profileData.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: {\n              followed_id: this.profileData.id\n            }\n          });\n          this.follows.followers--;\n          this.follows.isFollowing = false;\n        } else {\n          const payload = {\n            followed_id: this.profileData.id\n          };\n          await apiClient.post(`/follow`, payload, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.follows.followers++;\n          this.follows.isFollowing = true;\n        }\n        this.$emit(\"update-followers\", this.follows.followers);\n      } catch (error) {\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\n        if (error.response && error.response.data) {\n          console.error(\"Detalles del error:\", error.response.data);\n        }\n      }\n    },\n    async checkIfFollowing() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        const response = await apiClient.get(`/follow/check/${this.profileData.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.follows.isFollowing = response.data.isFollowing;\n      } catch (error) {\n        console.error(\"Error al verificar el estado de seguimiento:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.getProfile();\n    this.fetchDataFollows();\n    // this.getAllPosts();\n  }\n};","map":{"version":3,"names":["apiClient","LikeComponent","PdfPreviewComponent","components","data","profileData","name","birthdate","gender","description","profile_picture","isCurrentUser","posts","publications","follows","isFollowing","followers","following","computed","formattedBirthdate","date","Date","toLocaleDateString","watch","$route","getProfile","fetchDataFollows","methods","formattedDescription","replace","token","localStorage","getItem","response","get","params","username","headers","Authorization","user","setItem","JSON","stringify","getPostCount","id","getAllPosts","error","console","getProfileImage","defaultImageUrl","userId","post_count","filteredPosts","filter","post","addNewPost","$router","push","editPost","postId","deletePost","confirm","delete","then","window","location","reload","fetchFollowerCount","fetchFollowingCount","checkIfFollowing","log","followerCount","followingCount","toggleFollow","followed_id","payload","$emit","mounted"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\profile_component.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"profileData\" class=\"profile-container container my-4 py-4\">\r\n    <div class=\"profile-header row align-items-center\">\r\n      <div class=\"col-md-3 text-center\">\r\n        <img :src=\"getProfileImage()\" class=\"profile-image img-fluid rounded-circle border\" alt=\"Profile Picture\" />\r\n      </div>\r\n      <div class=\"col-md-9 profile-info\">\r\n        <h1 class=\"h3\">{{ profileData.name }}</h1>\r\n        <p class=\"text-muted\"><strong>{{ profileData.username || 'No disponible' }}</strong></p>\r\n        <div class=\"profile-stats d-flex justify-content-between my-3\">\r\n          <span><strong>{{ publications }}</strong> publicaciones</span>\r\n          <div class=\"follow-container\" v-if=\"follows.isFollowing !== null\">\r\n            <button @click=\"toggleFollow\" :class=\"{ following: follows.isFollowing }\">\r\n              <span>{{ follows.isFollowing ? \"Siguiendo\" : \"Seguir\" }}</span>\r\n            </button>\r\n            <span>{{ follows.followers }} seguidores</span>\r\n            <span>{{ follows.following }} seguidos</span>\r\n          </div>\r\n        </div>\r\n        <p v-if=\"profileData.description\" v-html=\"formattedDescription(profileData.description)\"></p>\r\n        <router-link v-if=\"isCurrentUser\" :to=\"`/profile/${profileData.username}/edit-account`\"\r\n          class=\"btn btn-primary btn-block\">\r\n          Editar perfil\r\n        </router-link>\r\n        <!-- <FollowComponent v-if=\"profileData.userId\" :userId=\"profileData.userId\" /> -->\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isCurrentUser\"\r\n      class=\"add-post-button my-4 text-center d-flex justify-content-center align-items-baseline\">\r\n      <button @click=\"addNewPost\" class=\"btn btn-success rounded-circle\">\r\n        <i class=\"fas fa-plus\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"posts-container mt-4\">\r\n      <div v-for=\"post in filteredPosts(profileData.username)\" :key=\"post.id\" class=\"post-card mb-4 shadow-sm\">\r\n        <div class=\"d-flex align-items-start\">\r\n          <img v-if=\"post.image\" :src=\"post.image\" alt=\"Post Image\" class=\"post-image me-3\" />\r\n\r\n          <div class=\"post-content flex-grow-1\">\r\n            <h3 class=\"post-title\">{{ post.title }}</h3>\r\n            <p class=\"post-description\">{{ post.description }}</p>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <PdfPreviewComponent v-if=\"post.pdf_file\" :pdfUrl=\"post.pdf_file\" />\r\n              <LikeComponent :postId=\"String(post.id)\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"dropdown ms-auto\">\r\n            <button class=\"btn btn-link text-secondary p-0\" type=\"button\" id=\"dropdownMenuButton\"\r\n              data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              <i class=\"fas fa-ellipsis-v\"></i>\r\n            </button>\r\n            <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton\">\r\n              <li v-if=\"isCurrentUser\">\r\n                <router-link :to=\"`/posts/${post.id}/edit-post`\" class=\"dropdown-item\">✏️ Editar</router-link>\r\n              </li>\r\n              <li v-if=\"isCurrentUser\">\r\n                <button @click=\"deletePost(post.id)\" class=\"dropdown-item\">🗑️ Eliminar</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import FollowComponent from '@/components/follow_component.vue';\r\nimport apiClient from '@/services/ApiService';\r\nimport LikeComponent from '@/components/like_component.vue';\r\nimport PdfPreviewComponent from '@/components/pdfpreview_component.vue'\r\n\r\nexport default {\r\n  components: {\r\n    LikeComponent,\r\n    PdfPreviewComponent,\r\n    // FollowComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: '',\r\n        profile_picture: ''\r\n      },\r\n      isCurrentUser: false,\r\n      posts: [],\r\n      publications: 0,\r\n      follows: { \r\n        isFollowing: null,\r\n        followers: 0,\r\n        following: 0,\r\n      }\r\n      \r\n    };\r\n  },\r\n  computed: {\r\n    formattedBirthdate() {\r\n      if (this.profileData.birthdate) {\r\n        const date = new Date(this.profileData.birthdate);\r\n        return date.toLocaleDateString();\r\n      }\r\n      return '';\r\n    },\r\n  },\r\n  watch: {\r\n    '$route'() {\r\n      this.getProfile();\r\n      this.fetchDataFollows();\r\n      // this.getAllPosts();\r\n    }\r\n  },\r\n  methods: {\r\n    formattedDescription(description) {\r\n      return description ? description.replace(/\\n/g, '<br>') : '';\r\n    },\r\n    async getProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.profileData = response.data.user;\r\n          this.isCurrentUser = response.data.isCurrentUser;\r\n\r\n          // console.log('User ID:', this.profileData.id);\r\n\r\n          if (this.isCurrentUser) localStorage.setItem('profileData', JSON.stringify(this.profileData));\r\n\r\n          this.getPostCount(this.profileData.id);\r\n          this.getAllPosts(this.profileData.id);\r\n\r\n        } catch (error) {\r\n          console.error(\"Error fetching profile:\", error);\r\n        }\r\n      }\r\n    },\r\n    getProfileImage() {\r\n      const defaultImageUrl = \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\"; // Reemplaza con la URL de tu imagen predeterminada en Firebase\r\n      return this.profileData.profile_picture\r\n        ? this.profileData.profile_picture\r\n        : defaultImageUrl;\r\n    },\r\n    async getAllPosts(userId) {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        const response = await apiClient.get(`/posts/user/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.posts = response.data;\r\n      } catch (error) {\r\n        console.error('Error getting posts:', error);\r\n      }\r\n    },\r\n    async getPostCount(userId) {\r\n      const token = localStorage.getItem('authToken');\r\n      try {\r\n        const response = await apiClient.get(`/posts/count/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.publications = response.data.post_count; // Asignamos el conteo de publicaciones\r\n      } catch (error) {\r\n        console.error(\"Error getting post count:\", error);\r\n      }\r\n    },\r\n    filteredPosts(username) {\r\n      return this.posts.filter(post => post.username === username);\r\n    },\r\n    addNewPost() {\r\n      this.$router.push('/posts');\r\n    },\r\n    editPost(postId) {\r\n      this.$router.push(`/posts/${postId}/edit-post`);\r\n    },\r\n    async deletePost(postId) {\r\n      const token = localStorage.getItem('authToken');\r\n      if (confirm(\"¿Estás seguro de que deseas eliminar esta publicación?\")) {\r\n        try {\r\n          await apiClient.delete(`/posts/${postId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.posts = this.posts.filter(post => post.id !== postId); // Actualiza la lista de publicaciones\r\n          this.$router.push(`/profile/${this.profileData.username}`).then(() => {\r\n            window.location.reload();\r\n          });\r\n        } catch (error) {\r\n          console.error('Error deleting post:', error);\r\n        }\r\n      }\r\n    },\r\n    // FOLLOWS\r\n    async fetchDataFollows() {\r\n      try {\r\n        await this.fetchFollowerCount();\r\n        await this.fetchFollowingCount();\r\n        await this.checkIfFollowing();\r\n        console.log(\"Datos actualizados para userId:\", this.profileData.id);\r\n      } catch (error) {\r\n        console.error(\"Error al actualizar datos:\", error);\r\n      }\r\n    },\r\n    async fetchFollowerCount() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await apiClient.get(`/follow/followers/count/${this.profileData.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.follows.followers = response.data.followerCount;\r\n      } catch (error) {\r\n        console.error(\"Error al obtener la cantidad de seguidores:\", error);\r\n      }\r\n    },\r\n    async fetchFollowingCount() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await apiClient.get(`/follow/following/count/${this.profileData.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.follows.following = response.data.followingCount;\r\n      } catch (error) {\r\n        console.error(\"Error al obtener la cantidad de seguidos:\", error);\r\n      }\r\n    },\r\n    async toggleFollow() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n\r\n      if (!this.profileData.id) {\r\n        console.error(\"ID de usuario no definido\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        if (this.follows.isFollowing) {\r\n          await apiClient.delete(`/follow/${this.profileData.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            data: { followed_id: this.profileData.id },\r\n          });\r\n          this.follows.followers--;\r\n          this.follows.isFollowing = false;\r\n        } else {\r\n          const payload = { followed_id: this.profileData.id };\r\n          await apiClient.post(\r\n            `/follow`,\r\n            payload,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          this.follows.followers++;\r\n          this.follows.isFollowing = true;\r\n        }\r\n        this.$emit(\"update-followers\", this.follows.followers);\r\n      } catch (error) {\r\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\r\n        if (error.response && error.response.data) {\r\n          console.error(\"Detalles del error:\", error.response.data);\r\n        }\r\n      }\r\n    },\r\n    async checkIfFollowing() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await apiClient.get(`/follow/check/${this.profileData.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.follows.isFollowing = response.data.isFollowing;\r\n      } catch (error) {\r\n        console.error(\"Error al verificar el estado de seguimiento:\", error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getProfile();\r\n    this.fetchDataFollows();\r\n    // this.getAllPosts();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\np {\r\n  white-space: pre-wrap;\r\n  /* Respeta saltos de línea y espacios */\r\n  line-height: 1.5;\r\n  /* Ajusta la altura entre líneas */\r\n}\r\n\r\n.profile-container {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.profile-image {\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n\r\n.profile-info h1 {\r\n  font-size: 1.75rem;\r\n}\r\n\r\n.profile-stats {\r\n  font-size: 1rem;\r\n}\r\n\r\n.add-post-button .btn {\r\n  font-size: 1.5rem;\r\n  width: 50px;\r\n  height: 50px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.posts-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.post-card {\r\n  display: flex;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n  transition: box-shadow 0.3s, transform 0.3s;\r\n  border: 1px solid #ddd;\r\n  /* Añadir un borde */\r\n  align-items: center;\r\n}\r\n\r\n.post-card:hover {\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n  transform: translateY(-5px);\r\n  /* Efecto de elevación */\r\n}\r\n\r\n.post-image {\r\n  width: 300px;\r\n  height: 300px;\r\n  object-fit: contain;\r\n  object-position: center;\r\n  /* Centra la imagen dentro del contenedor */\r\n  display: block;\r\n  /* Asegura que la imagen se comporta correctamente en su contenedor */\r\n  margin: auto 0;\r\n  /* Centra la imagen horizontalmente */\r\n}\r\n\r\n.post-content {\r\n  flex: 1;\r\n  /* Hace que el contenido ocupe el espacio restante */\r\n  margin-left: 15px;\r\n  /* Espaciado entre la imagen y el contenido */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.post-title {\r\n  font-size: 1.5rem;\r\n  margin: 0.5rem 0;\r\n  color: #333;\r\n  /* Color del título */\r\n}\r\n\r\n.post-description {\r\n  margin: 0.5rem 0;\r\n  color: #666;\r\n  /* Color más suave para la descripción */\r\n}\r\n\r\n.btn-primary,\r\n.btn-success {\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n  /* Cambiar el color en hover */\r\n}\r\n\r\n.btn-success:hover {\r\n  background-color: #45a049;\r\n  /* Cambiar el color en hover */\r\n}\r\n\r\n.dropdown .btn-link {\r\n  font-size: 1.5rem;\r\n  /* Tamaño de los tres puntos */\r\n}\r\n\r\n.dropdown .dropdown-menu {\r\n  min-width: 100px;\r\n  text-align: left;\r\n}\r\n\r\n.dropdown .dropdown-item {\r\n  font-size: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5rem 1rem;\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n  .profile-header {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-image {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .profile-info {\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-stats {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  .post-card {\r\n    flex-direction: column;\r\n    /* Cambiar a columna en dispositivos más pequeños */\r\n    align-items: center;\r\n  }\r\n\r\n  .post-image {\r\n    margin-bottom: 10px;\r\n    /* Espaciado entre imagen y contenido */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}