{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.registerUser && $options.registerUser(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.username = $event),\n    type: \"text\",\n    placeholder: \"Username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Register\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","registerUser","$event","$data","email","type","placeholder","required","username","password"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\views\\register_view.vue"],"sourcesContent":["<template>\r\n    <div class=\"register\">\r\n      <form @submit.prevent=\"registerUser\">\r\n        <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required />\r\n        <input v-model=\"username\" type=\"text\" placeholder=\"Username\" required />\r\n        <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from '../services/ApiService.js';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: '',\r\n        username: '',\r\n        password: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async registerUser() {\r\n        try {\r\n          const response = await apiClient.post('/register', {\r\n            email: this.email,\r\n            username: this.username,\r\n            password: this.password\r\n          });\r\n          console.log('Registered:', response.data);\r\n          // Manejar el token de autenticaci√≥n o redirigir al usuario\r\n        } catch (error) {\r\n          console.error('Error en el registro:', error.response.data);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Estilos para tu formulario de registro */\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAU;;uBAArBC,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAKO;IALAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFnBC,cAAA,KAAAC,IAAA,KAE6BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sBACjCJ,mBAAA,CAAmE;IAH3E,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAGwBC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAxCJ,KAAA,CAAAC,KAAK,E,mBACrBT,mBAAA,CAAwE;IAJhF,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIwBC,KAAA,CAAAK,QAAQ,GAAAN,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA7CJ,KAAA,CAAAK,QAAQ,E,mBACxBb,mBAAA,CAA4E;IALpF,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKwBC,KAAA,CAAAM,QAAQ,GAAAP,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAjDJ,KAAA,CAAAM,QAAQ,E,6BACxBd,mBAAA,CAAuC;IAA/BU,IAAI,EAAC;EAAQ,GAAC,UAAQ,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}