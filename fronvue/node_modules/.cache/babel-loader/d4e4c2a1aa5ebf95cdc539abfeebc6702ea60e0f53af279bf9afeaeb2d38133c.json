{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from \"@/services/ApiService\";\nexport default {\n  data() {\n    return {\n      userData: {\n        email: \"\",\n        password: \"\",\n        username: \"\",\n        name: \"\",\n        birthdate: \"\",\n        description: \"\",\n        is_admin: \"\"\n      }\n    };\n  },\n  async mounted() {\n    await this.fetchUser();\n  },\n  methods: {\n    async fetchUser() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const userId = this.$route.params.userId;\n        const response = await apiClient.get(`/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        let user = response.data.user;\n        // Formatea la fecha para el input date\n        if (user.birthdate) {\n          user.birthdate = user.birthdate.split('T')[0];\n        }\n        this.userData = {\n          ...user,\n          password: \"\"\n        };\n      } catch (error) {\n        console.error(\"Error al obtener el usuario:\", error.response?.data || error);\n        alert(\"Error al obtener los datos del usuario.\");\n      }\n    },\n    async updateUser() {\n      try {\n        console.log(\"userData\", this.userData);\n        const token = localStorage.getItem(\"authToken\");\n        const userId = this.$route.params.userId;\n        // Si el campo password está vacío, no lo envíes\n        const dataToSend = {\n          ...this.userData\n        };\n        if (!dataToSend.password) delete dataToSend.password;\n        await apiClient.put(`/users/${userId}`, dataToSend, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.$router.push({\n          path: \"/admin/users-list\",\n          query: {\n            alert: \"Usuario actualizado exitosamente\",\n            type: \"success\"\n          }\n        });\n      } catch (error) {\n        // Manejo de errores\n        this.$router.push({\n          path: \"/admin/users-list\",\n          query: {\n            alert: \"Error al actualizar el usuario\",\n            type: \"danger\"\n          }\n        });\n      }\n    },\n    cancel() {\n      this.$router.push(\"/admin/users-list\");\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","userData","email","password","username","name","birthdate","description","is_admin","mounted","fetchUser","methods","token","localStorage","getItem","userId","$route","params","response","get","headers","Authorization","user","split","error","console","alert","updateUser","log","dataToSend","put","$router","push","path","query","type","cancel"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\admin\\user-edit_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-4\">\r\n        <h2>Editar Usuario</h2>\r\n        <form @submit.prevent=\"updateUser\" class=\"mt-4\">\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"email\">Correo Electrónico</label>\r\n                <input type=\"email\" id=\"email\" v-model=\"userData.email\" class=\"form-control\"\r\n                    placeholder=\"Correo electrónico\" required />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"password\">Contraseña (dejar vacío para no cambiar)</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"userData.password\" class=\"form-control\"\r\n                    placeholder=\"Contraseña\" />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"username\">Nombre de Usuario</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"userData.username\" class=\"form-control\"\r\n                    placeholder=\"Nombre de usuario\" required />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"name\">Nombre</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"userData.name\" class=\"form-control\" placeholder=\"Nombre completo\"\r\n                    required />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"birthdate\">Fecha de Nacimiento</label>\r\n                <input type=\"date\" id=\"birthdate\" v-model=\"userData.birthdate\" class=\"form-control\"\r\n                    placeholder=\"Fecha de nacimiento\" required />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"description\">Descripción</label>\r\n                <textarea id=\"description\" v-model=\"userData.description\" class=\"form-control\"\r\n                    placeholder=\"Descripción\"></textarea>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"is_admin\">Rol</label>\r\n                <select id=\"is_admin\" v-model=\"userData.is_admin\" class=\"form-control\" v-on:select=\"userData.is_admin\">\r\n                    <option :value=\"false\">Usuario</option>\r\n                    <option :value=\"true\">Administrador</option>\r\n                </select>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Actualizar Usuario</button>\r\n            <button type=\"button\" class=\"btn btn-secondary ml-3\" @click=\"cancel\">\r\n                Cancelar\r\n            </button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            userData: {\r\n                email: \"\",\r\n                password: \"\",\r\n                username: \"\",\r\n                name: \"\",\r\n                birthdate: \"\",\r\n                description: \"\",\r\n                is_admin: \"\",\r\n            },\r\n        };\r\n    },\r\n    async mounted() {\r\n        await this.fetchUser();\r\n    },\r\n    methods: {\r\n        async fetchUser() {\r\n            try {\r\n                const token = localStorage.getItem(\"authToken\");\r\n                const userId = this.$route.params.userId;\r\n                const response = await apiClient.get(`/users/${userId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                let user = response.data.user;\r\n                // Formatea la fecha para el input date\r\n                if (user.birthdate) {\r\n                    user.birthdate = user.birthdate.split('T')[0];\r\n                }\r\n                this.userData = {\r\n                    ...user,\r\n                    password: \"\"\r\n                };\r\n            } catch (error) {\r\n                console.error(\"Error al obtener el usuario:\", error.response?.data || error);\r\n                alert(\"Error al obtener los datos del usuario.\");\r\n            }\r\n        },\r\n        async updateUser() {\r\n            try {\r\n                console.log(\"userData\", this.userData);\r\n                const token = localStorage.getItem(\"authToken\");\r\n                const userId = this.$route.params.userId;\r\n                // Si el campo password está vacío, no lo envíes\r\n                const dataToSend = { ...this.userData };\r\n                if (!dataToSend.password) delete dataToSend.password;\r\n\r\n                await apiClient.put(\r\n                    `/users/${userId}`,\r\n                    dataToSend,\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`\r\n                        }\r\n                    }\r\n                );\r\n\r\n                this.$router.push({\r\n                    path: \"/admin/users-list\",\r\n                    query: { alert: \"Usuario actualizado exitosamente\", type: \"success\" }\r\n                });\r\n            } catch (error) {\r\n                // Manejo de errores\r\n                this.$router.push({\r\n                    path: \"/admin/users-list\",\r\n                    query: { alert: \"Error al actualizar el usuario\", type: \"danger\" }\r\n                });\r\n            }\r\n        },\r\n        cancel() {\r\n            this.$router.push(\"/admin/users-list\");\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    max-width: 600px;\r\n}\r\n</style>"],"mappings":";AAkDA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACd;IACJ,CAAC;EACL,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,SAASA,CAAA,EAAG;MACd,IAAI;QACA,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;QACxC,MAAMG,QAAO,GAAI,MAAMnB,SAAS,CAACoB,GAAG,CAAC,UAAUJ,MAAM,EAAE,EAAE;UACrDK,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUT,KAAK;UAClC;QACJ,CAAC,CAAC;QACF,IAAIU,IAAG,GAAIJ,QAAQ,CAAClB,IAAI,CAACsB,IAAI;QAC7B;QACA,IAAIA,IAAI,CAAChB,SAAS,EAAE;UAChBgB,IAAI,CAAChB,SAAQ,GAAIgB,IAAI,CAAChB,SAAS,CAACiB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjD;QACA,IAAI,CAACtB,QAAO,GAAI;UACZ,GAAGqB,IAAI;UACPnB,QAAQ,EAAE;QACd,CAAC;MACL,EAAE,OAAOqB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACN,QAAQ,EAAElB,IAAG,IAAKwB,KAAK,CAAC;QAC5EE,KAAK,CAAC,yCAAyC,CAAC;MACpD;IACJ,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI;QACAF,OAAO,CAACG,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC3B,QAAQ,CAAC;QACtC,MAAMW,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;QACxC;QACA,MAAMc,UAAS,GAAI;UAAE,GAAG,IAAI,CAAC5B;QAAS,CAAC;QACvC,IAAI,CAAC4B,UAAU,CAAC1B,QAAQ,EAAE,OAAO0B,UAAU,CAAC1B,QAAQ;QAEpD,MAAMJ,SAAS,CAAC+B,GAAG,CACf,UAAUf,MAAM,EAAE,EAClBc,UAAU,EACV;UACIT,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUT,KAAK;UAClC;QACJ,CACJ,CAAC;QAED,IAAI,CAACmB,OAAO,CAACC,IAAI,CAAC;UACdC,IAAI,EAAE,mBAAmB;UACzBC,KAAK,EAAE;YAAER,KAAK,EAAE,kCAAkC;YAAES,IAAI,EAAE;UAAU;QACxE,CAAC,CAAC;MACN,EAAE,OAAOX,KAAK,EAAE;QACZ;QACA,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC;UACdC,IAAI,EAAE,mBAAmB;UACzBC,KAAK,EAAE;YAAER,KAAK,EAAE,gCAAgC;YAAES,IAAI,EAAE;UAAS;QACrE,CAAC,CAAC;MACN;IACJ,CAAC;IACDC,MAAMA,CAAA,EAAG;MACL,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;IAC1C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}