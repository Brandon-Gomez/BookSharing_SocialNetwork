{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      posts: []\n    };\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          const response = await apiClient.get('/posts', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.posts = response.data;\n        }\n      } catch (error) {\n        console.error('Error al obtener las publicaciones:', error);\n      }\n    },\n    createMyPost() {\n      this.$router.push('/admin/post-create');\n    },\n    editPost(postId) {\n      this.$router.push(`/admin/post-edit/${postId}`);\n    },\n    async deletePost(postId) {\n      const token = localStorage.getItem('authToken');\n      if (token && confirm('¿Estás seguro de que deseas eliminar esta publicación?')) {\n        try {\n          const response = await apiClient.delete(`/posts/${postId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Publicación eliminada:', response.data);\n          // this.posts = this.posts.filter(post => post.id !== postId);\n          // alert('Publicación eliminada correctamente.');\n        } catch (error) {\n          console.error('Error al eliminar la publicación:', error);\n        }\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      return new Date(dateString).toLocaleDateString();\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"names":["apiClient","data","posts","methods","fetchPosts","token","localStorage","getItem","response","get","headers","Authorization","error","console","createMyPost","$router","push","editPost","postId","deletePost","confirm","delete","log","formatDate","dateString","Date","toLocaleDateString","mounted"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\admin\\posts-list_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h2>Lista de Publicaciones</h2>\r\n            <button class=\"btn btn-primary\" @click=\"createMyPost\">Crear Publicación</button>\r\n        </div>\r\n        <table class=\"table table-striped align-middle\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Imagen</th>\r\n                    <th>Título</th>\r\n                    <th>Descripción</th>\r\n                    <th>Usuario</th>\r\n                    <th>Fecha</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(post, index) in posts\" :key=\"post.id\">\r\n                    <td class=\"align-middle\">{{ index + 1 }}</td>\r\n                    <td class=\"align-middle\">\r\n                        <img :src=\"post.image\" alt=\"Imagen de la publicación\" class=\"img-thumbnail\"\r\n                            style=\"width: 50px; height: auto;\" />\r\n                    </td>\r\n                    <td class=\"align-middle\">{{ post.title }}</td>\r\n                    <td class=\"align-middle\">{{ post.description }}</td>\r\n                    <td class=\"align-middle\">{{ post.username }}</td>\r\n                    <td class=\"align-middle\">{{ formatDate(post.created_at) }}</td>\r\n                    <td class=\"align-middle\">\r\n                        <button class=\"btn btn-warning btn-sm mr-3\" @click=\"editPost(post.id)\">Editar</button>\r\n                        <button class=\"btn btn-danger btn-sm\" @click=\"deletePost(post.id)\">Eliminar</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            posts: [],\r\n        };\r\n    },\r\n    methods: {\r\n        async fetchPosts() {\r\n            try {\r\n                const token = localStorage.getItem('authToken');\r\n                if (token) {\r\n                    const response = await apiClient.get('/posts', {\r\n                        headers: { Authorization: `Bearer ${token}` }\r\n                    });\r\n                    this.posts = response.data;\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener las publicaciones:', error);\r\n            }\r\n        },\r\n        createMyPost() {\r\n            this.$router.push('/admin/post-create');\r\n        },\r\n        editPost(postId) {\r\n            this.$router.push(`/admin/post-edit/${postId}`);\r\n        },\r\n        async deletePost(postId) {\r\n            const token = localStorage.getItem('authToken');\r\n            if (token && confirm('¿Estás seguro de que deseas eliminar esta publicación?')) {\r\n                try {\r\n                    const response = await apiClient.delete(`/posts/${postId}`, {\r\n                        headers: { Authorization: `Bearer ${token}` }\r\n                    });\r\n                    console.log('Publicación eliminada:', response.data);\r\n                    // this.posts = this.posts.filter(post => post.id !== postId);\r\n                    // alert('Publicación eliminada correctamente.');\r\n                } catch (error) {\r\n                    console.error('Error al eliminar la publicación:', error);\r\n                }\r\n            }\r\n        },\r\n        formatDate(dateString) {\r\n            if (!dateString) return '';\r\n            return new Date(dateString).toLocaleDateString();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchPosts();\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n    margin-top: 20px;\r\n}\r\n</style>"],"mappings":";AAwCA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,IAAIF,KAAK,EAAE;UACP,MAAMG,QAAO,GAAI,MAAMR,SAAS,CAACS,GAAG,CAAC,QAAQ,EAAE;YAC3CC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUN,KAAK;YAAG;UAChD,CAAC,CAAC;UACF,IAAI,CAACH,KAAI,GAAIM,QAAQ,CAACP,IAAI;QAC9B;MACJ,EAAE,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC/D;IACJ,CAAC;IACDE,YAAYA,CAAA,EAAG;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;IAC3C,CAAC;IACDC,QAAQA,CAACC,MAAM,EAAE;MACb,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,oBAAoBE,MAAM,EAAE,CAAC;IACnD,CAAC;IACD,MAAMC,UAAUA,CAACD,MAAM,EAAE;MACrB,MAAMb,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAI,IAAKe,OAAO,CAAC,wDAAwD,CAAC,EAAE;QAC5E,IAAI;UACA,MAAMZ,QAAO,GAAI,MAAMR,SAAS,CAACqB,MAAM,CAAC,UAAUH,MAAM,EAAE,EAAE;YACxDR,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUN,KAAK;YAAG;UAChD,CAAC,CAAC;UACFQ,OAAO,CAACS,GAAG,CAAC,wBAAwB,EAAEd,QAAQ,CAACP,IAAI,CAAC;UACpD;UACA;QACJ,EAAE,OAAOW,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QAC7D;MACJ;IACJ,CAAC;IACDW,UAAUA,CAACC,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;MAC1B,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,CAAC;IACpD;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACvB,UAAU,CAAC,CAAC;EACrB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}