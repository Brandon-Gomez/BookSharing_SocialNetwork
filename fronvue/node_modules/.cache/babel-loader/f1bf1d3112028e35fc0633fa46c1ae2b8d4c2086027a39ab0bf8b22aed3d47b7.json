{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from \"@/services/ApiService\";\nimport { logoutUser } from '@/services/useAuth.js';\nexport default {\n  components: {},\n  props: {\n    postId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      userData: {\n        id: \"\",\n        email: \"\",\n        password: \"\",\n        username: \"\",\n        name: \"\",\n        birthdate: \"\",\n        gender: \"\",\n        description: \"\",\n        profile_picture: \"\"\n      },\n      isCurrentUser: true,\n      publications: 0,\n      follows: {\n        isFollowing: false,\n        followers: 0,\n        following: 0\n      },\n      countPosts: 0,\n      profileImageFile: null,\n      profilePhoto: null,\n      newPost: {\n        id: \"\",\n        title: \"\",\n        description: \"\",\n        image: \"\",\n        pdf: \"\"\n      }\n    };\n  },\n  methods: {\n    onPageChange(n) {\n      this.page = n;\n      this.fetchPosts();\n    },\n    async fetchUser() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const username = this.userData.username;\n        const response = await apiClient.get(`/profile/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        let user = response.data.user;\n        // Formatea la fecha para el input date\n        if (user.birthdate) {\n          user.birthdate = user.birthdate.split(\"T\")[0];\n        }\n        this.userData = {\n          ...user,\n          password: \"\"\n        };\n        this.isCurrentUser = response.data.isCurrentUser;\n\n        // Obtener seguidores y seguidos\n        if (user.id) {\n          // Seguidores\n          const resFollowers = await apiClient.get(`/follow/followers/count/${user.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.follows.followers = resFollowers.data.followerCount || 0;\n\n          // Seguidos\n          const resFollowing = await apiClient.get(`/follow/following/count/${user.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.follows.following = resFollowing.data.followingCount || 0;\n\n          // cantidad de publicaciones\n          const res = await apiClient.get(`/posts/count/${user.id}`);\n          this.countPosts = res.data.post_count;\n        }\n      } catch (error) {\n        console.error(\"Error al obtener el usuario:\", error.response?.data || error);\n      }\n    },\n    async fetchPost() {\n      try {\n        // console log prop postId\n        const postId = this.postId;\n        const token = localStorage.getItem(\"authToken\");\n        const response = await apiClient.get(`/posts/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.userData.id = response.data.user_id;\n        this.userData.username = response.data.username;\n        this.newPost = response.data;\n        // console.log(\"DATA OBTENIDA:\", response.data);\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    },\n    getUserImage() {\n      return this.userData.profile_picture || \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\";\n    },\n    logout() {\n      logoutUser(this.$router);\n    },\n    async updatePost() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        const formData = new FormData();\n        if (!this.newPost.title || !this.newPost.description) {\n          console.error('Title and description are required.');\n          return;\n        }\n        formData.append('title', this.newPost.title);\n        formData.append('description', this.newPost.description);\n        // formData.append('images', this.newPost.images);\n        // formData.append('pdf', this.newPost.pdf_file);\n\n        // Añadir la imagen solo si se seleccionó una nueva\n        if (this.newPost.images) {\n          formData.append('images', this.newPost.images);\n        }\n\n        // Añadir el PDF solo si se seleccionó uno nuevo\n        if (this.newPost.pdf_file) {\n          formData.append('pdf', this.newPost.pdf_file);\n        }\n\n        // Log de datos que se enviarán\n        for (const [key, value] of formData.entries()) {\n          console.log(`${key}:`, value);\n        }\n        try {\n          const response = await apiClient.put(`/posts/${this.postId}`, formData, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log(response.data);\n          this.$router.push(`/profile/${this.userData.username}`);\n        } catch (error) {\n          console.error('Error updating post:', error);\n        }\n      }\n    },\n    goToEditProfile() {\n      this.$router.push(`/profile/${this.userData.username}/edit-account`);\n    },\n    editPost(post) {\n      // Redirige a la vista de edición del post del usuario\n      this.$router.push(`/posts/${post.id}/edit-post`);\n    },\n    async deletePost(post) {\n      if (confirm('¿Estás seguro de que deseas eliminar esta publicación?')) {\n        try {\n          const token = localStorage.getItem('authToken');\n          await apiClient.delete(`/posts/${post.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          // Recarga las publicaciones después de eliminar\n          alert('Publicación eliminada correctamente');\n        } catch (error) {\n          alert('Error al eliminar la publicación');\n          console.error(error);\n        }\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchPost(), this.fetchUser();\n  }\n};","map":{"version":3,"names":["apiClient","logoutUser","components","props","postId","type","String","Number","required","data","userData","id","email","password","username","name","birthdate","gender","description","profile_picture","isCurrentUser","publications","follows","isFollowing","followers","following","countPosts","profileImageFile","profilePhoto","newPost","title","image","pdf","methods","onPageChange","n","page","fetchPosts","fetchUser","token","localStorage","getItem","response","get","headers","Authorization","user","split","resFollowers","followerCount","resFollowing","followingCount","res","post_count","error","console","fetchPost","user_id","getUserImage","logout","$router","updatePost","formData","FormData","append","images","pdf_file","key","value","entries","log","put","push","goToEditProfile","editPost","post","deletePost","confirm","delete","alert","mounted"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editpost_component.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"page-title-overlap bg-dark pt-4\">\r\n      <div\r\n        class=\"container d-flex flex-wrap flex-sm-nowrap justify-content-center justify-content-sm-between align-items-center pt-2\">\r\n        <div class=\"d-flex align-items-center pb-3\">\r\n          <div class=\"rounded-circle position-relative flex-shrink-0\" style=\"width: 6.375rem\">\r\n            <img class=\"rounded-circle\" :src=\"getUserImage()\" :alt=\"userData.name\" />\r\n          </div>\r\n          <div class=\"ps-3\">\r\n            <h3 class=\"text-light fs-lg mb-0\">{{ userData.name }}</h3>\r\n            <span class=\"d-block text-light fs-ms opacity-60 py-1\">@{{ userData.username }}</span>\r\n            <span class=\"d-block text-light fs-ms py-1 w-75\" style=\"max-width: 450px\">\r\n              {{ userData.description }}</span>\r\n\r\n          </div>\r\n        </div>\r\n        <!-- Desktop version -->\r\n        <div class=\"d-none d-sm-flex\">\r\n          <div class=\"text-sm-end me-2\">\r\n            <div class=\"text-light fs-base mr-2\">{{ countPosts }}<span\r\n                class=\"text-light fs-ms opacity-60 py-1 ml-2\">Publicaciones</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-sm-end me-2\">\r\n            <div class=\"text-light fs-base mr-2\">{{ follows.followers }}<span\r\n                class=\"text-light fs-ms opacity-60 py-1 ml-2\">Seguidores</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-sm-end me-2\">\r\n            <div class=\"text-light fs-base mr-2\">{{ follows.following }}<span\r\n                class=\"text-light fs-ms opacity-60 py-1  ml-2\">Siguiendo</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Mobile version -->\r\n        <div class=\"d-flex d-sm-none w-100 justify-content-around my-3\">\r\n          <div class=\"text-center\">\r\n            <div class=\"text-light fs-6 fw-bold\">{{ countPosts }}</div>\r\n            <div class=\"text-light fs-ms opacity-60 py-1\">Publicaciones</div>\r\n          </div> \r\n\r\n          <div class=\"text-center\">\r\n            <div class=\"text-light fs-6 fw-bold\">{{ follows.followers }}</div>\r\n            <div class=\"text-light fs-ms opacity-60 py-1\">Seguidores</div>\r\n          </div>\r\n          <div class=\"text-center\">\r\n            <div class=\"text-light fs-6 fw-bold\">{{ follows.following }}</div>\r\n            <div class=\"text-light fs-ms opacity-60 py-1\">Seguidos</div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"container mb-5 pb-3\">\r\n      <div class=\"bg-light shadow-lg rounded-3 overflow-hidden\">\r\n        <div class=\"row\">\r\n          <!-- Sidebar-->\r\n          <aside class=\"col-lg-4 pt-4 pt-lg-0 pe-xl-5\">\r\n            <div class=\"d-block d-lg-none p-4\">\r\n              <a class=\"btn btn-outline-accent d-block\" href=\"#account-menu\" data-bs-toggle=\"collapse\"\r\n                aria-expanded=\"true\"><i class=\"ci-menu me-2\"></i>Menu de cuenta</a>\r\n            </div>\r\n            <div class=\"bg-white rounded-3 shadow-lg pt-1 mb-lg-0\">\r\n              <div class=\"d-lg-block collapse\" id=\"account-menu\">\r\n                <div class=\"bg-secondary px-4 py-3\">\r\n                  <h3 class=\"fs-sm mb-0 text-muted\">Cuenta</h3>\r\n                </div>\r\n                <ul class=\"list-unstyled mb-0\">\r\n                  <li class=\"border-bottom mb-0\">\r\n                    <a type=\"button\"\r\n                      class=\"nav-link-style d-flex align-items-center px-4 py-3 active\"\r\n                      \r\n                      @click.prevent=\"$router.push(`/profile/${userData.username}`)\"\r\n                    >\r\n                      <i class=\"ci-book opacity-60 me-2\"></i>\r\n                      Publicaciones\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"border-bottom mb-0\">\r\n                    <a class=\"nav-link-style d-flex align-items-center px-4 py-3\" href=\"#\">\r\n                      <i class=\"ci-heart opacity-60 me-2\"></i>\r\n                      Favoritos\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <div v-if=\"isCurrentUser\">\r\n                  <div class=\"bg-secondary px-4 py-3\">\r\n                    <h3 class=\"fs-sm mb-0 text-muted\">Configuración</h3>\r\n                  </div>\r\n                  <ul class=\"list-unstyled mb-0\">\r\n                    <li class=\"border-bottom mb-0\">\r\n                      <a type=\"button\" class=\"nav-link-style d-flex align-items-center px-4 py-3\"\r\n                        @click.prevent=\"goToEditProfile\">\r\n                        <i class=\"ci-user opacity-60 me-2\"></i>\r\n                        Información personal\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"border-top mb-0\">\r\n                      <a type=\"button\" class=\"nav-link-style d-flex align-items-center px-4 py-3\" @click=\"logout\">\r\n                        <i class=\"ci-sign-out opacity-60 me-2\"></i>\r\n                        Cerrar sesión\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n          <!-- Content-->\r\n          <section class=\"col-lg-8 pt-lg-4 pb-4 mb-3\">\r\n            <!-- Toolbar-->\r\n\r\n            <h2 class=\"h3 pt-2 pb-4 mb-0 text-center text-sm-start border-bottom mt-2\">\r\n              Modificar publicacion\r\n            </h2>\r\n            <form @submit.prevent=\"updatePost\">\r\n              <div class=\"form-group my-2\">\r\n                <label for=\"title\">Título</label>\r\n                <input type=\"text\" id=\"title\" v-model=\"newPost.title\" class=\"form-control\" />\r\n              </div>\r\n\r\n              <div class=\"form-group my-2\">\r\n                <label for=\"description\">Descripción</label>\r\n                <textarea id=\"description\" v-model=\"newPost.description\" class=\"form-control\"></textarea>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"category\">Categoría</label>\r\n                <select id=\"category\" v-model=\"newPost.category_id\" class=\"form-control\">\r\n                  <option value=\"\" disabled selected>Selecciona una categoría</option>\r\n                  <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n                    {{ category.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"form-group my-2\">\r\n                <label for=\"image\">Imagen</label>\r\n                <input type=\"file\" id=\"image\" @change=\"handleImageUpload\" class=\"form-control\" accept=\"image/*\" />\r\n              </div>\r\n\r\n              <div class=\"form-group my-2\">\r\n                <label for=\"pdf\">Archivo PDF</label>\r\n                <input type=\"file\" id=\"pdf\" @change=\"handlePdfUpload\" class=\"form-control\" accept=\"application/*\" />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n              <!-- <button @click=\"deletePost\" class=\"btn btn-danger ml-2\">Eliminar Publicación</button> -->\r\n            </form>\r\n\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport { logoutUser } from '@/services/useAuth.js';\r\n\r\nexport default {\r\n  components: {\r\n  },\r\n\r\n  props: {\r\n    postId: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      userData: {\r\n        id: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        birthdate: \"\",\r\n        gender: \"\",\r\n        description: \"\",\r\n        profile_picture: \"\",\r\n      },\r\n      isCurrentUser: true,\r\n      publications: 0,\r\n      follows: {\r\n        isFollowing: false,\r\n        followers: 0,\r\n        following: 0,\r\n      },\r\n      countPosts: 0, \r\n      profileImageFile: null,\r\n      profilePhoto: null,\r\n      newPost: {\r\n        id: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        image: \"\",\r\n        pdf: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    onPageChange(n) {\r\n      this.page = n;\r\n      this.fetchPosts();\r\n    },\r\n\r\n    async fetchUser() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const username = this.userData.username;\r\n        const response = await apiClient.get(`/profile/${username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        let user = response.data.user;\r\n        // Formatea la fecha para el input date\r\n        if (user.birthdate) {\r\n          user.birthdate = user.birthdate.split(\"T\")[0];\r\n        }\r\n        this.userData = {\r\n          ...user,\r\n          password: \"\",\r\n        };\r\n        this.isCurrentUser = response.data.isCurrentUser;\r\n\r\n        // Obtener seguidores y seguidos\r\n        if (user.id) {\r\n          // Seguidores\r\n          const resFollowers = await apiClient.get(\r\n            `/follow/followers/count/${user.id}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          this.follows.followers = resFollowers.data.followerCount || 0;\r\n\r\n          // Seguidos\r\n          const resFollowing = await apiClient.get(\r\n            `/follow/following/count/${user.id}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          this.follows.following = resFollowing.data.followingCount || 0;\r\n\r\n          // cantidad de publicaciones\r\n          const res = await apiClient.get(`/posts/count/${user.id}`);\r\n          this.countPosts = res.data.post_count;\r\n\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error al obtener el usuario:\",\r\n          error.response?.data || error\r\n        );\r\n      }\r\n    },\r\n\r\n    async fetchPost() {\r\n      try {\r\n        // console log prop postId\r\n        const postId = this.postId;\r\n        const token = localStorage.getItem(\"authToken\");\r\n\r\n        const response = await apiClient.get(`/posts/${postId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n        );\r\n        this.userData.id = response.data.user_id;\r\n        this.userData.username = response.data.username;\r\n        this.newPost = response.data;\r\n        // console.log(\"DATA OBTENIDA:\", response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching post:', error);\r\n      }\r\n    },\r\n    getUserImage() {\r\n      return (\r\n        this.userData.profile_picture ||\r\n        \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\"\r\n      );\r\n    },\r\n    logout() {\r\n      logoutUser(this.$router);\r\n    },\r\n\r\n    async updatePost() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        const formData = new FormData();\r\n\r\n        if (!this.newPost.title || !this.newPost.description) {\r\n          console.error('Title and description are required.');\r\n          return;\r\n        }\r\n\r\n        formData.append('title', this.newPost.title);\r\n        formData.append('description', this.newPost.description);\r\n        // formData.append('images', this.newPost.images);\r\n        // formData.append('pdf', this.newPost.pdf_file);\r\n\r\n        // Añadir la imagen solo si se seleccionó una nueva\r\n        if (this.newPost.images) {\r\n          formData.append('images', this.newPost.images);\r\n        }\r\n\r\n        // Añadir el PDF solo si se seleccionó uno nuevo\r\n        if (this.newPost.pdf_file) {\r\n          formData.append('pdf', this.newPost.pdf_file);\r\n        }\r\n\r\n        // Log de datos que se enviarán\r\n        for (const [key, value] of formData.entries()) {\r\n          console.log(`${key}:`, value);\r\n        }\r\n\r\n        try {\r\n          const response = await apiClient.put(`/posts/${this.postId}`, formData, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n          console.log(response.data);\r\n\r\n          this.$router.push(`/profile/${this.userData.username}`)\r\n        } catch (error) {\r\n          console.error('Error updating post:', error);\r\n        }\r\n      }\r\n    },\r\n\r\n    goToEditProfile() {\r\n      this.$router.push(`/profile/${this.userData.username}/edit-account`);\r\n    },\r\n\r\n    editPost(post) {\r\n      // Redirige a la vista de edición del post del usuario\r\n      this.$router.push(`/posts/${post.id}/edit-post`);\r\n    },\r\n    async deletePost(post) {\r\n      if (confirm('¿Estás seguro de que deseas eliminar esta publicación?')) {\r\n        try {\r\n          const token = localStorage.getItem('authToken');\r\n          await apiClient.delete(`/posts/${post.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          // Recarga las publicaciones después de eliminar\r\n          alert('Publicación eliminada correctamente');\r\n        } catch (error) {\r\n          alert('Error al eliminar la publicación');\r\n          console.error(error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    await this.fetchPost(),\r\n      this.fetchUser();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.library-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.library-item .card {\r\n  height: 100%;\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-img-top {\r\n  height: 300px;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}