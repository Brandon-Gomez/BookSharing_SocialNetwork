{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-form\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.loginUser && $options.loginUser(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    id: \"email\",\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Login\", -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    id: \"formFooter\",\n    class: \"underlineHover\"\n  }, [_createElementVNode(\"a\", {\n    href: \"#\"\n  }, \"Forgot Password?\")], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","loginUser","_hoisted_2","for","$event","$data","email","type","id","placeholder","required","password","href"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\login_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-form\">\r\n      <form @submit.prevent=\"loginUser\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input v-model=\"email\" type=\"email\" id=\"email\" placeholder=\"Email\" required />\r\n\r\n          <label for=\"password\">Password</label>\r\n          <input v-model=\"password\" type=\"password\" id=\"password\" placeholder=\"Password\" required />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        <div id=\"formFooter\" class=\"underlineHover\">\r\n          <a href=\"#\">Forgot Password?</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from '../services/ApiService';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: '',\r\n        password: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async loginUser() {\r\n        try {\r\n          console.log(this.email);\r\n          const response = await apiClient.post('/login', {\r\n            email: this.email,\r\n            password: this.password\r\n          });\r\n          console.log('Logged in:', response.data);\r\n          // Almacenar el token o redirigir al usuario\r\n          localStorage.setItem('authToken', response.data.token);\r\n          this.$router.push('/'); // Redirige a la página principal\r\n        } catch (error) {\r\n          console.error('Error en el login:', error.response.data);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n/* Estilos para el formulario de login */\r\n.login-form {\r\n  background-color: #f5f5f5;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Estilos para los grupos de campos */\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n/* Estilos para las etiquetas */\r\nlabel {\r\n  font-weight: bold;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n/* Estilos para los campos de entrada */\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Estilos para el botón */\r\n.login-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n/* Estilos para el pie del formulario */\r\n#formFooter {\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n/* Estilos para el enlace de \"Forgot Password\" */\r\n.underlineHover a {\r\n  text-decoration: underline;\r\n  color: #2C3E50;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAY;;EAEdA,KAAK,EAAC;AAAY;;uBAF3BC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAYO;IAZAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFnBC,cAAA,KAAAC,IAAA,KAE6BC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAC9BJ,mBAAA,CAMM,OANNO,UAMM,G,0BALJP,mBAAA,CAAgC;IAAzBQ,GAAG,EAAC;EAAO,GAAC,OAAK,sB,gBACxBR,mBAAA,CAA8E;IALxF,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAK0BC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IAACC,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAnDL,KAAA,CAAAC,KAAK,E,6BAErBX,mBAAA,CAAsC;IAA/BQ,GAAG,EAAC;EAAU,GAAC,UAAQ,sB,gBAC9BR,mBAAA,CAA0F;IARpG,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAQ0BC,KAAA,CAAAM,QAAQ,GAAAP,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA/DL,KAAA,CAAAM,QAAQ,E,+BAE1BhB,mBAAA,CAAoC;IAA5BY,IAAI,EAAC;EAAQ,GAAC,OAAK,sB,0BAC3BZ,mBAAA,CAEM;IAFDa,EAAE,EAAC,YAAY;IAAChB,KAAK,EAAC;MACzBG,mBAAA,CAAgC;IAA7BiB,IAAI,EAAC;EAAG,GAAC,kBAAgB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}