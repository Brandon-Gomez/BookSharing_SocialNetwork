{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from \"../views/home_view.vue\";\nimport LoginView from '../views/login_view.vue';\nimport RegisterView from '../views/register_view.vue';\nimport ForgotPassword from \"../views/forgotpassword_view.vue\";\nimport ResetPassword from \"../views/resetpassword_view.vue\";\nimport ProfileView from \"../views/profile_view.vue\";\nimport EditProfileView from \"../views/editprofile_view.vue\";\nimport PostView from \"../views/post_view.vue\";\nimport EditPostView from \"../views/editpost_view.vue\";\nimport LikeView from \"../views/like_view.vue\";\nimport PdfPreviewView from \"../views/pdfpreview_view.vue\";\n// import FollowView from \"../views/follow_view.vue\"\nimport DashboardView from '../views/admin/dashboard_view.vue';\nimport AdminLayout from '../layouts/AdminLayout.vue'; // Asegúrate de que la ruta sea correcta\nimport MainLayout from '@/layouts/MainLayout.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/login',\n  name: 'Login',\n  component: LoginView,\n  MainLayout\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterView\n}, {\n  path: \"/forgot-password\",\n  name: \"ForgotPassword\",\n  component: ForgotPassword\n}, {\n  path: \"/reset-password\",\n  name: \"ResetPassword\",\n  component: ResetPassword\n}, {\n  path: '/profile/:username',\n  name: 'Profile',\n  component: ProfileView,\n  meta: {\n    requiresAuth: true\n  },\n  // Esta ruta requiere autenticación\n  props: true // Permite pasar `username` como prop al componente\n}, {\n  path: '/profile/:username/edit-account',\n  name: 'EditProfile',\n  component: EditProfileView,\n  props: true\n}, {\n  path: '/posts',\n  name: 'PostView',\n  component: PostView\n}, {\n  path: '/posts/:postId/edit-post',\n  name: 'EditPost',\n  component: EditPostView,\n  props: true\n}, {\n  path: '/like',\n  name: 'LikeView',\n  component: LikeView\n}, {\n  path: \"/pdf-preview\",\n  name: \"PdfPreview\",\n  component: PdfPreviewView\n},\n// {\n//   path: '/follow/:userId',\n//   name: 'Follow',\n//   component: FollowView,\n//   props: true, \n// },\n\n{\n  path: '/admin',\n  component: AdminLayout\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Guard de navegación global\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = !!localStorage.getItem('authToken'); // Verifica si hay un token\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    // Si la ruta requiere autenticación y no está autenticado, redirige al login\n    next({\n      path: '/login'\n    });\n  } else {\n    // De lo contrario, permite el acceso\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","LoginView","RegisterView","ForgotPassword","ResetPassword","ProfileView","EditProfileView","PostView","EditPostView","LikeView","PdfPreviewView","DashboardView","AdminLayout","MainLayout","routes","path","name","component","meta","requiresAuth","props","router","history","beforeEach","to","from","next","isAuthenticated","localStorage","getItem"],"sources":["D:/Downloads/BookSharing_SocialNetwork/fronvue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomeView from \"../views/home_view.vue\"\r\nimport LoginView from '../views/login_view.vue';\r\nimport RegisterView from '../views/register_view.vue';\r\nimport ForgotPassword from \"../views/forgotpassword_view.vue\";\r\nimport ResetPassword from \"../views/resetpassword_view.vue\";\r\nimport ProfileView from \"../views/profile_view.vue\"\r\nimport EditProfileView from \"../views/editprofile_view.vue\"\r\nimport PostView from \"../views/post_view.vue\"\r\nimport EditPostView from \"../views/editpost_view.vue\"\r\nimport LikeView from \"../views/like_view.vue\"\r\nimport PdfPreviewView from \"../views/pdfpreview_view.vue\"\r\n// import FollowView from \"../views/follow_view.vue\"\r\nimport DashboardView from '../views/admin/dashboard_view.vue';\r\nimport AdminLayout from '../layouts/AdminLayout.vue'; // Asegúrate de que la ruta sea correcta\r\nimport MainLayout from '@/layouts/MainLayout.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: LoginView,MainLayout\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: RegisterView\r\n  },\r\n  {\r\n    path: \"/forgot-password\",\r\n    name: \"ForgotPassword\",\r\n    component: ForgotPassword,\r\n  },\r\n  {\r\n    path: \"/reset-password\",\r\n    name: \"ResetPassword\",\r\n    component: ResetPassword,\r\n  },\r\n  {\r\n    path: '/profile/:username',\r\n    name: 'Profile',\r\n    component: ProfileView,\r\n    meta : { requiresAuth: true }, // Esta ruta requiere autenticación\r\n    props: true // Permite pasar `username` como prop al componente\r\n  },\r\n  {\r\n    path: '/profile/:username/edit-account',\r\n    name: 'EditProfile',\r\n    component: EditProfileView,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/posts',\r\n    name: 'PostView',\r\n    component: PostView,\r\n  },\r\n  {\r\n    path: '/posts/:postId/edit-post',\r\n    name: 'EditPost',\r\n    component: EditPostView,\r\n    props: true \r\n  },\r\n  {\r\n    path: '/like',\r\n    name: 'LikeView',\r\n    component: LikeView\r\n  },\r\n  {\r\n    path: \"/pdf-preview\",\r\n    name: \"PdfPreview\",\r\n    component: PdfPreviewView\r\n  },\r\n  // {\r\n  //   path: '/follow/:userId',\r\n  //   name: 'Follow',\r\n  //   component: FollowView,\r\n  //   props: true, \r\n  // },\r\n  \r\n  {\r\n    path: '/admin',\r\n    component: AdminLayout, \r\n    \r\n  },\r\n\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\n// Guard de navegación global\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = !!localStorage.getItem('authToken'); // Verifica si hay un token\r\n  if (to.meta.requiresAuth && !isAuthenticated) {\r\n      // Si la ruta requiere autenticación y no está autenticado, redirige al login\r\n      next({ path: '/login' });\r\n  } else {\r\n      // De lo contrario, permite el acceso\r\n      next();\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,cAAc,MAAM,8BAA8B;AACzD;AACA,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAC;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEjB;AACb,CAAC,EACD;EACEe,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEhB,SAAS;EAACY;AACvB,CAAC,EACD;EACEE,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEf;AACb,CAAC,EACD;EACEa,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEd;AACb,CAAC,EACD;EACEY,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEb;AACb,CAAC,EACD;EACEW,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEZ,WAAW;EACtBa,IAAI,EAAG;IAAEC,YAAY,EAAE;EAAK,CAAC;EAAE;EAC/BC,KAAK,EAAE,IAAI,CAAC;AACd,CAAC,EACD;EACEL,IAAI,EAAE,iCAAiC;EACvCC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEX,eAAe;EAC1Bc,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,0BAA0B;EAChCC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAET,YAAY;EACvBY,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEP;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;EACEK,IAAI,EAAE,QAAQ;EACdE,SAAS,EAAEL;AAEb,CAAC,CAEF;AAED,MAAMS,MAAM,GAAGvB,YAAY,CAAC;EAC1BwB,OAAO,EAAEvB,gBAAgB,CAAC,CAAC;EAC3Be;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EAC7D,IAAIL,EAAE,CAACN,IAAI,CAACC,YAAY,IAAI,CAACQ,eAAe,EAAE;IAC1C;IACAD,IAAI,CAAC;MAAEX,IAAI,EAAE;IAAS,CAAC,CAAC;EAC5B,CAAC,MAAM;IACH;IACAW,IAAI,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}