{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-layout\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" clean head \"), _cache[1] || (_cache[1] = _createElementVNode(\"head\", null, [_createElementVNode(\"meta\", {\n    charset: \"utf-8\"\n  }), _createElementVNode(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), _createElementVNode(\"title\", null, \"Panel de Administración\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"header\", null, [_createElementVNode(\"h1\", null, \"Panel de Administración\")], -1 /* HOISTED */)), _createElementVNode(\"main\", null, [_createVNode(_component_router_view), _createCommentVNode(\" Asegúrate de que este componente esté presente \")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","charset","name","content","_hoisted_1","_createVNode","_component_router_view"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\layouts\\AdminLayout.vue"],"sourcesContent":["<template>\r\n    <!-- clean head -->\r\n\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>Panel de Administración</title>\r\n    </head>\r\n    <div class=\"admin-layout\">\r\n        <header>\r\n            <h1>Panel de Administración</h1>\r\n        </header>\r\n        <main>\r\n            <router-view /> <!-- Asegúrate de que este componente esté presente -->\r\n        </main>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'AdminLayout',\r\n    beforeCreate() {\r\n        // Simula una función para verificar si el usuario es administrador\r\n        const isAdmin = this.checkIfAdmin();\r\n\r\n        if (!isAdmin) {\r\n            // Redirige al login si no es administrador\r\n            //this.$router.push({ name: 'Login' });\r\n        }\r\n    },\r\n    methods: {\r\n        checkIfAdmin() {\r\n            // Aquí puedes implementar la lógica para verificar si el usuario es administrador\r\n            // Por ejemplo, verificando un token o una propiedad en el estado global\r\n            //const user = JSON.parse(localStorage.getItem('user')); / / Ejemplo usando localStorage\r\n            //console.log(user);\r\n            //return user && user.role === 'admin';\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style></style>"],"mappings":";;EAQSA,KAAK,EAAC;AAAc;;;uBAR7BC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,gBAAmB,E,0BAEnBC,mBAAA,CAIO,eAHHA,mBAAA,CAAsB;IAAhBC,OAAO,EAAC;EAAO,IACrBD,mBAAA,CAAsE;IAAhEE,IAAI,EAAC,UAAU;IAACC,OAAO,EAAC;MAC9BH,mBAAA,CAAsC,eAA/B,yBAAuB,E,sBAElCA,mBAAA,CAOM,OAPNI,UAOM,G,0BANFJ,mBAAA,CAES,iBADLA,mBAAA,CAAgC,YAA5B,yBAAuB,E,sBAE/BA,mBAAA,CAEO,eADHK,YAAA,CAAeC,sBAAA,GAACP,mBAAA,oDAAuD,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}