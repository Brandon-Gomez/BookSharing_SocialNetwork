{"ast":null,"code":"export default {\n  name: 'NavComponent'\n};","map":{"version":3,"names":["name"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\navbar_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <ul>\r\n      <li>\r\n        <router-link to=\"/\"></router-link>\r\n        <i class=\"fa fa-home\"></i> Inicio\r\n      </li>\r\n      <li>\r\n        <router-link to=\"/profile:username\"></router-link>\r\n        <i class=\"fa fa-user\"></i> Perfil\r\n      </li>\r\n      <li>\r\n        <router-link to=\"/search\"></router-link>\r\n        <i class=\"fa fa-search\"></i> Buscar\r\n      </li>\r\n      <li>\r\n        <router-link to=\"/logouts\"></router-link>\r\n        <i class=\"fa fa-sign-out\"></i> Cerrar sesión\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<!-- <script>\r\nimport apiClient from '../services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: this.getProfileData(),\r\n      defaultPicture: 'favicon.png', // Ruta a una imagen por defecto\r\n    };\r\n  },\r\n  methods: {\r\n    // Método para obtener los datos del perfil del usuario desde el localStorage\r\n    getProfileData() {\r\n      const profile = localStorage.getItem('profileData');\r\n      return profile ? JSON.parse(profile) : {\r\n        name: '',\r\n        username: '',\r\n        profile_picture: this.defaultPicture, // Imagen por defecto si no hay foto\r\n      };\r\n    },\r\n\r\n    // Actualiza los datos del perfil al detectar cambios\r\n    updateProfileData() {\r\n      this.profileData = this.getProfileData();\r\n    },\r\n\r\n    // Redirige al usuario a la página de inicio\r\n    navigateToHome() {\r\n      this.$router.push('/');\r\n    },\r\n\r\n    // Navega al perfil del usuario si está autenticado\r\n    navigateToProfile() {\r\n      const isAuthenticated = this.checkAuthentication();\r\n      if (isAuthenticated && this.profileData.username) {\r\n        this.$router.push(`/profile/${this.profileData.username}`);\r\n      } else {\r\n        alert('Por favor, inicia sesión primero.');\r\n      }\r\n    },\r\n\r\n    // Redirige a la página de búsqueda\r\n    navigateToSearch() {\r\n      this.$router.push('/search');\r\n    },\r\n\r\n    // Lógica de cierre de sesión\r\n    async logout() {\r\n      try {\r\n        // Enviar solicitud de POST para cerrar sesión en el backend\r\n        await apiClient.post('/logout',{\r\n\r\n        });\r\n\r\n        // Eliminar el token de autenticación y los datos del perfil del localStorage\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('profileData');\r\n\r\n        // Redirigir al usuario a la página de inicio de sesión\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error('Error al cerrar sesión:', error);\r\n      }\r\n    },\r\n\r\n    // Verifica si el token de autenticación existe en el localStorage\r\n    checkAuthentication() {\r\n      return !!localStorage.getItem('authToken');\r\n    },\r\n  },\r\n  // Al montar el componente, registra un listener para actualizar los datos\r\n  mounted() {\r\n    window.addEventListener('storage', this.updateProfileData);\r\n    this.updateProfileData(); // Actualiza los datos al montar el componente\r\n  },\r\n  // Limpia los listeners cuando el componente se desmonta\r\n  beforeUnmount() {\r\n    window.removeEventListener('storage', this.updateProfileData);\r\n  },\r\n};\r\n</script> -->\r\n\r\n<script>\r\n  export default {\r\n    name: 'NavComponent',\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n.sidebar {\r\n  width: 200px;\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  position: fixed;\r\n  height: 100%;\r\n}\r\n\r\n.sidebar ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar li:hover {\r\n  background-color: #e9ecef;\r\n}\r\n</style>\r\n"],"mappings":"AA0GE,eAAe;EACbA,IAAI,EAAE;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}