{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: {}\n      // username: '' // Obtener el nombre de usuario desde la URL\n    };\n  },\n  methods: {\n    async updateProfile() {\n      const token = localStorage.getItem('authToken');\n      const profileData = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          console.log(this.profileData); // Verifica que los datos sean correctos antes de enviar\n          const response = await apiClient.put(`/profile/${this.$route.params.username}/edit-account`, this.profileData, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Profile updated successfully:', response.data);\n          this.$router.push(`/profile/${this.$route.params.username}`); // Redirigir a la vista de perfil\n        } catch (error) {\n          console.error('Error updating profile:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","methods","updateProfile","token","localStorage","getItem","console","log","response","put","$route","params","username","headers","Authorization","$router","push","error"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editprofile_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"card shadow-lg p-4\">\r\n            <div class=\"card-body text-center\">\r\n              <h2 class=\"mb-4\">Editar perfil</h2>\r\n              <form @submit.prevent=\"updateProfile\">\r\n                <div class=\"form-group mb-3\">\r\n                  <label for=\"name\">Nombre</label>\r\n                  <input type=\"text\" id=\"name\" v-model=\"profileData.name\" class=\"form-control\"/>\r\n                </div>\r\n                <div class=\"form-group mb-3\">\r\n                  <label for=\"dob\">Fecha de Nacimiento</label>\r\n                  <input type=\"date\" id=\"dob\" v-model=\"profileData.birthdate\" class=\"form-control\"/>\r\n                </div>\r\n                <div class=\"form-group mb-3\">\r\n                  <label for=\"gender\">Género</label>\r\n                  <select id=\"gender\" v-model=\"profileData.gender\" class=\"form-control\">\r\n                    <option value=\"Masculino\">Masculino</option>\r\n                    <option value=\"Femenino\">Femenino</option>\r\n                    <option value=\"Otro\">Otro</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"form-group mb-4\">\r\n                  <label for=\"description\">Descripción</label>\r\n                  <textarea id=\"description\" v-model=\"profileData.description\" class=\"form-control\" rows=\"3\"></textarea>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary w-100\">\r\n                  Guardar cambios\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {   },\r\n      // username: '' // Obtener el nombre de usuario desde la URL\r\n    };\r\n  },\r\n  methods: {\r\n    async updateProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      const profileData = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n            console.log(this.profileData); // Verifica que los datos sean correctos antes de enviar\r\n            const response = await apiClient.put(`/profile/${this.$route.params.username}/edit-account`, this.profileData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n          console.log('Profile updated successfully:', response.data);\r\n          this.$router.push(`/profile/${this.$route.params.username}`); // Redirigir a la vista de perfil\r\n        } catch (error) {\r\n          console.error('Error updating profile:', error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAwCA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAI;MACjB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAML,WAAU,GAAII,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACrD,IAAIF,KAAK,EAAE;QACT,IAAI;UACAG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,WAAW,CAAC,EAAE;UAC/B,MAAMQ,QAAO,GAAI,MAAMV,SAAS,CAACW,GAAG,CAAC,YAAY,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ,eAAe,EAAE,IAAI,CAACZ,WAAW,EAAE;YAC3Ga,OAAO,EAAE;cACLC,aAAa,EAAE,UAAUX,KAAK;YAClC;UACJ,CAAC,CAAC;UACJG,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,QAAQ,CAACT,IAAI,CAAC;UAC3D,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC,YAAY,IAAI,CAACN,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE,CAAC,EAAE;QAChE,EAAE,OAAOK,KAAK,EAAE;UACdX,OAAO,CAACW,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}