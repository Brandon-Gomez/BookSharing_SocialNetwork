{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from \"@/services/ApiService.js\";\nexport default {\n  data() {\n    return {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    };\n  },\n  methods: {\n    async resetPassword() {\n      console.log(\"Botón de restablecer contraseña presionado\");\n\n      // Verificar si las contraseñas coinciden\n      if (this.newPassword !== this.confirmPassword) {\n        this.message = \"Las contraseñas no coinciden.\";\n        return;\n      }\n      const token = this.$route.query.token; // Obtener el token de los parámetros de la URL\n      if (!token) {\n        this.message = \"Token no válido o ausente.\";\n        return;\n      }\n      try {\n        // Llamar a la API para restablecer la contraseña\n        const response = await apiClient.post(\"/reset-password\", {\n          token: token,\n          newPassword: this.newPassword\n        });\n        console.log(response.data); // Verifica la respuesta del backend\n        this.message = response.data.message || \"Contraseña restablecida correctamente.\";\n\n        // Redirigir al inicio de sesión después de un éxito\n        this.$router.push(\"/login\");\n      } catch (error) {\n        this.message = error.response?.data?.error || \"Error al restablecer la contraseña.\";\n        console.error(error); // Log de error\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","newPassword","confirmPassword","methods","resetPassword","console","log","message","token","$route","query","response","post","$router","push","error"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\resetpassword_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"reset-password\">\r\n    <h2>Restablecer Contraseña</h2>\r\n    <form @submit.prevent=\"resetPassword\">\r\n      <div>\r\n        <label for=\"newPassword\">Nueva Contraseña</label>\r\n        <input type=\"password\" v-model=\"newPassword\" id=\"newPassword\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"confirmPassword\">Confirmar Contraseña</label>\r\n        <input type=\"password\" v-model=\"confirmPassword\" id=\"confirmPassword\" required />\r\n      </div>\r\n      <button type=\"submit\">Restablecer Contraseña</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async resetPassword() {\r\n  console.log(\"Botón de restablecer contraseña presionado\");\r\n\r\n  // Verificar si las contraseñas coinciden\r\n  if (this.newPassword !== this.confirmPassword) {\r\n    this.message = \"Las contraseñas no coinciden.\";\r\n    return;\r\n  }\r\n\r\n  const token = this.$route.query.token; // Obtener el token de los parámetros de la URL\r\n  if (!token) {\r\n    this.message = \"Token no válido o ausente.\";\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Llamar a la API para restablecer la contraseña\r\n    const response = await apiClient.post(\"/reset-password\", {\r\n      token: token,\r\n      newPassword: this.newPassword,\r\n    });\r\n    console.log(response.data);  // Verifica la respuesta del backend\r\n    this.message = response.data.message || \"Contraseña restablecida correctamente.\";\r\n\r\n    // Redirigir al inicio de sesión después de un éxito\r\n    this.$router.push(\"/login\");\r\n  } catch (error) {\r\n    this.message = error.response?.data?.error || \"Error al restablecer la contraseña.\";\r\n    console.error(error);  // Log de error\r\n  }\r\n}\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reset-password {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAkBA,OAAOA,SAAQ,MAAO,0BAA0B;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACxBC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;;MAEzD;MACA,IAAI,IAAI,CAACL,WAAU,KAAM,IAAI,CAACC,eAAe,EAAE;QAC7C,IAAI,CAACK,OAAM,GAAI,+BAA+B;QAC9C;MACF;MAEA,MAAMC,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK,EAAE;MACvC,IAAI,CAACA,KAAK,EAAE;QACV,IAAI,CAACD,OAAM,GAAI,4BAA4B;QAC3C;MACF;MAEA,IAAI;QACF;QACA,MAAMI,QAAO,GAAI,MAAMZ,SAAS,CAACa,IAAI,CAAC,iBAAiB,EAAE;UACvDJ,KAAK,EAAEA,KAAK;UACZP,WAAW,EAAE,IAAI,CAACA;QACpB,CAAC,CAAC;QACFI,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACX,IAAI,CAAC,EAAG;QAC7B,IAAI,CAACO,OAAM,GAAII,QAAQ,CAACX,IAAI,CAACO,OAAM,IAAK,wCAAwC;;QAEhF;QACA,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACR,OAAM,GAAIQ,KAAK,CAACJ,QAAQ,EAAEX,IAAI,EAAEe,KAAI,IAAK,qCAAqC;QACnFV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC,EAAG;MACzB;IACF;EACE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}