{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from \"@/services/ApiService.js\";\nexport default {\n  data() {\n    return {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    };\n  },\n  methods: {\n    async resetPassword() {\n      // Verificar si las contraseñas coinciden\n      if (this.newPassword !== this.confirmPassword) {\n        this.message = \"Las contraseñas no coinciden.\";\n        return;\n      }\n      const token = this.$route.query.token; // Obtener el token de los parámetros de la URL\n\n      if (!token) {\n        this.message = \"Token no válido o ausente.\";\n        return;\n      }\n      try {\n        // Llamar a la API para restablecer la contraseña\n        const response = await apiClient.post(\"/reset-password\", {\n          token: token,\n          newPassword: this.newPassword\n        });\n        console.log(\"Response from API:\", response);\n        this.message = response.data.message || \"Contraseña restablecida correctamente.\";\n\n        // Redirigir al inicio de sesión después de un éxito\n        this.$router.push('/login');\n      } catch (error) {\n        console.error(\"Error during password reset:\", error);\n        this.message = error.response?.data?.error || \"Error al restablecer la contraseña.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","newPassword","confirmPassword","methods","resetPassword","message","token","$route","query","response","post","console","log","$router","push","error"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\resetpassword_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"resetpassword fadeInDown\">\r\n    <div id=\"formContent\">\r\n      <div class=\"fadeIn first\">\r\n        <img src=\"@/assets/LogoRM.png\" id=\"icon\" alt=\"logo\" />\r\n      </div>\r\n      <h2>Restablecer Contraseña</h2>\r\n      <form @submit.prevent=\"resetPassword\">\r\n        <div>\r\n          <input type=\"password\" v-model=\"newPassword\" id=\"newPassword\" class=\"fadeIn second\" placeholder=\"Nueva Contraseña\" required />\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" v-model=\"confirmPassword\" id=\"confirmPassword\" class=\"fadeIn third\" placeholder=\"Confirmar Contraseña\" required />\r\n        </div>\r\n        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Restablecer Contraseña\">\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async resetPassword() {\r\n      // Verificar si las contraseñas coinciden\r\n      if (this.newPassword !== this.confirmPassword) {\r\n        this.message = \"Las contraseñas no coinciden.\";\r\n        return;\r\n      }\r\n\r\n      const token = this.$route.query.token; // Obtener el token de los parámetros de la URL\r\n\r\n      if (!token) {\r\n        this.message = \"Token no válido o ausente.\";\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Llamar a la API para restablecer la contraseña\r\n        const response = await apiClient.post(\"/reset-password\", {\r\n          token: token,\r\n          newPassword: this.newPassword,\r\n        });\r\n        console.log(\"Response from API:\", response);\r\n        this.message = response.data.message || \"Contraseña restablecida correctamente.\";\r\n\r\n        // Redirigir al inicio de sesión después de un éxito\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error(\"Error during password reset:\", error);\r\n        this.message = error.response?.data?.error || \"Error al restablecer la contraseña.\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reset-password {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAqBA,OAAOA,SAAQ,MAAO,0BAA0B;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB;MACA,IAAI,IAAI,CAACH,WAAU,KAAM,IAAI,CAACC,eAAe,EAAE;QAC7C,IAAI,CAACG,OAAM,GAAI,+BAA+B;QAC9C;MACF;MAEA,MAAMC,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK,EAAE;;MAEvC,IAAI,CAACA,KAAK,EAAE;QACV,IAAI,CAACD,OAAM,GAAI,4BAA4B;QAC3C;MACF;MAEA,IAAI;QACF;QACA,MAAMI,QAAO,GAAI,MAAMV,SAAS,CAACW,IAAI,CAAC,iBAAiB,EAAE;UACvDJ,KAAK,EAAEA,KAAK;UACZL,WAAW,EAAE,IAAI,CAACA;QACpB,CAAC,CAAC;QACFU,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAAC;QAC3C,IAAI,CAACJ,OAAM,GAAII,QAAQ,CAACT,IAAI,CAACK,OAAM,IAAK,wCAAwC;;QAEhF;QACA,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAACV,OAAM,GAAIU,KAAK,CAACN,QAAQ,EAAET,IAAI,EAAEe,KAAI,IAAK,qCAAqC;MACrF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}