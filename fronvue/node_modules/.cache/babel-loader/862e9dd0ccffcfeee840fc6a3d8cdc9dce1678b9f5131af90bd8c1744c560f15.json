{"ast":null,"code":"import apiClient from \"@/services/ApiService\";\nexport default {\n  props: {\n    userId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isFollowing: null,\n      // Indica si el usuario ya está siguiendo al otro usuario\n      followerCount: 0 // Cantidad de seguidores del usuario\n    };\n  },\n  async created() {\n    try {\n      await this.fetchFollowerCount(); // Obtén la cantidad de seguidores\n      await this.checkIfFollowing(); // Verifica si el usuario actual ya está siguiendo al otro usuario\n    } catch (error) {\n      console.error(\"Error durante la inicialización:\", error);\n    }\n  },\n  methods: {\n    // Obtiene el contador de seguidores\n    async fetchFollowerCount() {\n      try {\n        const response = await apiClient.get(`/follow/${this.userId}/followers/count`);\n        this.followerCount = response.data.followerCount;\n      } catch (error) {\n        console.error(\"Error al obtener la cantidad de seguidores:\", error);\n      }\n    },\n    // Cambia el estado de seguir/no seguir\n    async toggleFollow() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        if (this.isFollowing) {\n          // Dejar de seguir\n          await apiClient.delete(`/follow/unfollow`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: {\n              followed_id: this.userId\n            }\n          });\n          this.followerCount--;\n          this.isFollowing = false;\n        } else {\n          // Seguir\n          await apiClient.post(`/follow/follow`, {\n            followed_id: this.userId\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.followerCount++;\n          this.isFollowing = true;\n        }\n      } catch (error) {\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\n      }\n    },\n    // Verifica si el usuario ya está siguiendo\n    async checkIfFollowing() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        const response = await apiClient.get(`/follow/${this.userId}/followers/check`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.isFollowing = response.data.isFollowing;\n      } catch (error) {\n        console.error(\"Error al verificar el estado de seguimiento:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","userId","type","String","required","data","isFollowing","followerCount","created","fetchFollowerCount","checkIfFollowing","error","console","methods","response","get","toggleFollow","token","localStorage","getItem","delete","headers","Authorization","followed_id","post"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\follow_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"follow-container\" v-if=\"isFollowing !== null\">\r\n    <button @click=\"toggleFollow\" :class=\"{ following: isFollowing }\">\r\n      <span>{{ isFollowing ? \"Siguiendo\" : \"Seguir\" }}</span>\r\n    </button>\r\n    <span>{{ followerCount }} seguidores</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\n\r\nexport default {\r\n  props: {\r\n    userId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isFollowing: null, // Indica si el usuario ya está siguiendo al otro usuario\r\n      followerCount: 0, // Cantidad de seguidores del usuario\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      await this.fetchFollowerCount(); // Obtén la cantidad de seguidores\r\n      await this.checkIfFollowing(); // Verifica si el usuario actual ya está siguiendo al otro usuario\r\n    } catch (error) {\r\n      console.error(\"Error durante la inicialización:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    // Obtiene el contador de seguidores\r\n    async fetchFollowerCount() {\r\n      try {\r\n        const response = await apiClient.get(`/follow/${this.userId}/followers/count`);\r\n        this.followerCount = response.data.followerCount;\r\n      } catch (error) {\r\n        console.error(\"Error al obtener la cantidad de seguidores:\", error);\r\n      }\r\n    },\r\n    // Cambia el estado de seguir/no seguir\r\n    async toggleFollow() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        if (this.isFollowing) {\r\n          // Dejar de seguir\r\n          await apiClient.delete(`/follow/unfollow`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            data: { followed_id: this.userId },\r\n          });\r\n          this.followerCount--;\r\n          this.isFollowing = false;\r\n        } else {\r\n          // Seguir\r\n          await apiClient.post(\r\n            `/follow/follow`,\r\n            { followed_id: this.userId },\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          this.followerCount++;\r\n          this.isFollowing = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\r\n      }\r\n    },\r\n    // Verifica si el usuario ya está siguiendo\r\n    async checkIfFollowing() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await apiClient.get(`/follow/${this.userId}/followers/check`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.isFollowing = response.data.isFollowing;\r\n      } catch (error) {\r\n        console.error(\"Error al verificar el estado de seguimiento:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.follow-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\nbutton {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  color: #007bff; /* Azul predeterminado */\r\n}\r\n\r\nbutton.following {\r\n  color: green; /* Cambia el color si ya está siguiendo */\r\n}\r\n\r\nspan {\r\n  margin-left: 0.5em;\r\n}\r\n</style>\r\n"],"mappings":"AAUA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MAAE;MACnBC,aAAa,EAAE,CAAC,CAAE;IACpB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAM,IAAI,CAACC,kBAAkB,CAAC,CAAC,EAAE;MACjC,MAAM,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAE;IACjC,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EACDE,OAAO,EAAE;IACP;IACA,MAAMJ,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMf,SAAS,CAACgB,GAAG,CAAC,WAAW,IAAI,CAACd,MAAM,kBAAkB,CAAC;QAC9E,IAAI,CAACM,aAAY,GAAIO,QAAQ,CAACT,IAAI,CAACE,aAAa;MAClD,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACrE;IACF,CAAC;IACD;IACA,MAAMK,YAAYA,CAAA,EAAG;MACnB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAI,CAACF,KAAK,EAAE;QACVL,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;QACrD;MACF;MAEA,IAAI;QACF,IAAI,IAAI,CAACL,WAAW,EAAE;UACpB;UACA,MAAMP,SAAS,CAACqB,MAAM,CAAC,kBAAkB,EAAE;YACzCC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUL,KAAK;YAAG,CAAC;YAC7CZ,IAAI,EAAE;cAAEkB,WAAW,EAAE,IAAI,CAACtB;YAAO;UACnC,CAAC,CAAC;UACF,IAAI,CAACM,aAAa,EAAE;UACpB,IAAI,CAACD,WAAU,GAAI,KAAK;QAC1B,OAAO;UACL;UACA,MAAMP,SAAS,CAACyB,IAAI,CAClB,gBAAgB,EAChB;YAAED,WAAW,EAAE,IAAI,CAACtB;UAAO,CAAC,EAC5B;YAAEoB,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUL,KAAK;YAAG;UAAE,CAClD,CAAC;UACD,IAAI,CAACV,aAAa,EAAE;UACpB,IAAI,CAACD,WAAU,GAAI,IAAI;QACzB;MACF,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IACD;IACA,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,MAAMO,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAI,CAACF,KAAK,EAAE;QACVL,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;QACrD;MACF;MAEA,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMf,SAAS,CAACgB,GAAG,CAAC,WAAW,IAAI,CAACd,MAAM,kBAAkB,EAAE;UAC7EoB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUL,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,IAAI,CAACX,WAAU,GAAIQ,QAAQ,CAACT,IAAI,CAACC,WAAW;MAC9C,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}