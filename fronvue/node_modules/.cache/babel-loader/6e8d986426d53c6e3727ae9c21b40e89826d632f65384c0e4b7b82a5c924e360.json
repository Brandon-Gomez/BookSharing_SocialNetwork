{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nimport eventBus from '@/eventBus';\nexport default {\n  data() {\n    return {\n      users: [],\n      page: 1,\n      limit: 20,\n      totalPages: 0\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const token = localStorage.getItem('authToken');\n        console.log('Token:', token); // Verifica si el token se obtiene correctamente\n        if (token) {\n          const res = await apiClient.get(`/users/paginated?page=${this.page}&limit=${this.limit}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.users = res.data.users;\n          this.totalPages = res.data.totalPages;\n        }\n      } catch (error) {\n        console.error('Error al obtener los usuarios:', error);\n      }\n    },\n    nextPage() {\n      if (this.page < this.totalPages) {\n        this.page++;\n        this.fetchUsers();\n      }\n    },\n    prevPage() {\n      if (this.page > 1) {\n        this.page--;\n        this.fetchUsers();\n      }\n    },\n    createUser() {\n      this.$router.push('/admin/user-create'); // Redirige a la vista de creación de usuario\n    },\n    editUser(userId) {\n      this.$router.push(`/admin/user-edit/${userId}`); // Redirige a la vista de edición de usuario\n    },\n    async deleteUser(userId) {\n      const token = localStorage.getItem('authToken');\n      if (token && confirm('¿Estás seguro de que deseas eliminar este usuario?')) {\n        await apiClient.delete(`/posts/user/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        await apiClient.delete(`/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.fetchUsers(); // Recarga la lista\n        eventBus.emit('alert', {\n          message: \"Usuario eliminado correctamente\",\n          type: \"success\"\n        });\n      }\n    }\n  },\n  mounted() {\n    this.fetchUsers(); // Carga los usuarios al montar el componente\n  }\n};","map":{"version":3,"names":["apiClient","eventBus","data","users","page","limit","totalPages","methods","fetchUsers","token","localStorage","getItem","console","log","res","get","headers","Authorization","error","nextPage","prevPage","createUser","$router","push","editUser","userId","deleteUser","confirm","delete","emit","message","type","mounted"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\admin\\users-list_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n      <h2>Lista de Usuarios</h2>\r\n      <button class=\"btn btn-success\" @click=\"createUser\">Crear Usuario</button>\r\n    </div>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <th>Correo</th>\r\n          <th>Usuario</th>\r\n          <th>Rol</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(user) in users\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.is_admin ? 'Administrador' : 'Usuario' }}</td>\r\n          <td>\r\n            <button class=\"btn btn-warning btn-sm mr-3\" @click=\"editUser(user.id)\">Editar</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteUser(user.id)\">Eliminar</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <!-- Paginador -->\r\n    <div class=\"d-flex justify-content-center my-4\">\r\n      <button class=\"btn btn-secondary mx-1\" :disabled=\"page === 1\" @click=\"prevPage\">Anterior</button>\r\n      <span class=\"mx-2 align-self-center\">Página {{ page }} de {{ totalPages }}</span>\r\n      <button class=\"btn btn-secondary mx-1\" :disabled=\"page === totalPages\" @click=\"nextPage\">Siguiente</button>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\nimport eventBus from '@/eventBus';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [],\r\n      page: 1,\r\n      limit: 20,\r\n      totalPages: 0\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        console.log('Token:', token); // Verifica si el token se obtiene correctamente\r\n        if (token) {\r\n          const res = await apiClient.get(`/users/paginated?page=${this.page}&limit=${this.limit}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          this.users = res.data.users;\r\n          this.totalPages = res.data.totalPages;\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error al obtener los usuarios:', error);\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.page < this.totalPages) {\r\n        this.page++;\r\n        this.fetchUsers();\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.page > 1) {\r\n        this.page--;\r\n        this.fetchUsers();\r\n      }\r\n    },\r\n    createUser() {\r\n      this.$router.push('/admin/user-create'); // Redirige a la vista de creación de usuario\r\n    },\r\n    editUser(userId) {\r\n      this.$router.push(`/admin/user-edit/${userId}`); // Redirige a la vista de edición de usuario\r\n    },\r\n    async deleteUser(userId) {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token && confirm('¿Estás seguro de que deseas eliminar este usuario?')) {\r\n\r\n        await apiClient.delete(`/posts/user/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        await apiClient.delete(`/users/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        this.fetchUsers(); // Recarga la lista\r\n        eventBus.emit('alert', { message: \"Usuario eliminado correctamente\", type: \"success\" });\r\n      }\r\n\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchUsers(); // Carga los usuarios al montar el componente\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":";AA0CA,OAAOA,SAAQ,MAAO,uBAAuB;AAC7C,OAAOC,QAAO,MAAO,YAAY;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/CC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC,EAAE;QAC9B,IAAIA,KAAK,EAAE;UACT,MAAMK,GAAE,GAAI,MAAMd,SAAS,CAACe,GAAG,CAAC,yBAAyB,IAAI,CAACX,IAAI,UAAU,IAAI,CAACC,KAAK,EAAE,EAAE;YACxFW,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUR,KAAK;YAAG;UAC9C,CAAC,CAAC;UACF,IAAI,CAACN,KAAI,GAAIW,GAAG,CAACZ,IAAI,CAACC,KAAK;UAC3B,IAAI,CAACG,UAAS,GAAIQ,GAAG,CAACZ,IAAI,CAACI,UAAU;QACvC;MAEF,EAAE,OAAOY,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACf,IAAG,GAAI,IAAI,CAACE,UAAU,EAAE;QAC/B,IAAI,CAACF,IAAI,EAAE;QACX,IAAI,CAACI,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDY,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAChB,IAAG,GAAI,CAAC,EAAE;QACjB,IAAI,CAACA,IAAI,EAAE;QACX,IAAI,CAACI,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDa,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC,EAAE;IAC3C,CAAC;IACDC,QAAQA,CAACC,MAAM,EAAE;MACf,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,oBAAoBE,MAAM,EAAE,CAAC,EAAE;IACnD,CAAC;IACD,MAAMC,UAAUA,CAACD,MAAM,EAAE;MACvB,MAAMhB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAI,IAAKkB,OAAO,CAAC,oDAAoD,CAAC,EAAE;QAE1E,MAAM3B,SAAS,CAAC4B,MAAM,CAAC,eAAeH,MAAM,EAAE,EAAE;UAC9CT,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,MAAMT,SAAS,CAAC4B,MAAM,CAAC,UAAUH,MAAM,EAAE,EAAE;UACzCT,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAI,CAACD,UAAU,CAAC,CAAC,EAAE;QACnBP,QAAQ,CAAC4B,IAAI,CAAC,OAAO,EAAE;UAAEC,OAAO,EAAE,iCAAiC;UAAEC,IAAI,EAAE;QAAU,CAAC,CAAC;MACzF;IAEF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACxB,UAAU,CAAC,CAAC,EAAE;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}