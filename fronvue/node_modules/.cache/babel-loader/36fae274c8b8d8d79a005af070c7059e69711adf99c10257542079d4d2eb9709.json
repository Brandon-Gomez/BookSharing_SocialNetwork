{"ast":null,"code":"import apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: {\n        name: '',\n        description: '',\n        profilePicture: '',\n        blog: '',\n        location: ''\n      },\n      username: this.$route.params.username,\n      currentUser: null,\n      publications: 0,\n      followers: 843,\n      following: 1176\n    };\n  },\n  computed: {\n    isCurrentUser() {\n      return this.currentUser && this.currentUser.username === this.username;\n    }\n  },\n  async mounted() {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      try {\n        const response = await apiClient.get(`/profile/${this.username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.profileData = response.data.user; // Ensure correct property access\n      } catch (error) {\n        console.error(\"Error fetching profile:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","name","description","profilePicture","blog","location","username","$route","params","currentUser","publications","followers","following","computed","isCurrentUser","mounted","token","localStorage","getItem","response","get","headers","Authorization","user","error","console"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\profile_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"profile-header\">\r\n      <img\r\n        :src=\"profileData.profilePicture || 'https://via.placeholder.com/150'\"\r\n        alt=\"Profile Picture\"\r\n        class=\"profile-image\"\r\n      />\r\n      <div class=\"profile-info\">\r\n        <h1>{{ profileData.name }}</h1>\r\n        <p class=\"username\"><strong>{{ username || 'No disponible' }}</strong></p>\r\n        <div class=\"profile-stats\">\r\n          <span>\r\n            {{ publications }} <span class=\"stat-label\">publicaciones</span>\r\n          </span>\r\n          <span>\r\n            {{ followers }} <span class=\"stat-label\">seguidores</span>\r\n          </span>\r\n          <span>\r\n            {{ following }} <span class=\"stat-label\">seguidos</span>\r\n          </span>\r\n        </div>\r\n        <p v-if=\"profileData.description\">{{ profileData.description }}</p>\r\n        <router-link\r\n          v-if=\"isCurrentUser\"\r\n          :to=\"`/profile/${username}/edit-account`\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          Editar perfil\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n    <div class=\"profile-bio\">\r\n      <p>\r\n        Blog personal: <span>{{ profileData.blog || 'No disponible' }}</span>\r\n      </p>\r\n      <p><span class=\"location\">{{ profileData.location || 'No disponible' }}</span></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        description: '',\r\n        profilePicture: '',\r\n        blog: '',\r\n        location: '',\r\n      },\r\n      username: this.$route.params.username,\r\n      currentUser: null,\r\n      publications: 0,\r\n      followers: 843,\r\n      following: 1176,\r\n    };\r\n  },\r\n  computed: {\r\n    isCurrentUser() {\r\n      return (\r\n        this.currentUser && this.currentUser.username === this.username\r\n      );\r\n    },\r\n  },\r\n  async mounted() {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      try {\r\n        const response = await apiClient.get(`/profile/${this.username}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        this.profileData = response.data.user; // Ensure correct property access\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile:\", error);\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-image {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n  object-fit: cover; /* Ensure image fills container */\r\n}\r\n\r\n.profile-info {\r\n  flex-grow: 1;\r\n  text-align: left; /* Align text to the left */\r\n}\r\n\r\n.username {\r\n  margin-top: 5px;\r\n  font-weight: lighter; /* Subtler username style */\r\n  color: #999;\r\n}\r\n\r\n.profile-stats {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n}\r\n\r\n.profile-stats span {\r\n  font-weight: bold;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 0.\r\n}\r\n\r\n</style>"],"mappings":"AA0CA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,cAAc,EAAE,EAAE;QAClBC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ,CAAC;MACDC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAQ;MACrCG,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,GAAG;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OACE,IAAI,CAACL,WAAU,IAAK,IAAI,CAACA,WAAW,CAACH,QAAO,KAAM,IAAI,CAACA,QAAO;IAElE;EACF,CAAC;EACD,MAAMS,OAAOA,CAAA,EAAG;IACd,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMrB,SAAS,CAACsB,GAAG,CAAC,YAAY,IAAI,CAACd,QAAQ,EAAE,EAAE;UAChEe,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAAChB,WAAU,GAAImB,QAAQ,CAACpB,IAAI,CAACwB,IAAI,EAAE;MACzC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}