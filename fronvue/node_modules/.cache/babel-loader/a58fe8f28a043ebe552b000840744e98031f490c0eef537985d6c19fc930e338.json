{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService'; // Asegúrate de importar correctamente tu apiClient\n\nexport default {\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    // Verificar la existencia del token\n    checkToken() {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        console.error('No se encontró el token. Redirigiendo a login.');\n        this.$router.push('/login');\n        return false;\n      }\n      return true;\n    },\n    // Método para redirigir a la vista del perfil, verificando el token\n    async goRedirect() {\n      if (this.checkToken()) {\n        // Verificar el token antes de proceder\n        try {\n          const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\n            }\n          });\n          console.log('Perfil obtenido:', response.data);\n        } catch (error) {\n          console.error('Error al obtener el perfil:', error);\n        }\n      }\n    },\n    // Redirigir a una ruta específica, siempre verificando el token\n    goTo(route) {\n      if (this.checkToken()) {\n        // Verificar el token antes de proceder\n        this.$router.push(route);\n      }\n    },\n    // Redirigir al perfil del usuario (usando el username desde localStorage), verificando el token\n    goToProfile() {\n      if (this.checkToken()) {\n        // Verificar el token antes de proceder\n        const username = localStorage.getItem('username');\n        if (username) {\n          this.$router.push(`/profile/${username}`);\n        } else {\n          console.error('No se encontró el nombre de usuario en localStorage');\n        }\n      }\n    },\n    // Emitir evento para búsqueda (puedes agregar lógica extra si quieres verificar el token aquí también)\n    triggerSearch() {\n      if (this.checkToken()) {\n        // Verificar el token antes de proceder\n        this.$emit('search');\n      }\n    },\n    // Cerrar sesión (limpiar localStorage y redirigir a login)\n    logout() {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('username');\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","email","password","methods","checkToken","token","localStorage","getItem","console","error","$router","push","goRedirect","response","get","$route","params","username","headers","Authorization","log","goTo","route","goToProfile","triggerSearch","$emit","logout","removeItem"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\navbar_component.vue"],"sourcesContent":["<template>\r\n    <nav class=\"navbar\">\r\n      <ul>\r\n        <!-- Home icon -->\r\n        <li @click=\"goTo('/')\">\r\n          <i class=\"fas fa-home\"></i>\r\n          <span>Inicio</span>\r\n        </li>\r\n        <!-- Profile icon (utiliza el username desde localStorage) -->\r\n        <li @click=\"goToProfile\">\r\n          <i class=\"fas fa-user\"></i>\r\n          <span>Perfil</span>\r\n        </li>\r\n        <!-- Search icon -->\r\n        <li @click=\"triggerSearch\">\r\n          <i class=\"fas fa-search\"></i>\r\n          <span>Buscar</span>\r\n        </li>\r\n        <!-- Logout icon -->\r\n        <li @click=\"logout\">\r\n          <i class=\"fas fa-sign-out-alt\"></i>\r\n          <span>Cerrar sesión</span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from '@/services/ApiService';  // Asegúrate de importar correctamente tu apiClient\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: '',\r\n        password: ''\r\n      };\r\n    },\r\n    methods: {\r\n      // Verificar la existencia del token\r\n      checkToken() {\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n          console.error('No se encontró el token. Redirigiendo a login.');\r\n          this.$router.push('/login');\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n\r\n      // Método para redirigir a la vista del perfil, verificando el token\r\n      async goRedirect() {\r\n        if (this.checkToken()) {  // Verificar el token antes de proceder\r\n          try {\r\n            const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n              }\r\n            });\r\n            console.log('Perfil obtenido:', response.data);\r\n          } catch (error) {\r\n            console.error('Error al obtener el perfil:', error);\r\n          }\r\n        }\r\n      },\r\n\r\n      // Redirigir a una ruta específica, siempre verificando el token\r\n      goTo(route) {\r\n        if (this.checkToken()) {  // Verificar el token antes de proceder\r\n          this.$router.push(route);\r\n        }\r\n      },\r\n\r\n      // Redirigir al perfil del usuario (usando el username desde localStorage), verificando el token\r\n      goToProfile() {\r\n        if (this.checkToken()) {  // Verificar el token antes de proceder\r\n          const username = localStorage.getItem('username');\r\n          if (username) {\r\n            this.$router.push(`/profile/${username}`);\r\n          } else {\r\n            console.error('No se encontró el nombre de usuario en localStorage');\r\n          }\r\n        }\r\n      },\r\n\r\n      // Emitir evento para búsqueda (puedes agregar lógica extra si quieres verificar el token aquí también)\r\n      triggerSearch() {\r\n        if (this.checkToken()) {  // Verificar el token antes de proceder\r\n          this.$emit('search');\r\n        }\r\n      },\r\n\r\n      // Cerrar sesión (limpiar localStorage y redirigir a login)\r\n      logout() {\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('username');\r\n        this.$router.push('/login');\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n  <style scoped>\r\n  .navbar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #2c3e50;\r\n    padding: 20px;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .navbar ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .navbar li {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 20px 0;\r\n    cursor: pointer;\r\n    color: #ecf0f1;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .navbar li i {\r\n    margin-right: 10px;\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .navbar li:hover {\r\n    color: #3498db;\r\n  }\r\n  \r\n  .navbar li span {\r\n    font-size: 18px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA4BE,OAAOA,SAAQ,MAAO,uBAAuB,EAAG;;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,UAAUA,CAAA,EAAG;MACX,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAI,CAACF,KAAK,EAAE;QACVG,OAAO,CAACC,KAAK,CAAC,gDAAgD,CAAC;QAC/D,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC;IAED;IACA,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACR,UAAU,CAAC,CAAC,EAAE;QAAG;QACxB,IAAI;UACF,MAAMS,QAAO,GAAI,MAAMd,SAAS,CAACe,GAAG,CAAC,YAAY,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE,EAAE;YAC9EC,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUb,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;YAC5D;UACF,CAAC,CAAC;UACFC,OAAO,CAACY,GAAG,CAAC,kBAAkB,EAAEP,QAAQ,CAACb,IAAI,CAAC;QAChD,EAAE,OAAOS,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF;IACF,CAAC;IAED;IACAY,IAAIA,CAACC,KAAK,EAAE;MACV,IAAI,IAAI,CAAClB,UAAU,CAAC,CAAC,EAAE;QAAG;QACxB,IAAI,CAACM,OAAO,CAACC,IAAI,CAACW,KAAK,CAAC;MAC1B;IACF,CAAC;IAED;IACAC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACnB,UAAU,CAAC,CAAC,EAAE;QAAG;QACxB,MAAMa,QAAO,GAAIX,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACjD,IAAIU,QAAQ,EAAE;UACZ,IAAI,CAACP,OAAO,CAACC,IAAI,CAAC,YAAYM,QAAQ,EAAE,CAAC;QAC3C,OAAO;UACLT,OAAO,CAACC,KAAK,CAAC,qDAAqD,CAAC;QACtE;MACF;IACF,CAAC;IAED;IACAe,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACpB,UAAU,CAAC,CAAC,EAAE;QAAG;QACxB,IAAI,CAACqB,KAAK,CAAC,QAAQ,CAAC;MACtB;IACF,CAAC;IAED;IACAC,MAAMA,CAAA,EAAG;MACPpB,YAAY,CAACqB,UAAU,CAAC,WAAW,CAAC;MACpCrB,YAAY,CAACqB,UAAU,CAAC,UAAU,CAAC;MACnC,IAAI,CAACjB,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}