{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [!$data.isFollowing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.followUser && $options.followUser(...args))\n  }, \" Seguir \")) : _createCommentVNode(\"v-if\", true), $data.isFollowing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"btn btn-secondary\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.unfollowUser && $options.unfollowUser(...args))\n  }, \" Dejar de seguir \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","$data","isFollowing","key","class","onClick","_cache","args","$options","followUser","_createCommentVNode","unfollowUser"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\follow_component.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button\r\n      v-if=\"!isFollowing\"\r\n      class=\"btn btn-primary\"\r\n      @click=\"followUser\"\r\n    >\r\n      Seguir\r\n    </button>\r\n    <button\r\n      v-if=\"isFollowing\"\r\n      class=\"btn btn-secondary\"\r\n      @click=\"unfollowUser\"\r\n    >\r\n      Dejar de seguir\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";  // Asegúrate de que ApiService esté configurado correctamente\r\n\r\nexport default {\r\n  props: {\r\n    userId: {   // Asegúrate de que este prop se pasa desde el componente padre\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isFollowing: false,  // Establecer si ya estás siguiendo al usuario\r\n    };\r\n  },\r\n  mounted() {\r\n    this.checkIfFollowing();\r\n  },\r\n  methods: {\r\n    async followUser() {\r\n      const token = localStorage.getItem(\"authToken\");  // Recupera el token de autenticación\r\n      try {\r\n        const response = await apiClient.post(\r\n          `/follow/`,  // Ruta de seguimiento en el backend\r\n          { followed_id: this.userId },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        if (response.status === 201) {\r\n          this.isFollowing = true;\r\n          this.$emit(\"update-followers\");  // Emitir un evento para actualizar la vista de seguidores\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al seguir al usuario:\", error);\r\n      }\r\n    },\r\n    async unfollowUser() {\r\n      const token = localStorage.getItem(\"authToken\");  // Recupera el token de autenticación\r\n      try {\r\n        const response = await apiClient.delete(\r\n          `/unfollow`,  // Ruta de dejar de seguir en el backend\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            data: { followed_id: this.userId },\r\n          }\r\n        );\r\n        if (response.status === 200) {\r\n          this.isFollowing = false;\r\n          this.$emit(\"update-followers\");  // Emitir un evento para actualizar la vista de seguidores\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al dejar de seguir al usuario:\", error);\r\n      }\r\n    },\r\n    async checkIfFollowing() {\r\n      const token = localStorage.getItem(\"authToken\");  // Recupera el token de autenticación\r\n      try {\r\n        const response = await apiClient.get(\r\n          `/follow/${this.userId}/is-following`,  // Ruta que deberías implementar en tu backend\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        this.isFollowing = response.data.isFollowing;  // Si está siguiendo, actualiza el estado\r\n      } catch (error) {\r\n        console.error(\"Error al comprobar el estado de seguimiento:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.btn {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAeM,c,CAbKC,KAAA,CAAAC,WAAW,I,cADpBF,mBAAA,CAMS;IARbG,GAAA;IAIMC,KAAK,EAAC,iBAAiB;IACtBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KACnB,UAED,KARJG,mBAAA,gBAUYT,KAAA,CAAAC,WAAW,I,cADnBF,mBAAA,CAMS;IAfbG,GAAA;IAWMC,KAAK,EAAC,mBAAmB;IACxBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,YAAA,IAAAH,QAAA,CAAAG,YAAA,IAAAJ,IAAA,CAAY;KACrB,mBAED,KAfJG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}