{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  name: 'NavComponent',\n  data() {\n    return {\n      profileData: {}\n    };\n  },\n  methods: {\n    async fetchUserProfile() {\n      const token = localStorage.getItem('authToken');\n      const username = localStorage.getItem('username'); // Recuperar username desde localStorage\n\n      // Solo ejecutar la solicitud si el token está presente\n      if (token && username) {\n        try {\n          const response = await apiClient.get(`/profile/${username}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          // Verificar la respuesta de la API\n          console.log(\"Datos de respuesta PROFILE:\", response.data);\n          this.profileData = response.data.user;\n          console.log('Perfil del usuario autenticado:', this.profileData);\n        } catch (error) {\n          console.error('Error al obtener el perfil del usuario:', error);\n        }\n      }\n    },\n    logout() {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('username'); // Asegúrate de limpiar el username al cerrar sesión\n      this.$router.push('/login');\n    }\n  },\n  mounted() {\n    // Solo fetch el perfil si el usuario está autenticado\n    this.fetchUserProfile();\n  }\n};","map":{"version":3,"names":["apiClient","name","data","profileData","methods","fetchUserProfile","token","localStorage","getItem","username","response","get","headers","Authorization","console","log","user","error","logout","removeItem","$router","push","mounted"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\navbar_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <ul>\r\n      <li>\r\n        <router-link to=\"/\">Inicio</router-link>\r\n        <i class=\"fa fa-home\"></i>\r\n      </li>\r\n      <li>\r\n        <router-link :to=\"`/profile/${profileData.username}`\" v-if=\"profileData.username\">Perfil</router-link>\r\n        <i class=\"fa fa-user\"></i>\r\n      </li>\r\n      <li>\r\n        <router-link to=\"/search\">Buscar</router-link>\r\n        <i class=\"fa fa-search\"></i>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\" @click.prevent=\"logout\">Cerrar sesión</a>\r\n        <i class=\"fa fa-sign-out\"></i>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  name: 'NavComponent',\r\n  data() {\r\n    return {\r\n      profileData: {},\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUserProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      const username = localStorage.getItem('username'); // Recuperar username desde localStorage\r\n      \r\n      // Solo ejecutar la solicitud si el token está presente\r\n      if (token && username) {\r\n        try {\r\n          const response = await apiClient.get(`/profile/${username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          // Verificar la respuesta de la API\r\n          console.log(\"Datos de respuesta PROFILE:\", response.data);\r\n          this.profileData = response.data.user;\r\n          console.log('Perfil del usuario autenticado:', this.profileData);\r\n        } catch (error) {\r\n          console.error('Error al obtener el perfil del usuario:', error);\r\n        }\r\n      }\r\n    },\r\n    logout() {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('username'); // Asegúrate de limpiar el username al cerrar sesión\r\n      this.$router.push('/login');\r\n    },\r\n  },\r\n  mounted() {\r\n    // Solo fetch el perfil si el usuario está autenticado\r\n    this.fetchUserProfile(); \r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.sidebar {\r\n  width: 200px;\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  position: fixed;\r\n  height: 100%;\r\n}\r\n\r\n.sidebar ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar li:hover {\r\n  background-color: #e9ecef;\r\n}\r\n</style>\r\n"],"mappings":";AAwBA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAO,GAAIF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;;MAEnD;MACA,IAAIF,KAAI,IAAKG,QAAQ,EAAE;QACrB,IAAI;UACF,MAAMC,QAAO,GAAI,MAAMV,SAAS,CAACW,GAAG,CAAC,YAAYF,QAAQ,EAAE,EAAE;YAC3DG,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUP,KAAK;YAChC;UACF,CAAC,CAAC;UACF;UACAQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEL,QAAQ,CAACR,IAAI,CAAC;UACzD,IAAI,CAACC,WAAU,GAAIO,QAAQ,CAACR,IAAI,CAACc,IAAI;UACrCF,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAACZ,WAAW,CAAC;QAClE,EAAE,OAAOc,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QACjE;MACF;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACPX,YAAY,CAACY,UAAU,CAAC,WAAW,CAAC;MACpCZ,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC,EAAE;MACrC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACjB,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}