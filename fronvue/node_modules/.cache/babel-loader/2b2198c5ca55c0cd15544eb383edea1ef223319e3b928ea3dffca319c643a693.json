{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '../services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: this.getProfileData(),\n      defaultPicture: 'favicon.png' // Ruta a una imagen por defecto\n    };\n  },\n  methods: {\n    // Método para obtener los datos del perfil del usuario desde el localStorage\n    getProfileData() {\n      const profile = localStorage.getItem('profileData');\n      return profile ? JSON.parse(profile) : {\n        name: '',\n        username: '',\n        profile_picture: this.defaultPicture // Imagen por defecto si no hay foto\n      };\n    },\n    // Actualiza los datos del perfil al detectar cambios\n    updateProfileData() {\n      this.profileData = this.getProfileData();\n    },\n    // Redirige al usuario a la página de inicio\n    navigateToHome() {\n      this.$router.push('/');\n    },\n    // Navega al perfil del usuario si está autenticado\n    navigateToProfile() {\n      const isAuthenticated = this.checkAuthentication();\n      if (isAuthenticated && this.profileData.username) {\n        this.$router.push(`/profile/${this.profileData.username}`);\n      } else {\n        alert('Por favor, inicia sesión primero.');\n      }\n    },\n    // Redirige a la página de búsqueda\n    navigateToSearch() {\n      this.$router.push('/search');\n    },\n    // Lógica de cierre de sesión\n    async logout() {\n      try {\n        // Enviar solicitud de POST para cerrar sesión en el backend\n        await apiClient.post('/logout', {}, {\n          withCredentials: true // Si estás usando cookies\n        });\n\n        // Eliminar el token de autenticación y los datos del perfil del localStorage\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('profileData');\n\n        // Redirigir al usuario a la página de inicio de sesión\n        this.$router.push('/login');\n      } catch (error) {\n        console.error('Error al cerrar sesión:', error);\n      }\n    },\n    // Verifica si el token de autenticación existe en el localStorage\n    checkAuthentication() {\n      return !!localStorage.getItem('authToken');\n    }\n  },\n  // Al montar el componente, registra un listener para actualizar los datos\n  mounted() {\n    window.addEventListener('storage', this.updateProfileData);\n    this.updateProfileData(); // Actualiza los datos al montar el componente\n  },\n  // Limpia los listeners cuando el componente se desmonta\n  beforeUnmount() {\n    window.removeEventListener('storage', this.updateProfileData);\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","getProfileData","defaultPicture","methods","profile","localStorage","getItem","JSON","parse","name","username","profile_picture","updateProfileData","navigateToHome","$router","push","navigateToProfile","isAuthenticated","checkAuthentication","alert","navigateToSearch","logout","post","withCredentials","removeItem","error","console","mounted","window","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\navbar_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <ul>\r\n      <li @click=\"navigateToHome\">\r\n        <i class=\"fa fa-home\"></i> Inicio\r\n      </li>\r\n      <li @click=\"navigateToProfile\">\r\n        <i class=\"fa fa-user\"></i> Perfil\r\n      </li>\r\n      <li @click=\"navigateToSearch\">\r\n        <i class=\"fa fa-search\"></i> Buscar\r\n      </li>\r\n      <li @click=\"logout\">\r\n        <i class=\"fa fa-sign-out\"></i> Cerrar sesión\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '../services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: this.getProfileData(),\r\n      defaultPicture: 'favicon.png', // Ruta a una imagen por defecto\r\n    };\r\n  },\r\n  methods: {\r\n    // Método para obtener los datos del perfil del usuario desde el localStorage\r\n    getProfileData() {\r\n      const profile = localStorage.getItem('profileData');\r\n      return profile ? JSON.parse(profile) : {\r\n        name: '',\r\n        username: '',\r\n        profile_picture: this.defaultPicture, // Imagen por defecto si no hay foto\r\n      };\r\n    },\r\n\r\n    // Actualiza los datos del perfil al detectar cambios\r\n    updateProfileData() {\r\n      this.profileData = this.getProfileData();\r\n    },\r\n\r\n    // Redirige al usuario a la página de inicio\r\n    navigateToHome() {\r\n      this.$router.push('/');\r\n    },\r\n\r\n    // Navega al perfil del usuario si está autenticado\r\n    navigateToProfile() {\r\n      const isAuthenticated = this.checkAuthentication();\r\n      if (isAuthenticated && this.profileData.username) {\r\n        this.$router.push(`/profile/${this.profileData.username}`);\r\n      } else {\r\n        alert('Por favor, inicia sesión primero.');\r\n      }\r\n    },\r\n\r\n    // Redirige a la página de búsqueda\r\n    navigateToSearch() {\r\n      this.$router.push('/search');\r\n    },\r\n\r\n    // Lógica de cierre de sesión\r\n    async logout() {\r\n      try {\r\n        // Enviar solicitud de POST para cerrar sesión en el backend\r\n        await apiClient.post('/logout', {}, {\r\n          withCredentials: true, // Si estás usando cookies\r\n        });\r\n\r\n        // Eliminar el token de autenticación y los datos del perfil del localStorage\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('profileData');\r\n\r\n        // Redirigir al usuario a la página de inicio de sesión\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error('Error al cerrar sesión:', error);\r\n      }\r\n    },\r\n\r\n    // Verifica si el token de autenticación existe en el localStorage\r\n    checkAuthentication() {\r\n      return !!localStorage.getItem('authToken');\r\n    },\r\n  },\r\n  // Al montar el componente, registra un listener para actualizar los datos\r\n  mounted() {\r\n    window.addEventListener('storage', this.updateProfileData);\r\n    this.updateProfileData(); // Actualiza los datos al montar el componente\r\n  },\r\n  // Limpia los listeners cuando el componente se desmonta\r\n  beforeUnmount() {\r\n    window.removeEventListener('storage', this.updateProfileData);\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sidebar {\r\n  width: 200px;\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  position: fixed;\r\n  height: 100%;\r\n}\r\n\r\n.sidebar ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar li:hover {\r\n  background-color: #e9ecef;\r\n}\r\n</style>\r\n"],"mappings":";AAoBA,OAAOA,SAAQ,MAAO,wBAAwB;AAE9C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI,CAACC,cAAc,CAAC,CAAC;MAClCC,cAAc,EAAE,aAAa,CAAE;IACjC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAF,cAAcA,CAAA,EAAG;MACf,MAAMG,OAAM,GAAIC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACnD,OAAOF,OAAM,GAAIG,IAAI,CAACC,KAAK,CAACJ,OAAO,IAAI;QACrCK,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE,IAAI,CAACT,cAAc,CAAE;MACxC,CAAC;IACH,CAAC;IAED;IACAU,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACZ,WAAU,GAAI,IAAI,CAACC,cAAc,CAAC,CAAC;IAC1C,CAAC;IAED;IACAY,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IAED;IACAC,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,eAAc,GAAI,IAAI,CAACC,mBAAmB,CAAC,CAAC;MAClD,IAAID,eAAc,IAAK,IAAI,CAACjB,WAAW,CAACU,QAAQ,EAAE;QAChD,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,YAAY,IAAI,CAACf,WAAW,CAACU,QAAQ,EAAE,CAAC;MAC5D,OAAO;QACLS,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC;IAED;IACAC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAC9B,CAAC;IAED;IACA,MAAMM,MAAMA,CAAA,EAAG;MACb,IAAI;QACF;QACA,MAAMvB,SAAS,CAACwB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE;UAClCC,eAAe,EAAE,IAAI,CAAE;QACzB,CAAC,CAAC;;QAEF;QACAlB,YAAY,CAACmB,UAAU,CAAC,WAAW,CAAC;QACpCnB,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC;;QAEtC;QACA,IAAI,CAACV,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED;IACAP,mBAAmBA,CAAA,EAAG;MACpB,OAAO,CAAC,CAACb,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC5C;EACF,CAAC;EACD;EACAqB,OAAOA,CAAA,EAAG;IACRC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACjB,iBAAiB,CAAC;IAC1D,IAAI,CAACA,iBAAiB,CAAC,CAAC,EAAE;EAC5B,CAAC;EACD;EACAkB,aAAaA,CAAA,EAAG;IACdF,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACnB,iBAAiB,CAAC;EAC/D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}