{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from \"@/services/ApiService\";\nimport { logoutUser } from \"@/services/useAuth.js\";\nexport default {\n  data() {\n    return {\n      page: 1,\n      totalPages: 0,\n      postsPerPage: 6,\n      userData: {\n        id: \"\",\n        name: \"\",\n        username: \"\",\n        birthdate: \"\",\n        description: \"\",\n        profile_picture: \"\"\n      },\n      // se usa para determinar si el perfil mostrado es el del usuario logeado (no es el caso para este listado)\n      isCurrentUser: null,\n      follows: {\n        isFollowing: false,\n        followers: [],\n        followers_count: 0,\n        following: 0,\n        following_list: [] // nueva propiedad para la lista de usuarios a los que se sigue\n      },\n      countPosts: 0,\n      profileImageFile: null,\n      profilePhoto: null,\n      // Para la vista previa\n      posts: []\n    };\n  },\n  computed: {\n    currentUserId() {\n      const userData = localStorage.getItem(\"userData\");\n      if (userData) {\n        // Convertimos el id a string para asegurar la comparación posterior\n        return JSON.parse(userData).id.toString();\n      }\n      return \"\";\n    }\n  },\n  methods: {\n    onPageChange(n) {\n      this.page = n;\n      this.fetchPosts();\n    },\n    async fetchUser() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const username = this.$route.params.username || localStorage.getItem(\"username\");\n        const response = await apiClient.get(`/profile/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        let user = response.data.user;\n        if (user.birthdate) {\n          user.birthdate = user.birthdate.split(\"T\")[0];\n        }\n        this.userData = {\n          ...user,\n          password: \"\"\n        };\n        this.isCurrentUser = response.data.isCurrentUser;\n\n        // Obtener seguidos\n        if (user.id) {\n          const resFollowing = await apiClient.get(`/follow/following/count/${user.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.follows.following = resFollowing.data.followingCount || 0;\n\n          // Si no es el usuario actual, consulta si lo sigue\n          if (!this.isCurrentUser) {\n            const resIsFollowing = await apiClient.get(`/follow/check/${user.id}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            this.follows.isFollowing = resIsFollowing.data.isFollowing;\n          }\n\n          // Llamamos a fetchFollowers para obtener la lista completa de seguidores\n          await this.fetchFollowers();\n        }\n\n        // Cantidad de publicaciones\n        const res = await apiClient.get(`/posts/count/${user.id}`);\n        this.countPosts = res.data.post_count;\n      } catch (error) {\n        console.error(\"Error al obtener el usuario:\", error.response?.data || error);\n        alert(\"Error al obtener los datos del usuario.\");\n      }\n    },\n    async fetchFollowers() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const resFollowers = await apiClient.get(`/follow/followers/${this.userData.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.follows.followers = resFollowers.data || [];\n        this.follows.followers_count = this.follows.followers.length;\n        // Para cada seguidor se consulta si el usuario logueado ya lo sigue\n        for (let follower of this.follows.followers) {\n          // Si el seguidor es el usuario actual, no se consulta el endpoint\n          if (follower.id.toString() === this.currentUserId) {\n            follower.isFollowed = false;\n            continue;\n          }\n          try {\n            // Se asume que el endpoint /follow/check acepta currentUserId como parámetro\n            const resCheck = await apiClient.get(`/follow/check/${follower.id}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              },\n              params: {\n                currentUserId: this.currentUserId\n              }\n            });\n            const followed = resCheck.data.isFollowing === true || resCheck.data.isFollowing === 1;\n            follower.isFollowed = followed;\n          } catch (error) {\n            follower.isFollowed = false;\n          }\n        }\n      } catch (error) {\n        console.error(\"Error al obtener los seguidores:\", error.response?.data || error);\n      }\n    },\n    async fetchFollowing() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const resFollowingList = await apiClient.get(`/follow/following/${this.userData.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        // Se asume que el endpoint retorna la lista en resFollowingList.data\n        this.follows.following_list = resFollowingList.data || [];\n        // Para cada usuario se marca que ya se sigue\n        for (let user of this.follows.following_list) {\n          user.isFollowed = true;\n        }\n      } catch (error) {\n        console.error(\"Error al obtener los seguidos:\", error.response?.data || error);\n      }\n    },\n    async toggleFollowerFollow(followerId) {\n      const token = localStorage.getItem(\"authToken\");\n      // Se localiza el seguidor en la lista\n      const follower = this.follows.followers.find(f => f.id === followerId);\n      if (!follower) return;\n      try {\n        if (follower.isFollowed) {\n          // Desfollow\n          await apiClient.delete(`/follow/${followerId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: {\n              followed_id: followerId\n            }\n          });\n          follower.isFollowed = false;\n        } else {\n          // Follow\n          await apiClient.post(`/follow`, {\n            followed_id: followerId\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          follower.isFollowed = true;\n        }\n      } catch (error) {\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\n      }\n    },\n    async toggleFollowingFollow(userId) {\n      const token = localStorage.getItem(\"authToken\");\n      // Se localiza el usuario en la lista de seguidos\n      const user = this.follows.following_list.find(u => u.id === userId);\n      if (!user) return;\n      try {\n        if (user.isFollowed) {\n          // Dejar de seguir\n          await apiClient.delete(`/follow/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: {\n              followed_id: userId\n            }\n          });\n          user.isFollowed = false;\n        } else {\n          // Seguir\n          await apiClient.post(`/follow`, {\n            followed_id: userId\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          user.isFollowed = true;\n        }\n      } catch (error) {\n        console.error(\"Error al cambiar el estado de seguimiento:\", error.response?.data || error);\n      }\n    },\n    getUserImage() {\n      return this.userData.profile_picture || \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\";\n    },\n    logout() {\n      logoutUser(this.$router);\n    },\n    goToEditProfile() {\n      this.$router.push(`/profile/${this.userData.username}/edit-account`);\n    },\n    editPost(post) {\n      // Redirige a la vista de edición del post del usuario\n      this.$router.push(`/posts/${post.id}/edit-post`);\n    },\n    async deletePost(post) {\n      if (confirm(\"¿Estás seguro de que deseas eliminar esta publicación?\")) {\n        try {\n          const token = localStorage.getItem(\"authToken\");\n          await apiClient.delete(`/posts/${post.id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          // Recarga las publicaciones después de eliminar\n          this.fetchPosts();\n          alert(\"Publicación eliminada correctamente\");\n        } catch (error) {\n          alert(\"Error al eliminar la publicación\");\n          console.error(error);\n        }\n      }\n    },\n    async toggleFollow() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const userId = this.userData.id;\n        const action = this.follows.isFollowing ? \"unfollow\" : \"follow\";\n        if (action === \"follow\") {\n          await apiClient.post(`/follow`, {\n            followed_id: userId\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.follows.isFollowing = true;\n        } else {\n          await apiClient.delete(`/follow/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: {\n              followed_id: userId\n            } // algunos clientes requieren esto, pero tu backend solo usa el param\n          });\n          this.follows.isFollowing = false;\n        }\n        // Actualiza la lista de seguidores\n        await this.fetchFollowers();\n      } catch (error) {\n        console.error(\"Error al seguir/dejar de seguir:\", error);\n      }\n    }\n  },\n  beforeMount() {\n    this.fetchUser();\n  }\n};","map":{"version":3,"names":["apiClient","logoutUser","data","page","totalPages","postsPerPage","userData","id","name","username","birthdate","description","profile_picture","isCurrentUser","follows","isFollowing","followers","followers_count","following","following_list","countPosts","profileImageFile","profilePhoto","posts","computed","currentUserId","localStorage","getItem","JSON","parse","toString","methods","onPageChange","n","fetchPosts","fetchUser","token","$route","params","response","get","headers","Authorization","user","split","password","resFollowing","followingCount","resIsFollowing","fetchFollowers","res","post_count","error","console","alert","resFollowers","length","follower","isFollowed","resCheck","followed","fetchFollowing","resFollowingList","toggleFollowerFollow","followerId","find","f","delete","followed_id","post","toggleFollowingFollow","userId","u","getUserImage","logout","$router","goToEditProfile","push","editPost","deletePost","confirm","toggleFollow","action","beforeMount"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\layouts\\ProfileLayout.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"page-title-overlap bg-dark pt-4\">\r\n      <div\r\n        class=\"container d-flex flex-wrap flex-sm-nowrap justify-content-center justify-content-sm-between align-items-center pt-2\">\r\n        <div class=\"d-flex align-items-center pb-3\">\r\n          <div class=\"rounded-circle position-relative flex-shrink-0\" style=\"width: 6.375rem\">\r\n            <img class=\"rounded-circle\" :src=\"getUserImage()\" :alt=\"userData.name\" />\r\n          </div>\r\n          <div class=\"ps-3\">\r\n            <h3 class=\"text-light fs-lg mb-0\">{{ userData.name }}</h3>\r\n            <span class=\"d-block text-light fs-ms opacity-60 py-1\">@{{ userData.username }}</span>\r\n            <span class=\"d-block text-light fs-ms py-1 w-75\" style=\"max-width: 450px\">\r\n              {{ userData.description }}</span>\r\n          </div>\r\n        </div>\r\n        <!-- Desktop version -->\r\n        <div class=\"d-none d-sm-flex flex-column align-items-end\">\r\n          <div class=\"d-flex\">\r\n            <div class=\"text-end\">\r\n              <div class=\"text-light fs-base\">{{ countPosts }}</div>\r\n              <div class=\"text-light fs-ms opacity-60 py-1\">Publicaciones</div>\r\n            </div>\r\n            <div class=\"text-end ml-3\">\r\n              <div class=\"text-light fs-base\">{{ follows.followers.length }}</div>\r\n              <div class=\"text-light fs-ms opacity-60 py-1\">\r\n                <a type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#followersModal\">Seguidores</a>\r\n              </div>\r\n            </div>\r\n            <div class=\"text-end ml-3\">\r\n              <div class=\"text-light fs-base\">{{ follows.following }}</div>\r\n              <div class=\"text-light fs-ms opacity-60 py-1\">Siguiendo</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-center mt-2\" v-if=\"!isCurrentUser\">\r\n            <button class=\"btn btn-secondary btn-sm align-middle\" @click=\"toggleFollow\">\r\n              {{ follows.isFollowing ? \"Dejar de seguir\" : \"Seguir\" }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <!-- Mobile version -->\r\n        <div class=\"d-flex d-sm-none w-100 justify-content-around my-3\">\r\n          <div class=\"text-center\">\r\n            <div class=\"text-light fs-6 fw-bold\">{{ countPosts }}</div>\r\n            <div class=\"text-light fs-ms opacity-60 py-1\">Publicaciones</div>\r\n          </div>\r\n\r\n          <div class=\"text-center\">\r\n            <div class=\"text-light fs-6 fw-bold\">{{ follows.followers_count }}</div>\r\n            <div class=\"text-light fs-ms opacity-60 py-1\">Seguidores</div>\r\n          </div>\r\n          <div class=\"text-center\">\r\n            <div class=\"text-light fs-6 fw-bold\">{{ follows.following }}</div>\r\n            <div class=\"text-light fs-ms opacity-60 py-1\">Seguidos</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- seguir usuario buton -->\r\n        <div class=\"d-lg-none\">\r\n          <button class=\"btn btn-secondary btn-sm\" v-if=\"!isCurrentUser\" @click=\"toggleFollow\">\r\n            {{ follows.isFollowing ? \"Dejar de seguir\" : \"Seguir\" }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"container mb-5 pb-3\">\r\n      <div class=\"bg-light shadow-lg rounded-3 overflow-hidden\">\r\n        <div class=\"row\">\r\n          <!-- Sidebar-->\r\n          <aside class=\"col-lg-4 pt-2 pt-lg-0 pe-xl-4\">\r\n            <div class=\"d-block d-lg-none p-4\">\r\n              <a class=\"btn btn-outline-accent d-block\" href=\"#account-menu\" data-bs-toggle=\"collapse\"\r\n                aria-expanded=\"true\"><i class=\"ci-menu me-2\"></i>Menu cuenta</a>\r\n            </div>\r\n            <div class=\"bg-white rounded-3 shadow-lg pt-1 mb-lg-0 mb-4\">\r\n              <div class=\"d-lg-block collapse\" id=\"account-menu\">\r\n                <div class=\"bg-secondary px-4 py-3\">\r\n                  <h3 class=\"fs-sm mb-0 text-muted\">Cuenta</h3>\r\n                </div>\r\n                <ul class=\"list-unstyled mb-0\">\r\n                  <li class=\"border-bottom mb-0\">\r\n                    <router-link :to=\"`/profile/${userData.username}/`\"\r\n                      class=\"nav-link-style d-flex align-items-center px-4 py-3\" active-class=\"active\">\r\n                      <i class=\"ci-book opacity-60 me-2\"></i>\r\n                      Publicaciones\r\n                    </router-link>\r\n                  </li>\r\n                  <li class=\"border-bottom mb-0\">\r\n                    <router-link :to=\"`/profile/${userData.username}/likes`\"\r\n                      class=\"nav-link-style d-flex align-items-center px-4 py-3\" active-class=\"active\">\r\n                      <i class=\"ci-heart opacity-60 me-2\"></i>\r\n                      Favoritos\r\n                    </router-link>\r\n                  </li>\r\n                 \r\n                </ul>\r\n                <div v-if=\"isCurrentUser\">\r\n                  <div class=\"bg-secondary px-4 py-3\">\r\n                    <h3 class=\"fs-sm mb-0 text-muted\">Configuración</h3>\r\n                  </div>\r\n                  <ul class=\"list-unstyled mb-0\">\r\n                    <li class=\"border-bottom mb-0\">\r\n                      <router-link :to=\"`/profile/${userData.username}/edit-account`\"\r\n                        class=\"nav-link-style d-flex align-items-center px-4 py-3\" active-class=\"active\">\r\n                        <i class=\"ci-user opacity-60 me-2\"></i>\r\n                        Información personal\r\n                      </router-link>\r\n                    </li>\r\n                    <li class=\"border-top mb-0\">\r\n                      <a type=\"button\" class=\"nav-link-style d-flex align-items-center px-4 py-3\" @click=\"logout\">\r\n                        <i class=\"ci-sign-out opacity-60 me-2\"></i>\r\n                        Cerrar sesión\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n          <!-- Content-->\r\n          <section class=\"col-lg-8 pt-lg-4 pb-4 mb-3\">\r\n            <slot></slot>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <!-- Botón para abrir el modal -->\r\n\r\n      <!-- Modal -->\r\n      <div class=\"modal fade\" id=\"followersModal\" tabindex=\"-1\" style=\"display: none\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\" style=\"max-width: 400px; max-height: 400px\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h6 class=\"modal-title\">Seguidores</h6>\r\n              <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body fs-sm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <ul class=\"list-unstyled mb-0\">\r\n                    <li v-for=\"follower in follows.followers\" :key=\"follower.id\" class=\"mb-2\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <div>\r\n                          <a :href=\"`/profile/${follower.username}`\" class=\"nav-link-style d-flex align-items-center\">\r\n                            <img :src=\"follower.profile_picture || 'https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media'\"\r\n                              alt=\"\" width=\"50\" height=\"50\" class=\"rounded-circle me-2\" />\r\n                            <div class=\"d-flex flex-column\">\r\n                              <span>@{{ follower.username }}</span>\r\n                              <span class=\"text-muted\">{{ follower.name }}</span>\r\n                            </div>\r\n                          </a>\r\n                        </div>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <!-- Se muestra el botón solo si el seguidor no es el usuario actual -->\r\n                          <button v-if=\"follower.id != currentUserId\" class=\"btn btn-secondary btn-sm\"\r\n                            @click=\"toggleFollowerFollow(follower.id)\">\r\n                            {{ follower.isFollowed ? \"Dejar de seguir\" : \"Seguir\" }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal para \"Siguiendo\" -->\r\n      <div class=\"modal fade\" id=\"followingModal\" tabindex=\"-1\" style=\"display: none\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\" style=\"max-width: 400px; max-height: 400px\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h6 class=\"modal-title\">Siguiendo</h6>\r\n              <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body fs-sm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <ul class=\"list-unstyled mb-0\">\r\n                    <li v-for=\"user in follows.following_list\" :key=\"user.id\" class=\"mb-2\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <div>\r\n                          <a :href=\"`/profile/${user.username}`\" class=\"nav-link-style d-flex align-items-center\">\r\n                            <img :src=\"user.profile_picture || 'https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media'\"\r\n                              alt=\"\" width=\"50\" height=\"50\" class=\"rounded-circle me-2\" />\r\n                            <div class=\"d-flex flex-column\">\r\n                              <span>@{{ user.username }}</span>\r\n                              <span class=\"text-muted\">{{ user.name }}</span>\r\n                            </div>\r\n                          </a>\r\n                        </div>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <!-- Se muestra el botón solo si el usuario no es el actual -->\r\n                          <button v-if=\"user.id !== currentUserId\" class=\"btn btn-secondary btn-sm\"\r\n                            @click=\"toggleFollowingFollow(user.id)\">\r\n                            {{ user.isFollowed ? \"Dejar de seguir\" : \"Seguir\" }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport { logoutUser } from \"@/services/useAuth.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      page: 1,\r\n      totalPages: 0,\r\n      postsPerPage: 6,\r\n\r\n      userData: {\r\n        id: \"\",\r\n        name: \"\",\r\n        username: \"\",\r\n        birthdate: \"\",\r\n        description: \"\",\r\n        profile_picture: \"\",\r\n      },\r\n      // se usa para determinar si el perfil mostrado es el del usuario logeado (no es el caso para este listado)\r\n      isCurrentUser: null,\r\n      follows: {\r\n        isFollowing: false,\r\n        followers: [],\r\n        followers_count: 0,\r\n        following: 0,\r\n        following_list: [] // nueva propiedad para la lista de usuarios a los que se sigue\r\n      },\r\n      countPosts: 0,\r\n      profileImageFile: null,\r\n      profilePhoto: null, // Para la vista previa\r\n      posts: [],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    currentUserId() {\r\n      const userData = localStorage.getItem(\"userData\");\r\n      if (userData) {\r\n        // Convertimos el id a string para asegurar la comparación posterior\r\n        return JSON.parse(userData).id.toString();\r\n      }\r\n      return \"\";\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    onPageChange(n) {\r\n      this.page = n;\r\n      this.fetchPosts();\r\n    },\r\n\r\n    async fetchUser() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const username = this.$route.params.username || localStorage.getItem(\"username\");\r\n        const response = await apiClient.get(`/profile/${username}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        let user = response.data.user;\r\n        if (user.birthdate) {\r\n          user.birthdate = user.birthdate.split(\"T\")[0];\r\n        }\r\n        this.userData = {\r\n          ...user,\r\n          password: \"\"\r\n        };\r\n        this.isCurrentUser = response.data.isCurrentUser;\r\n\r\n        // Obtener seguidos\r\n        if (user.id) {\r\n          const resFollowing = await apiClient.get(`/follow/following/count/${user.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          this.follows.following = resFollowing.data.followingCount || 0;\r\n\r\n          // Si no es el usuario actual, consulta si lo sigue\r\n          if (!this.isCurrentUser) {\r\n            const resIsFollowing = await apiClient.get(`/follow/check/${user.id}`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            this.follows.isFollowing = resIsFollowing.data.isFollowing;\r\n          }\r\n\r\n          // Llamamos a fetchFollowers para obtener la lista completa de seguidores\r\n          await this.fetchFollowers();\r\n        }\r\n\r\n        // Cantidad de publicaciones\r\n        const res = await apiClient.get(`/posts/count/${user.id}`);\r\n        this.countPosts = res.data.post_count;\r\n      } catch (error) {\r\n        console.error(\"Error al obtener el usuario:\", error.response?.data || error);\r\n        alert(\"Error al obtener los datos del usuario.\");\r\n      }\r\n    },\r\n\r\n    async fetchFollowers() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const resFollowers = await apiClient.get(`/follow/followers/${this.userData.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.follows.followers = resFollowers.data || [];\r\n        this.follows.followers_count = this.follows.followers.length;\r\n        // Para cada seguidor se consulta si el usuario logueado ya lo sigue\r\n        for (let follower of this.follows.followers) {\r\n          // Si el seguidor es el usuario actual, no se consulta el endpoint\r\n          if (follower.id.toString() === this.currentUserId) {\r\n            follower.isFollowed = false;\r\n            continue;\r\n          }\r\n          try {\r\n            // Se asume que el endpoint /follow/check acepta currentUserId como parámetro\r\n            const resCheck = await apiClient.get(`/follow/check/${follower.id}`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n              params: { currentUserId: this.currentUserId }\r\n            });\r\n            const followed = resCheck.data.isFollowing === true || resCheck.data.isFollowing === 1;\r\n            follower.isFollowed = followed;\r\n          } catch (error) {\r\n            follower.isFollowed = false;\r\n\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los seguidores:\", error.response?.data || error);\r\n      }\r\n    },\r\n\r\n    async fetchFollowing() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const resFollowingList = await apiClient.get(`/follow/following/${this.userData.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        // Se asume que el endpoint retorna la lista en resFollowingList.data\r\n        this.follows.following_list = resFollowingList.data || [];\r\n        // Para cada usuario se marca que ya se sigue\r\n        for (let user of this.follows.following_list) {\r\n          user.isFollowed = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los seguidos:\", error.response?.data || error);\r\n      }\r\n    },\r\n\r\n    async toggleFollowerFollow(followerId) {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      // Se localiza el seguidor en la lista\r\n      const follower = this.follows.followers.find(f => f.id === followerId);\r\n      if (!follower) return;\r\n      try {\r\n        if (follower.isFollowed) {\r\n          // Desfollow\r\n          await apiClient.delete(`/follow/${followerId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            data: { followed_id: followerId },\r\n          });\r\n          follower.isFollowed = false;\r\n        } else {\r\n          // Follow\r\n          await apiClient.post(`/follow`, { followed_id: followerId }, { headers: { Authorization: `Bearer ${token}` } });\r\n          follower.isFollowed = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\r\n      }\r\n    },\r\n\r\n    async toggleFollowingFollow(userId) {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      // Se localiza el usuario en la lista de seguidos\r\n      const user = this.follows.following_list.find(u => u.id === userId);\r\n      if (!user) return;\r\n      try {\r\n        if (user.isFollowed) {\r\n          // Dejar de seguir\r\n          await apiClient.delete(`/follow/${userId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            data: { followed_id: userId },\r\n          });\r\n          user.isFollowed = false;\r\n        } else {\r\n          // Seguir\r\n          await apiClient.post(`/follow`, { followed_id: userId }, { headers: { Authorization: `Bearer ${token}` } });\r\n          user.isFollowed = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al cambiar el estado de seguimiento:\", error.response?.data || error);\r\n      }\r\n    },\r\n\r\n    getUserImage() {\r\n      return (\r\n        this.userData.profile_picture ||\r\n        \"https://firebasestorage.googleapis.com/v0/b/booksharing-socialnetwork.appspot.com/o/profile%2Fdefault.jpg?alt=media\"\r\n      );\r\n    },\r\n    logout() {\r\n      logoutUser(this.$router);\r\n    },\r\n    goToEditProfile() {\r\n      this.$router.push(`/profile/${this.userData.username}/edit-account`);\r\n    },\r\n    editPost(post) {\r\n      // Redirige a la vista de edición del post del usuario\r\n      this.$router.push(`/posts/${post.id}/edit-post`);\r\n    },\r\n    async deletePost(post) {\r\n      if (confirm(\"¿Estás seguro de que deseas eliminar esta publicación?\")) {\r\n        try {\r\n          const token = localStorage.getItem(\"authToken\");\r\n          await apiClient.delete(`/posts/${post.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          // Recarga las publicaciones después de eliminar\r\n          this.fetchPosts();\r\n          alert(\"Publicación eliminada correctamente\");\r\n        } catch (error) {\r\n          alert(\"Error al eliminar la publicación\");\r\n          console.error(error);\r\n        }\r\n      }\r\n    },\r\n    async toggleFollow() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        const userId = this.userData.id;\r\n        const action = this.follows.isFollowing ? \"unfollow\" : \"follow\";\r\n\r\n        if (action === \"follow\") {\r\n          await apiClient.post(\r\n            `/follow`,\r\n            { followed_id: userId },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            }\r\n          );\r\n          this.follows.isFollowing = true;\r\n        } else {\r\n          await apiClient.delete(`/follow/${userId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            data: { followed_id: userId }, // algunos clientes requieren esto, pero tu backend solo usa el param\r\n          });\r\n          this.follows.isFollowing = false;\r\n        }\r\n        // Actualiza la lista de seguidores\r\n        await this.fetchFollowers();\r\n      } catch (error) {\r\n        console.error(\"Error al seguir/dejar de seguir:\", error);\r\n      }\r\n    },\r\n  },\r\n\r\n  beforeMount() {\r\n    this.fetchUser();\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.library-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.library-item .card {\r\n  height: 100%;\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-img-top {\r\n  height: 300px;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}