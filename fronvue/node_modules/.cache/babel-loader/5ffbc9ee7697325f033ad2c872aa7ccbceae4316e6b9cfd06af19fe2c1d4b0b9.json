{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_3 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_4 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_9 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[17] || (_cache[17] = _createElementVNode(\"h2\", null, \"Crear Publicación\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"])),\n    class: \"mt-4 w-50\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Título\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.postData.title = $event),\n    class: \"form-control form-control-sm\",\n    placeholder: \"Título de la publicación\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.postData.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Descripción\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.postData.description = $event),\n    class: \"form-control form-control-sm\",\n    placeholder: \"Descripción\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.postData.description]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"image\"\n  }, \"Imagen\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"image\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.onImageChange && $options.onImageChange(...args)),\n    class: \"form-control form-control-sm\",\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"pdf\"\n  }, \"Archivo PDF\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"pdf\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.onPdfChange && $options.onPdfChange(...args)),\n    class: \"form-control form-control-sm\",\n    accept: \"application/pdf\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_6, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"category\"\n  }, \"Categoría\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"category\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.postData.category_id = $event),\n    class: \"form-control form-control-sm\",\n    required: \"\"\n  }, [_cache[12] || (_cache[12] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Selecciona una categoría\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, cat => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: cat.id,\n      value: cat.id\n    }, _toDisplayString(cat.name), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.postData.category_id]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    for: \"user\"\n  }, \"Usuario\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"user\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.postData.user_id = $event),\n    class: \"form-control form-control-sm\",\n    required: \"\"\n  }, [_cache[14] || (_cache[14] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Selecciona un usuario\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: user.id,\n      value: user.id\n    }, _toDisplayString(user.name), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.postData.user_id]])]), _cache[16] || (_cache[16] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Crear Publicación\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary ml-3\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.cancel && $options.cancel(...args))\n  }, \" Cancelar \")], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","createPost","_hoisted_2","for","type","id","$event","$data","postData","title","placeholder","required","_hoisted_3","description","_hoisted_4","onChange","onImageChange","accept","_hoisted_5","onPdfChange","_hoisted_6","category_id","value","disabled","_Fragment","_renderList","categories","cat","key","name","_hoisted_7","_hoisted_8","user_id","users","user","_hoisted_9","onClick","cancel"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\admin\\post-create_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-fluid mt-4\">\r\n        <h2>Crear Publicación</h2>\r\n        <form @submit.prevent=\"createPost\" class=\"mt-4 w-50\">\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"title\">Título</label>\r\n                <input type=\"text\" id=\"title\" v-model=\"postData.title\" class=\"form-control form-control-sm\"\r\n                    placeholder=\"Título de la publicación\" required />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"description\">Descripción</label>\r\n                <textarea id=\"description\" v-model=\"postData.description\" class=\"form-control form-control-sm\" placeholder=\"Descripción\"\r\n                    required></textarea>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"image\">Imagen</label>\r\n                <input type=\"file\" id=\"image\" @change=\"onImageChange\" class=\"form-control form-control-sm\" accept=\"image/*\" />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"pdf\">Archivo PDF</label>\r\n                <input type=\"file\" id=\"pdf\" @change=\"onPdfChange\" class=\"form-control form-control-sm\" accept=\"application/pdf\" />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"category\">Categoría</label>\r\n                <select id=\"category\" v-model=\"postData.category_id\" class=\"form-control form-control-sm\" required>\r\n                    <option value=\"\" disabled>Selecciona una categoría</option>\r\n                    <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">{{ cat.name }}</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <label for=\"user\">Usuario</label>\r\n                <select id=\"user\" v-model=\"postData.user_id\" class=\"form-control form-control-sm\" required>\r\n                    <option value=\"\" disabled>Selecciona un usuario</option>\r\n                    <option v-for=\"user in users\" :key=\"user.id\" :value=\"user.id\">{{ user.name }}</option>\r\n                </select>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Crear Publicación</button>\r\n            <button type=\"button\" class=\"btn btn-secondary ml-3\" @click=\"cancel\">\r\n                Cancelar\r\n            </button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport eventBus from \"@/eventBus.js\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            postData: {\r\n                title: \"\",\r\n                description: \"\",\r\n                user_id: \"\",\r\n                category_id: \"\",\r\n            },\r\n            image: null,\r\n            pdf: null,\r\n            users: [],\r\n            categories: [],\r\n        };\r\n    },\r\n    methods: {\r\n        async fetchCategories() {\r\n            try {\r\n                const token = localStorage.getItem(\"authToken\");\r\n                const response = await apiClient.get(\"admin/categories\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                this.categories = response.data;\r\n            } catch (error) {\r\n                console.error(\"Error al obtener las categorías:\", error.response?.data || error);\r\n            }\r\n        },\r\n        onImageChange(event) {\r\n            this.image = event.target.files[0];\r\n        },\r\n        onPdfChange(event) {\r\n            this.pdf = event.target.files[0];\r\n        },\r\n        async fetchUsers() {\r\n            try {\r\n                const token = localStorage.getItem(\"authToken\");\r\n                const response = await apiClient.get(\"/users\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                this.users = response.data;\r\n            } catch (error) {\r\n                console.error(\"Error al obtener los usuarios:\", error.response?.data || error);\r\n            }\r\n        },\r\n        async createPost() {\r\n            try {\r\n                const token = localStorage.getItem(\"authToken\");\r\n                const formData = new FormData();\r\n                formData.append(\"title\", this.postData.title);\r\n                formData.append(\"description\", this.postData.description);\r\n                formData.append(\"category_id\", this.postData.category_id);\r\n                formData.append(\"user_id\", this.postData.user_id);\r\n\r\n                if (this.image) formData.append(\"images\", this.image);\r\n                if (this.pdf) formData.append(\"pdf\", this.pdf);\r\n                console.log()\r\n\r\n                await apiClient.post(\r\n                    \"/posts\",\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                            \"Content-Type\": \"multipart/form-data\"\r\n                        }\r\n                    }\r\n                );\r\n                // Redirige y pasa la alerta por query\r\n                this.$router.push({\r\n                    path: \"/admin/posts-list\",\r\n                    query: { alert: \"Publicación creada exitosamente\", type: \"success\" }\r\n                });\r\n            } catch (error) {\r\n                // Muestra la alerta en la misma vista si falla\r\n                eventBus.emit('alert', { message: \"Error al crear la publicación. Verifica los datos e inténtalo de nuevo.\", type: \"danger\" });\r\n            }\r\n        },\r\n        cancel() {\r\n            this.$router.push(\"/admin/posts-list\");\r\n        },\r\n    },\r\n    mounted() {\r\n        this.fetchUsers();\r\n        this.fetchCategories();\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    max-width: 600px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}