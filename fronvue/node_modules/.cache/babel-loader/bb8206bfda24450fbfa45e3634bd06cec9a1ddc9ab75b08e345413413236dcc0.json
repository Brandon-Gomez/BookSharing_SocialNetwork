{"ast":null,"code":"import apiClient from \"@/services/ApiService\";\nexport default {\n  props: {\n    postId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isLiked: false,\n      likeCount: 0\n    };\n  },\n  async created() {\n    await this.fetchLikeCount();\n    await this.checkIfLiked(); // Verificamos si ya tiene \"like\"\n  },\n  methods: {\n    async fetchLikeCount() {\n      try {\n        const response = await apiClient.get(`/like/count/${this.postId}`);\n        this.likeCount = response.data.likeCount;\n      } catch (error) {\n        console.error(\"Error fetching like count:\", error);\n      }\n    },\n    async toggleLike() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        if (this.isLiked) {\n          // Quitar \"like\"\n          await apiClient.delete(`/like`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: {\n              postId: this.postId\n            }\n          });\n          this.likeCount--;\n        } else {\n          // Agregar \"like\"\n          await apiClient.post(`/like`, {\n            postId: this.postId\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.likeCount++;\n        }\n        this.isLiked = !this.isLiked;\n      } catch (error) {\n        console.error(\"Error toggling like:\", error);\n      }\n    },\n    async checkIfLiked() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await apiClient.get(`/like/check/${this.postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.isLiked = response.data.isLiked;\n        console.log(\"Initial like state:\", this.isLiked); // Confirmaci√≥n del estado inicial en la consola\n      } catch (error) {\n        console.error(\"Error checking if liked:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","postId","type","String","required","data","isLiked","likeCount","created","fetchLikeCount","checkIfLiked","methods","response","get","error","console","toggleLike","token","localStorage","getItem","delete","headers","Authorization","post","log"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\like_component.vue"],"sourcesContent":["<template>\r\n    <div class=\"like-container\">\r\n      <button @click=\"toggleLike\" :class=\"{ liked: isLiked }\">\r\n        <span v-if=\"isLiked\">üíñ</span>\r\n        <span v-else>ü§ç</span>\r\n      </button>\r\n      <span>{{ likeCount }} Me gusta</span>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import apiClient from \"@/services/ApiService\";\r\n  \r\n  export default {\r\n    props: {\r\n      postId: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        isLiked: false,\r\n        likeCount: 0,\r\n      };\r\n    },\r\n    async created() {\r\n      await this.fetchLikeCount();\r\n      await this.checkIfLiked(); // Verificamos si ya tiene \"like\"\r\n    },\r\n    methods: {\r\n      async fetchLikeCount() {\r\n        try {\r\n          const response = await apiClient.get(`/like/count/${this.postId}`);\r\n          this.likeCount = response.data.likeCount;\r\n        } catch (error) {\r\n          console.error(\"Error fetching like count:\", error);\r\n        }\r\n      },\r\n      async toggleLike() {\r\n        try {\r\n          const token = localStorage.getItem(\"authToken\");\r\n          if (this.isLiked) {\r\n            // Quitar \"like\"\r\n            await apiClient.delete(\r\n              `/like`,\r\n              {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n                data: { postId: this.postId },\r\n              }\r\n            );\r\n            this.likeCount--;\r\n          } else {\r\n            // Agregar \"like\"\r\n            await apiClient.post(\r\n              `/like`,\r\n              { postId: this.postId },\r\n              { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n            this.likeCount++;\r\n          }\r\n          this.isLiked = !this.isLiked;\r\n        } catch (error) {\r\n          console.error(\"Error toggling like:\", error);\r\n        }\r\n      },\r\n      async checkIfLiked() {\r\n        try {\r\n          const token = localStorage.getItem(\"authToken\");\r\n          const response = await apiClient.get(`/like/check/${this.postId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          this.isLiked = response.data.isLiked;\r\n          console.log(\"Initial like state:\", this.isLiked); // Confirmaci√≥n del estado inicial en la consola\r\n        } catch (error) {\r\n          console.error(\"Error checking if liked:\", error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .like-container {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 1.5em;\r\n  }\r\n  button.liked {\r\n    color: red;\r\n  }\r\n  span {\r\n    margin-left: 0.5em;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAWE,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;IAC3B,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMb,SAAS,CAACc,GAAG,CAAC,eAAe,IAAI,CAACZ,MAAM,EAAE,CAAC;QAClE,IAAI,CAACM,SAAQ,GAAIK,QAAQ,CAACP,IAAI,CAACE,SAAS;MAC1C,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,IAAI,IAAI,CAACb,OAAO,EAAE;UAChB;UACA,MAAMP,SAAS,CAACqB,MAAM,CACpB,OAAO,EACP;YACEC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUL,KAAK;YAAG,CAAC;YAC7CZ,IAAI,EAAE;cAAEJ,MAAM,EAAE,IAAI,CAACA;YAAO;UAC9B,CACF,CAAC;UACD,IAAI,CAACM,SAAS,EAAE;QAClB,OAAO;UACL;UACA,MAAMR,SAAS,CAACwB,IAAI,CAClB,OAAO,EACP;YAAEtB,MAAM,EAAE,IAAI,CAACA;UAAO,CAAC,EACvB;YAAEoB,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUL,KAAK;YAAG;UAAE,CAClD,CAAC;UACD,IAAI,CAACV,SAAS,EAAE;QAClB;QACA,IAAI,CAACD,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;MAC9B,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAMJ,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMO,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAMP,QAAO,GAAI,MAAMb,SAAS,CAACc,GAAG,CAAC,eAAe,IAAI,CAACZ,MAAM,EAAE,EAAE;UACjEoB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUL,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,IAAI,CAACX,OAAM,GAAIM,QAAQ,CAACP,IAAI,CAACC,OAAO;QACpCS,OAAO,CAACS,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAClB,OAAO,CAAC,EAAE;MACpD,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}