{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex justify-content-between align-items-center mb-3\"\n};\nconst _hoisted_3 = {\n  class: \"table table-striped\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Lista de Usuarios\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.createUser && _ctx.createUser(...args))\n  }, \"Crear Usuario\")]), _createElementVNode(\"table\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Nombre\"), _createElementVNode(\"th\", null, \"Correo\"), _createElementVNode(\"th\", null, \"Usuario\"), _createElementVNode(\"th\", null, \"Rol\"), _createElementVNode(\"th\", null, \"Acciones\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.username), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.is_admin ? 'Administrador' : 'Usuario'), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-warning btn-sm mr-3\",\n      onClick: $event => _ctx.editUser(user.id)\n    }, \"Editar\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => _ctx.deleteUser(user.id)\n    }, \"Eliminar\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","_ctx","createUser","_hoisted_3","_Fragment","_renderList","users","user","key","id","_toDisplayString","name","email","username","is_admin","$event","editUser","_hoisted_4","deleteUser","_hoisted_5"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\admin\\users-list_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n      <h2>Lista de Usuarios</h2>\r\n      <button class=\"btn btn-primary\" @click=\"createUser\">Crear Usuario</button>\r\n    </div>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <th>Correo</th>\r\n          <th>Usuario</th>\r\n          <th>Rol</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(user) in users\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.is_admin ? 'Administrador' : 'Usuario' }}</td>\r\n          <td>\r\n            <button class=\"btn btn-warning btn-sm mr-3\" @click=\"editUser(user.id)\">Editar</button>\r\n            <button class=\"btn btn-danger btn-sm\" @click=\"deleteUser(user.id)\">Eliminar</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        console.log('Token:', token); // Verifica si el token se obtiene correctamente\r\n        if (token) {\r\n          const response = await apiClient.get(`/users`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.users = response.data;\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error al obtener los usuarios:', error);\r\n      }\r\n    },\r\n    createUser() {\r\n      this.$router.push('/admin/user-create'); // Redirige a la vista de creación de usuario\r\n    },\r\n    editUser(userId) {\r\n      this.$router.push(`/admin/user-edit/${userId}`); // Redirige a la vista de edición de usuario\r\n    },\r\n    async deleteUser(userId) {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token && confirm('¿Estás seguro de que deseas eliminar este usuario?')) {\r\n\r\n        // eliminar todos los post del usuario primero\r\n\r\n\r\n        const response = await apiClient.delete(`/posts/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if \r\n\r\n\r\n        await apiClient.delete(`/users/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.users = this.users.filter(user => user.id !== userId); // Actualiza la lista local\r\n        alert('Usuario eliminado correctamente.');\r\n\r\n      }\r\n\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchUsers(); // Carga los usuarios al montar el componente\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAwD;;EAI5DA,KAAK,EAAC;AAAqB;mBANtC;mBAAA;;uBACEC,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAA0E;IAAlEH,KAAK,EAAC,iBAAiB;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,eAAa,E,GAEnEJ,mBAAA,CAwBQ,SAxBRO,UAwBQ,G,0BAvBNP,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAiB,YAAb,UAAQ,E,wBAGhBA,mBAAA,CAYQ,iB,kBAXNF,mBAAA,CAUKU,SAAA,QA5BbC,WAAA,CAkB6BJ,IAAA,CAAAK,KAAK,EAAdC,IAAI;yBAAhBb,mBAAA,CAUK;MAVwBc,GAAG,EAAED,IAAI,CAACE;QACrCb,mBAAA,CAAsB,YAAAc,gBAAA,CAAfH,IAAI,CAACE,EAAE,kBACdb,mBAAA,CAAwB,YAAAc,gBAAA,CAAjBH,IAAI,CAACI,IAAI,kBAChBf,mBAAA,CAAyB,YAAAc,gBAAA,CAAlBH,IAAI,CAACK,KAAK,kBACjBhB,mBAAA,CAA4B,YAAAc,gBAAA,CAArBH,IAAI,CAACM,QAAQ,kBACpBjB,mBAAA,CAA0D,YAAAc,gBAAA,CAAnDH,IAAI,CAACO,QAAQ,gDACpBlB,mBAAA,CAGK,aAFHA,mBAAA,CAAsF;MAA9EH,KAAK,EAAC,6BAA6B;MAAEK,OAAK,EAAAiB,MAAA,IAAEd,IAAA,CAAAe,QAAQ,CAACT,IAAI,CAACE,EAAE;OAAG,QAAM,iBAzBzFQ,UAAA,GA0BYrB,mBAAA,CAAoF;MAA5EH,KAAK,EAAC,uBAAuB;MAAEK,OAAK,EAAAiB,MAAA,IAAEd,IAAA,CAAAiB,UAAU,CAACX,IAAI,CAACE,EAAE;OAAG,UAAQ,iBA1BvFU,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}