{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  name: 'NavComponent',\n  data() {\n    return {\n      profileData: {} // Almacena los datos del perfil\n    };\n  },\n  methods: {\n    async fetchUserProfile() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          // Obtiene los datos del perfil almacenados en Local Storage\n          const storedProfileData = localStorage.getItem('profileData');\n          if (storedProfileData) {\n            this.profileData = JSON.parse(storedProfileData);\n          } else {\n            const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            // Verificar la respuesta de la API\n            console.log(\"Datos de respuesta PROFILE:\", response.data);\n            this.profileData = response.data.user;\n            // Almacena el perfil en Local Storage\n            localStorage.setItem('profileData', JSON.stringify(this.profileData));\n          }\n        } catch (error) {\n          console.error('Error al obtener el perfil del usuario:', error);\n        }\n      }\n    },\n    logout() {\n      // Eliminar el token de autenticación o limpiar los datos de sesión\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('profileData'); // Limpiar el perfil almacenado\n\n      // Redirigir al usuario a la página de login\n      this.$router.push('/login');\n    }\n  },\n  mounted() {\n    this.fetchUserProfile(); // Obtener el perfil del usuario al montar el componente\n  }\n};","map":{"version":3,"names":["apiClient","name","data","profileData","methods","fetchUserProfile","token","localStorage","getItem","storedProfileData","JSON","parse","response","get","$route","params","username","headers","Authorization","console","log","user","setItem","stringify","error","logout","removeItem","$router","push","mounted"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\navbar_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <ul>\r\n      <!-- Enlace a Inicio -->\r\n      <li>\r\n        <router-link to=\"/\">Inicio</router-link>\r\n        <i class=\"fa fa-home\"></i>\r\n      </li>\r\n\r\n      <!-- Enlace al Perfil del usuario autenticado -->\r\n      <li>\r\n        <router-link :to=\"`/profile/${profileData.username}`\">Perfil</router-link>\r\n        <i class=\"fa fa-user\"></i>\r\n      </li>\r\n\r\n      <!-- Enlace a la búsqueda -->\r\n      <li>\r\n        <router-link to=\"/search\">Buscar</router-link>\r\n        <i class=\"fa fa-search\"></i>\r\n      </li>\r\n\r\n      <!-- Cerrar sesión -->\r\n      <li>\r\n        <a href=\"#\" @click.prevent=\"logout\">Cerrar sesión</a>\r\n        <i class=\"fa fa-sign-out\"></i>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  name: 'NavComponent',\r\n  data() {\r\n    return {\r\n      profileData: {}, // Almacena los datos del perfil\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUserProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n\r\n      if (token) {\r\n        try {\r\n          // Obtiene los datos del perfil almacenados en Local Storage\r\n          const storedProfileData = localStorage.getItem('profileData');\r\n          if (storedProfileData) {\r\n            this.profileData = JSON.parse(storedProfileData);\r\n          } else {\r\n            const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            });\r\n            // Verificar la respuesta de la API\r\n            console.log(\"Datos de respuesta PROFILE:\", response.data);\r\n\r\n            this.profileData = response.data.user;\r\n            // Almacena el perfil en Local Storage\r\n            localStorage.setItem('profileData', JSON.stringify(this.profileData));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error al obtener el perfil del usuario:', error);\r\n        }\r\n      }\r\n    },\r\n    logout() {\r\n      // Eliminar el token de autenticación o limpiar los datos de sesión\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('profileData'); // Limpiar el perfil almacenado\r\n\r\n      // Redirigir al usuario a la página de login\r\n      this.$router.push('/login');\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchUserProfile(); // Obtener el perfil del usuario al montar el componente\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.sidebar {\r\n  width: 200px;\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  position: fixed;\r\n  height: 100%;\r\n}\r\n\r\n.sidebar ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.sidebar li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.sidebar li:hover {\r\n  background-color: #e9ecef;\r\n}\r\n</style>\r\n"],"mappings":";AA+BA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF;UACA,MAAMG,iBAAgB,GAAIF,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;UAC7D,IAAIC,iBAAiB,EAAE;YACrB,IAAI,CAACN,WAAU,GAAIO,IAAI,CAACC,KAAK,CAACF,iBAAiB,CAAC;UAClD,OAAO;YACL,MAAMG,QAAO,GAAI,MAAMZ,SAAS,CAACa,GAAG,CAAC,YAAY,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE,EAAE;cAC9EC,OAAO,EAAE;gBACPC,aAAa,EAAE,UAAUZ,KAAK;cAChC;YACF,CAAC,CAAC;YACF;YACAa,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAER,QAAQ,CAACV,IAAI,CAAC;YAEzD,IAAI,CAACC,WAAU,GAAIS,QAAQ,CAACV,IAAI,CAACmB,IAAI;YACrC;YACAd,YAAY,CAACe,OAAO,CAAC,aAAa,EAAEZ,IAAI,CAACa,SAAS,CAAC,IAAI,CAACpB,WAAW,CAAC,CAAC;UACvE;QACF,EAAE,OAAOqB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QACjE;MACF;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP;MACAlB,YAAY,CAACmB,UAAU,CAAC,WAAW,CAAC;MACpCnB,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC,EAAE;;MAExC;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACxB,gBAAgB,CAAC,CAAC,EAAE;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}