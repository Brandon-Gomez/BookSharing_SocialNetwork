{"ast":null,"code":"import apiClient from \"@/services/ApiService\";\nimport pagination_component from \"@/components/pagination_component.vue\";\nimport LikeComponent from \"@/components/like_component.vue\";\nexport default {\n  components: {\n    pagination_component,\n    LikeComponent\n  },\n  props: {\n    // postId: {\n    //   type: String,\n    //   required: true,\n    // },\n    // customClass: {\n    //   type: String,\n    //   default: \"\",\n    // },\n    // customStyle: {\n    //   type: Object,\n    //   default: () => ({}),\n    // },\n  },\n  data() {\n    return {\n      posts: [],\n      page: 1,\n      totalPages: 0,\n      userData: {},\n      totalPosts: 0,\n      postsPerPage: 6\n    };\n  },\n  methods: {\n    onPageChange(n) {\n      this.page = n;\n      this.fetchPosts();\n    },\n    async fetchPosts() {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const username = this.$route.params.username;\n        const res = await apiClient.get(`/posts/user/liked/${username}?page=${this.page}&limit=${this.postsPerPage}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.posts = res.data.posts;\n        this.page = res.data.page;\n        this.totalPosts = res.data.totalPosts;\n        this.totalPages = parseInt(res.data.totalPages, 10);\n        console.log(totalPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"names":["apiClient","pagination_component","LikeComponent","components","props","data","posts","page","totalPages","userData","totalPosts","postsPerPage","methods","onPageChange","n","fetchPosts","token","localStorage","getItem","username","$route","params","res","get","headers","Authorization","parseInt","console","log","error","mounted"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\likesprofile_component.vue"],"sourcesContent":["<template>\r\n  <!-- Toolbar-->\r\n  <div class=\"container d-flex justify-content-start align-items-center mb-4\">\r\n    <h2 class=\"h3 mb-0\">Favoritos</h2>\r\n  </div>\r\n\r\n  <!-- grid books -->\r\n  <div v-if=\"posts.length > 0\" class=\"container mb-2 mb-md-4 library-grid py-3\">\r\n    <article class=\"library-item\" v-for=\"post in posts\" :key=\"post.id\">\r\n      <div class=\"card\">\r\n        <LikeComponent :postId=\"post.id\" customClass=\"btn-wishlist btn-sm position-absolute\" :customStyle=\"{\r\n          top: '0.5rem',\r\n          right: '0.5rem',\r\n          zIndex: 2,\r\n          background: 'rgba(255, 255, 255, 0.7)',\r\n          borderRadius: '50%',\r\n        }\" />\r\n\r\n        <div style=\"position: relative\">\r\n          <RouterLink class=\"blog-entry-thumb\" :to=\"`/posts/${post.id}`\">\r\n            <img class=\"card-img-top\" :src=\"post.image\" alt=\"Post\" />\r\n          </RouterLink>\r\n          <div v-if=\"isCurrentUser\" class=\"position-absolute\"\r\n            style=\"right: 10px; bottom: 10px; display: flex; gap: 8px\">\r\n            <button class=\"btn btn-warning btn-sm d-flex align-items-center\" @click=\"editPost(post)\" title=\"Editar\">\r\n              <i class=\"ci-edit\"></i>\r\n            </button>\r\n            <button class=\"btn btn-danger btn-sm d-flex align-items-center\" @click=\"deletePost(post)\" title=\"Eliminar\">\r\n              <i class=\"ci-trash\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h2 class=\"h6 blog-entry-title\">\r\n            <RouterLink :to=\"`/posts/${post.id}`\">\r\n              {{ post.title }}\r\n            </RouterLink>\r\n          </h2>\r\n          <a class=\"btn-tag me-2 mb-2\" :href=\"`/category/${post.category_id}`\">{{ post.category_name }}</a>\r\n        </div>\r\n        <div class=\"card-footer d-flex align-items-center fs-xs\">\r\n          {{\r\n            new Date(post.created_at).toLocaleString(\"es-ES\", {\r\n              month: \"short\",\r\n              day: \"2-digit\",\r\n              year: \"numeric\",\r\n            })\r\n          }}\r\n\r\n          <div class=\"ms-auto text-nowrap\">\r\n            <a class=\"blog-entry-meta-link text-nowrap\">\r\n              <i class=\"ci-eye\"></i>{{ post.views }}\r\n            </a>\r\n            <span class=\"blog-entry-meta-divider mx-2\"></span>\r\n            <a class=\"blog-entry-meta-link text-nowrap\">\r\n              <i class=\"ci-heart\"></i>{{ post.total_likes }}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  </div>\r\n  <div v-else>\r\n    <p class=\"text-center mt-4\">No hay publicaciones para mostrar.</p>\r\n  </div>\r\n  <!-- Pagination-->\r\n  <pagination_component v-model=\"page\" v-if=\"posts.length > 0\" :totalPages=\"totalPages\"\r\n    @update:modelValue=\"onPageChange\" />\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport pagination_component from \"@/components/pagination_component.vue\";\r\nimport LikeComponent from \"@/components/like_component.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    pagination_component,\r\n    LikeComponent,\r\n  },\r\n  props: {\r\n    // postId: {\r\n    //   type: String,\r\n    //   required: true,\r\n    // },\r\n    // customClass: {\r\n    //   type: String,\r\n    //   default: \"\",\r\n    // },\r\n    // customStyle: {\r\n    //   type: Object,\r\n    //   default: () => ({}),\r\n    // },\r\n  },\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      page: 1,\r\n      totalPages: 0,\r\n      userData: {},\r\n      totalPosts: 0,\r\n      postsPerPage: 6,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    onPageChange(n) {\r\n      this.page = n;\r\n      this.fetchPosts();\r\n    },\r\n    async fetchPosts() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n\r\n        const username = this.$route.params.username;\r\n\r\n        const res = await apiClient.get(\r\n          `/posts/user/liked/${username}?page=${this.page}&limit=${this.postsPerPage}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        this.posts = res.data.posts;\r\n        this.page = res.data.page;\r\n        this.totalPosts = res.data.totalPosts;\r\n        this.totalPages = parseInt(res.data.totalPages, 10)\r\n        console.log(totalPosts);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    },\r\n\r\n  },\r\n  mounted() {\r\n    this.fetchPosts();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAuEA,OAAOA,SAAQ,MAAO,uBAAuB;AAC7C,OAAOC,oBAAmB,MAAO,uCAAuC;AACxE,OAAOC,aAAY,MAAO,iCAAiC;AAE3D,eAAe;EACbC,UAAU,EAAE;IACVF,oBAAoB;IACpBC;EACF,CAAC;EACDE,KAAK,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE,CAAC;MACbC,QAAQ,EAAE,CAAC,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,YAAYA,CAACC,CAAC,EAAE;MACd,IAAI,CAACP,IAAG,GAAIO,CAAC;MACb,IAAI,CAACC,UAAU,CAAC,CAAC;IACnB,CAAC;IACD,MAAMA,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAE/C,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAQ;QAE5C,MAAMG,GAAE,GAAI,MAAMtB,SAAS,CAACuB,GAAG,CAC7B,qBAAqBJ,QAAQ,SAAS,IAAI,CAACZ,IAAI,UAAU,IAAI,CAACI,YAAY,EAAE,EAC5E;UACEa,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUT,KAAK;UAChC;QACF,CACF,CAAC;QACD,IAAI,CAACV,KAAI,GAAIgB,GAAG,CAACjB,IAAI,CAACC,KAAK;QAC3B,IAAI,CAACC,IAAG,GAAIe,GAAG,CAACjB,IAAI,CAACE,IAAI;QACzB,IAAI,CAACG,UAAS,GAAIY,GAAG,CAACjB,IAAI,CAACK,UAAU;QACrC,IAAI,CAACF,UAAS,GAAIkB,QAAQ,CAACJ,GAAG,CAACjB,IAAI,CAACG,UAAU,EAAE,EAAE;QAClDmB,OAAO,CAACC,GAAG,CAAClB,UAAU,CAAC;MACzB,EAAE,OAAOmB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EAEF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}