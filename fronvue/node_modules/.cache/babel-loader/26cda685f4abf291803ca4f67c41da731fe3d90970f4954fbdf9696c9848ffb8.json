{"ast":null,"code":"import apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: {\n        name: '',\n        email: '',\n        birthdate: '',\n        gender: '',\n        description: ''\n      },\n      username: this.$route.params.username // Obtener el nombre de usuario desde la URL\n    };\n  },\n  async mounted() {\n    console.log(\"Username:\", this.username);\n    this.fetchProfileData(); // Llama a la función para obtener los datos del perfil al cargar el componente\n  },\n  methods: {\n    async fetchProfileData() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          const response = await apiClient.get(`/profile/${this.username}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.profileData = response.data.msg;\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      }\n    },\n    async updateProfile() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          await apiClient.put('/profile', this.profileData, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          alert('Perfil actualizado exitosamente');\n          // Volver a obtener los datos del perfil actualizados desde la base de datos\n          this.fetchProfileData();\n        } catch (error) {\n          console.error('Error updating profile:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","name","email","birthdate","gender","description","username","$route","params","mounted","console","log","fetchProfileData","methods","token","localStorage","getItem","response","get","headers","Authorization","msg","error","updateProfile","put","alert"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\profile_component.vue"],"sourcesContent":["<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        email: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: ''\r\n      },\r\n      username: this.$route.params.username // Obtener el nombre de usuario desde la URL\r\n    }\r\n  },\r\n  async mounted() {\r\n    console.log(\"Username:\", this.username); \r\n    this.fetchProfileData(); // Llama a la función para obtener los datos del perfil al cargar el componente\r\n  },\r\n  methods: {\r\n    async fetchProfileData() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          const response = await apiClient.get(`/profile/${this.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.profileData = response.data.msg;\r\n        } catch (error) {\r\n          console.error(\"Error fetching profile:\", error);\r\n        }\r\n      }\r\n    },\r\n    async updateProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          await apiClient.put('/profile', this.profileData, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          alert('Perfil actualizado exitosamente');\r\n          // Volver a obtener los datos del perfil actualizados desde la base de datos\r\n          this.fetchProfileData();\r\n        } catch (error) {\r\n          console.error('Error updating profile:', error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AACA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE;MACf,CAAC;MACDC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAO,CAAE;IACxC;EACF,CAAC;EACD,MAAMG,OAAOA,CAAA,EAAG;IACdC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACL,QAAQ,CAAC;IACvC,IAAI,CAACM,gBAAgB,CAAC,CAAC,EAAE;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAO,GAAI,MAAMnB,SAAS,CAACoB,GAAG,CAAC,YAAY,IAAI,CAACZ,QAAQ,EAAE,EAAE;YAChEa,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUN,KAAK;YAChC;UACF,CAAC,CAAC;UACF,IAAI,CAACd,WAAU,GAAIiB,QAAQ,CAAClB,IAAI,CAACsB,GAAG;QACtC,EAAE,OAAOC,KAAK,EAAE;UACdZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF,CAAC;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB,MAAMT,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMhB,SAAS,CAAC0B,GAAG,CAAC,UAAU,EAAE,IAAI,CAACxB,WAAW,EAAE;YAChDmB,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUN,KAAK;YAChC;UACF,CAAC,CAAC;UACFW,KAAK,CAAC,iCAAiC,CAAC;UACxC;UACA,IAAI,CAACb,gBAAgB,CAAC,CAAC;QACzB,EAAE,OAAOU,KAAK,EAAE;UACdZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}