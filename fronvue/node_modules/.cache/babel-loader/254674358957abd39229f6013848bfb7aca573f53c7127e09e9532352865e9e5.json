{"ast":null,"code":"import apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: {\n        name: '',\n        email: '',\n        birthdate: '',\n        gender: '',\n        description: ''\n      },\n      username: this.$route.params.username // Obtener el nombre de usuario desde la URL\n    };\n  },\n  async mounted() {\n    await this.loadProfile(); // Cargar los datos del perfil cuando se monta el componente\n  },\n  methods: {\n    // Cargar el perfil\n    async loadProfile() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          const response = await apiClient.get(`/profile/${this.username}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.profileData = response.data.msg; // Actualizar los datos del perfil\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      }\n    },\n    // Actualizar el perfil y recargar los datos\n    async updateProfile() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          await apiClient.put(`/profile/${this.username}`, this.profileData, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          alert('Perfil actualizado exitosamente');\n          await this.loadProfile(); // Volver a cargar el perfil después de la actualización\n        } catch (error) {\n          console.error('Error updating profile:', error);\n        }\n      }\n    },\n    // Formatear fecha\n    formatDate(date) {\n      if (!date) return '';\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(date).toLocaleDateString('es-ES', options);\n    }\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","name","email","birthdate","gender","description","username","$route","params","mounted","loadProfile","methods","token","localStorage","getItem","response","get","headers","Authorization","msg","error","console","updateProfile","put","alert","formatDate","date","options","year","month","day","Date","toLocaleDateString"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\profile_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card shadow-lg p-4\">\r\n          <div class=\"card-body text-center\">\r\n            <h2 class=\"mb-4\">Información del perfil</h2>\r\n            <div class=\"mb-3\">\r\n              <img src=\"https://via.placeholder.com/150\" class=\"rounded-circle img-thumbnail\" alt=\"Profile Picture\"/>\r\n            </div>\r\n            <p><strong>Nombre:</strong> {{ profileData.name }}</p>\r\n            <p><strong>Fecha de Nacimiento:</strong> {{ formatDate(profileData.birthdate) }}</p>\r\n            <p><strong>Género:</strong> {{ profileData.gender }}</p>\r\n            <p><strong>Descripción:</strong> {{ profileData.description }}</p>\r\n            <router-link :to=\"`/profile/${username}/edit-account`\" class=\"btn btn-primary w-100\">\r\n              Editar perfil\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        email: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: ''\r\n      },\r\n      username: this.$route.params.username // Obtener el nombre de usuario desde la URL\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.loadProfile();  // Cargar los datos del perfil cuando se monta el componente\r\n  },\r\n  methods: {\r\n    // Cargar el perfil\r\n    async loadProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          const response = await apiClient.get(`/profile/${this.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.profileData = response.data.msg; // Actualizar los datos del perfil\r\n        } catch (error) {\r\n          console.error(\"Error fetching profile:\", error);\r\n        }\r\n      }\r\n    },\r\n    \r\n    // Actualizar el perfil y recargar los datos\r\n    async updateProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          await apiClient.put(`/profile/${this.username}`, this.profileData, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          alert('Perfil actualizado exitosamente');\r\n          await this.loadProfile(); // Volver a cargar el perfil después de la actualización\r\n        } catch (error) {\r\n          console.error('Error updating profile:', error);\r\n        }\r\n      }\r\n    },\r\n    \r\n    // Formatear fecha\r\n    formatDate(date) {\r\n      if (!date) return '';\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return new Date(date).toLocaleDateString('es-ES', options);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAyBA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE;MACf,CAAC;MACDC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,QAAO,CAAE;IACxC;EACF,CAAC;EACD,MAAMG,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC,EAAG;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,WAAWA,CAAA,EAAG;MAClB,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAO,GAAI,MAAMjB,SAAS,CAACkB,GAAG,CAAC,YAAY,IAAI,CAACV,QAAQ,EAAE,EAAE;YAChEW,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUN,KAAK;YAChC;UACF,CAAC,CAAC;UACF,IAAI,CAACZ,WAAU,GAAIe,QAAQ,CAAChB,IAAI,CAACoB,GAAG,EAAE;QACxC,EAAE,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF,CAAC;IAED;IACA,MAAME,aAAaA,CAAA,EAAG;MACpB,MAAMV,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMd,SAAS,CAACyB,GAAG,CAAC,YAAY,IAAI,CAACjB,QAAQ,EAAE,EAAE,IAAI,CAACN,WAAW,EAAE;YACjEiB,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUN,KAAK;YAChC;UACF,CAAC,CAAC;UACFY,KAAK,CAAC,iCAAiC,CAAC;UACxC,MAAM,IAAI,CAACd,WAAW,CAAC,CAAC,EAAE;QAC5B,EAAE,OAAOU,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF,CAAC;IAED;IACAK,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,MAAMC,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAU,CAAC;MAClE,OAAO,IAAIC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC;IAC5D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}