{"ast":null,"code":"import apiClient from \"@/services/ApiService\";\nexport default {\n  props: {\n    userId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isFollowing: null,\n      followerCount: 0,\n      followingCount: 0\n    };\n  },\n  watch: {\n    userId: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.fetchData();\n        }\n      }\n    }\n  },\n  methods: {\n    async fetchData() {\n      try {\n        await this.fetchFollowerCount();\n        await this.fetchFollowingCount();\n        await this.checkIfFollowing();\n        //console.log(\"Datos actualizados para userId:\", this.userId);\n      } catch (error) {\n        console.error(\"Error al actualizar datos:\", error);\n      }\n    },\n    async fetchFollowerCount() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        const response = await apiClient.get(`/follow/followers/count/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.followerCount = response.data.followerCount;\n      } catch (error) {\n        console.error(\"Error al obtener la cantidad de seguidores:\", error);\n      }\n    },\n    async fetchFollowingCount() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        const response = await apiClient.get(`/follow/following/count/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.followingCount = response.data.followingCount;\n      } catch (error) {\n        console.error(\"Error al obtener la cantidad de seguidos:\", error);\n      }\n    },\n    async toggleFollow() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      if (!this.userId) {\n        console.error(\"ID de usuario no definido\");\n        return;\n      }\n      try {\n        if (this.isFollowing) {\n          await apiClient.delete(`/follow/${this.userId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            data: {\n              followed_id: this.userId\n            }\n          });\n          this.followerCount--;\n          this.isFollowing = false;\n        } else {\n          const payload = {\n            followed_id: this.userId\n          };\n          await apiClient.post(`/follow`, payload, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.followerCount++;\n          this.isFollowing = true;\n        }\n        this.$emit(\"update-followers\", this.followerCount);\n      } catch (error) {\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\n        if (error.response && error.response.data) {\n          console.error(\"Detalles del error:\", error.response.data);\n        }\n      }\n    },\n    async checkIfFollowing() {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        console.error(\"Token de autenticación no encontrado\");\n        return;\n      }\n      try {\n        const response = await apiClient.get(`/follow/check/${this.userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.isFollowing = response.data.isFollowing;\n      } catch (error) {\n        console.error(\"Error al verificar el estado de seguimiento:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","userId","type","String","required","data","isFollowing","followerCount","followingCount","watch","immediate","handler","newVal","fetchData","methods","fetchFollowerCount","fetchFollowingCount","checkIfFollowing","error","console","token","localStorage","getItem","response","get","headers","Authorization","toggleFollow","delete","followed_id","payload","post","$emit"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\follow_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"follow-container\" v-if=\"isFollowing !== null\">\r\n    <button @click=\"toggleFollow\" :class=\"{ following: isFollowing }\">\r\n      <span>{{ isFollowing ? \"Siguiendo\" : \"Seguir\" }}</span>\r\n    </button>\r\n    <span>{{ followerCount }} seguidores</span>\r\n    <span>{{ followingCount }} seguidos</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\n\r\nexport default {\r\n  props: {\r\n    userId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isFollowing: null,\r\n      followerCount: 0,\r\n      followingCount: 0,\r\n    };\r\n  },\r\n  watch: {\r\n    userId: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.fetchData();\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        await this.fetchFollowerCount();\r\n        await this.fetchFollowingCount();\r\n        await this.checkIfFollowing();\r\n        //console.log(\"Datos actualizados para userId:\", this.userId);\r\n      } catch (error) {\r\n        console.error(\"Error al actualizar datos:\", error);\r\n      }\r\n    },\r\n    async fetchFollowerCount() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await apiClient.get(`/follow/followers/count/${this.userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.followerCount = response.data.followerCount;\r\n      } catch (error) {\r\n        console.error(\"Error al obtener la cantidad de seguidores:\", error);\r\n      }\r\n    },\r\n    async fetchFollowingCount() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await apiClient.get(`/follow/following/count/${this.userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.followingCount = response.data.followingCount;\r\n      } catch (error) {\r\n        console.error(\"Error al obtener la cantidad de seguidos:\", error);\r\n      }\r\n    },\r\n    async toggleFollow() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n\r\n      if (!this.userId) {\r\n        console.error(\"ID de usuario no definido\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        if (this.isFollowing) {\r\n          await apiClient.delete(`/follow/${this.userId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            data: { followed_id: this.userId },\r\n          });\r\n          this.followerCount--;\r\n          this.isFollowing = false;\r\n        } else {\r\n          const payload = { followed_id: this.userId };\r\n          await apiClient.post(\r\n            `/follow`,\r\n            payload,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          this.followerCount++;\r\n          this.isFollowing = true;\r\n        }\r\n        this.$emit(\"update-followers\", this.followerCount);\r\n      } catch (error) {\r\n        console.error(\"Error al cambiar el estado de seguimiento:\", error);\r\n        if (error.response && error.response.data) {\r\n          console.error(\"Detalles del error:\", error.response.data);\r\n        }\r\n      }\r\n    },\r\n    async checkIfFollowing() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        console.error(\"Token de autenticación no encontrado\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await apiClient.get(`/follow/check/${this.userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        this.isFollowing = response.data.isFollowing;\r\n      } catch (error) {\r\n        console.error(\"Error al verificar el estado de seguimiento:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.follow-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\nbutton {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1em;\r\n  color: #007bff;\r\n  transition: color 0.3s, background-color 0.3s;\r\n  /* Animación suave */\r\n}\r\n\r\nbutton.following {\r\n  color: white;\r\n  background-color: green;\r\n  /* Botón con fondo verde */\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\nspan {\r\n  margin-left: 0.5em;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}