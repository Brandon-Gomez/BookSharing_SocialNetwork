{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.viewPdf && $options.viewPdf(...args)),\n    class: \"btn btn-secondary btn-sm\"\n  }, _cache[1] || (_cache[1] = [_createTextVNode(\" Ver PDF \"), _createElementVNode(\"i\", {\n    class: \"\"\n  }, null, -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["_createElementBlock","onClick","_cache","args","$options","viewPdf","class","_createTextVNode","_createElementVNode"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\pdfpreview_component.vue"],"sourcesContent":["<template>\r\n  <button @click=\"viewPdf\" class=\"btn btn-secondary btn-sm\">\r\n    Ver PDF <i class=\"\"></i>\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\"; // Aseg√∫rate de tener este helper configurado\r\n\r\nexport default {\r\n  props: {\r\n    pdfUrl: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    postId: { // <-- Nuevo prop\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    async viewPdf() {\r\n      // Incrementa las vistas antes de mostrar el PDF\r\n      try {\r\n        await apiClient.put(`/posts/${this.postId}/views`);\r\n      } catch (error) {\r\n        console.error(\"Error al incrementar vistas:\", error);\r\n      }\r\n      this.$router.push({\r\n        name: \"PdfPreview\",\r\n        query: { pdfUrl: this.pdfUrl }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEG,KAAK,EAAC;gCADjCC,gBAAA,CAC4D,WAChD,GAAAC,mBAAA,CAAgB;IAAbF,KAAK,EAAC;EAAE,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}