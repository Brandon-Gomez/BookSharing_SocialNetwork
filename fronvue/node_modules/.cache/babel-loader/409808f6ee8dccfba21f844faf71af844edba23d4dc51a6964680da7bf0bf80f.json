{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { loginUser, googleAuth } from '../services/useAuth';\nimport * as jwt from 'jwt-decode';\nexport default {\n  components: {\n    // Se registra el componente con el alias \"GoogleLogin\"\n  },\n  data() {\n    return {\n      loginEmail: '',\n      loginPassword: '',\n      userProfile: null\n    };\n  },\n  mounted() {\n    const token = localStorage.getItem('authToken');\n    const username = localStorage.getItem('username');\n    if (token && username) {\n      this.$router.push(`/profile/${username}`);\n    }\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        await loginUser({\n          email: this.loginEmail,\n          password: this.loginPassword,\n          router: this.$router\n        });\n      } catch (error) {\n        alert('Credenciales incorrectas');\n      }\n    },\n    callback(response) {\n      if (response?.credential) {\n        googleAuth({\n          credential: response.credential,\n          router: this.$router\n        });\n        // try {\n        //   const decoded = jwt.jwtDecode(response.credential);\n        //   this.userProfile = {\n        //     name: decoded.name,\n        //     email: decoded.email,\n        //     imageUrl: decoded.picture,\n        //   };\n        // } catch (error) {\n        //   console.error('Failed to decode JWT:', error);\n        // }\n      }\n    }\n  }\n};","map":{"version":3,"names":["loginUser","googleAuth","jwt","components","data","loginEmail","loginPassword","userProfile","mounted","token","localStorage","getItem","username","$router","push","methods","handleLogin","email","password","router","error","alert","callback","response","credential"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\login_component.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <main class=\"main\" id=\"top\">\r\n      <div class=\"container-fluid px-0\">\r\n        <div class=\"row vh-100 g-0\">\r\n          <div class=\"col-lg-6 position-relative d-none d-lg-block\"\r\n            :style=\"`background-image: url(${require('@/assets/bg-bib.jpg')}); background-size: cover; background-position: center;`\">\r\n            <div class=\"bg-holder\"></div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"row flex h-100 g-0 px-4 px-sm-0 align-items-center\">\r\n              <div class=\"col col-sm-6 col-lg-7 col-xl-6\" style=\"margin-inline:auto\">\r\n                <a class=\"d-flex flex-center text-decoration-none\">\r\n                  <div class=\"d-flex align-items-center fw-bolder fs-5 d-inline-block\">\r\n                    <img src=\"@/assets/LogoRM.png\" alt=\"phoenix\" width=\"150\">\r\n                  </div>\r\n                </a>\r\n                <div class=\"text-center mb-7\">\r\n                  <h3 class=\"text-1000\">Iniciar Sesión</h3>\r\n                  <p class=\"text-700\">Sigue donde lo dejaste</p>\r\n                </div>\r\n                <GoogleLogin :callback=\"callback\" />\r\n                <!-- Show user profile info after login -->\r\n                <div v-if=\"userProfile\">\r\n                  <h3>Welcome, {{ userProfile.name }}!</h3>\r\n                  <p>Email: {{ userProfile.email }}</p>\r\n                  <img :src=\"userProfile.imageUrl\" alt=\"Profile Picture\" width=\"100\" />\r\n                </div>\r\n                <form @submit.prevent=\"handleLogin\">\r\n                  <div class=\"mb-3 text-start\">\r\n                    <label class=\"form-label\" for=\"email\">Email</label>\r\n                    <input class=\"form-control\" id=\"email\" type=\"email\" placeholder=\"name@example.com\"\r\n                      v-model=\"loginEmail\">\r\n                  </div>\r\n\r\n                  <div class=\"mb-3 text-start\">\r\n                    <label class=\"form-label\" for=\"password\">Contraseña</label>\r\n                    <input class=\"form-control\" id=\"password\" type=\"password\" autocomplete=\"current-password\"\r\n                      placeholder=\"Contraseña\" v-model=\"loginPassword\">\r\n                  </div>\r\n\r\n                  <button class=\"btn btn-primary w-100 mb-3\">Iniciar sesión</button>\r\n                  <div class=\"text-center\">\r\n                    <a class=\"fs--1\" href=\"/register\">¿No tienes cuenta? Registrate</a>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { loginUser, googleAuth } from '../services/useAuth';\r\nimport * as jwt from 'jwt-decode';\r\n\r\nexport default {\r\n  components: {\r\n    // Se registra el componente con el alias \"GoogleLogin\"\r\n  },\r\n  data() {\r\n    return {\r\n      loginEmail: '',\r\n      loginPassword: '',\r\n      userProfile: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    const token = localStorage.getItem('authToken');\r\n    const username = localStorage.getItem('username');\r\n    if (token && username) {\r\n      this.$router.push(`/profile/${username}`);\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        await loginUser({\r\n          email: this.loginEmail,\r\n          password: this.loginPassword,\r\n          router: this.$router,\r\n        });\r\n      } catch (error) {\r\n        alert('Credenciales incorrectas');\r\n      }\r\n    },\r\n    callback(response) {\r\n      if (response?.credential) {\r\n         googleAuth({\r\n          credential: response.credential,\r\n          router: this.$router,\r\n        });\r\n        // try {\r\n        //   const decoded = jwt.jwtDecode(response.credential);\r\n        //   this.userProfile = {\r\n        //     name: decoded.name,\r\n        //     email: decoded.email,\r\n        //     imageUrl: decoded.picture,\r\n        //   };\r\n        // } catch (error) {\r\n        //   console.error('Failed to decode JWT:', error);\r\n        // }\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.flex-center {\r\n  -webkit-box-align: center !important;\r\n  -ms-flex-align: center !important;\r\n  align-items: center !important;\r\n  -webkit-box-pack: center !important;\r\n  -ms-flex-pack: center !important;\r\n  justify-content: center !important;\r\n}\r\n</style>"],"mappings":";AAwDA,SAASA,SAAS,EAAEC,UAAS,QAAS,qBAAqB;AAC3D,OAAO,KAAKC,GAAE,MAAO,YAAY;AAEjC,eAAe;EACbC,UAAU,EAAE;IACV;EAAA,CACD;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,QAAO,GAAIF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAIF,KAAI,IAAKG,QAAQ,EAAE;MACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAYF,QAAQ,EAAE,CAAC;IAC3C;EACF,CAAC;EACDG,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMhB,SAAS,CAAC;UACdiB,KAAK,EAAE,IAAI,CAACZ,UAAU;UACtBa,QAAQ,EAAE,IAAI,CAACZ,aAAa;UAC5Ba,MAAM,EAAE,IAAI,CAACN;QACf,CAAC,CAAC;MACJ,EAAE,OAAOO,KAAK,EAAE;QACdC,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC;IACDC,QAAQA,CAACC,QAAQ,EAAE;MACjB,IAAIA,QAAQ,EAAEC,UAAU,EAAE;QACvBvB,UAAU,CAAC;UACVuB,UAAU,EAAED,QAAQ,CAACC,UAAU;UAC/BL,MAAM,EAAE,IAAI,CAACN;QACf,CAAC,CAAC;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}