{"ast":null,"code":"import apiClient from \"@/services/ApiService\"; // Asegúrate de que ApiService esté configurado correctamente\n\nexport default {\n  props: {\n    userId: {\n      // Asegúrate de que este prop se pasa desde el componente padre\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isFollowing: false // Establecer si ya estás siguiendo al usuario\n    };\n  },\n  mounted() {\n    this.checkIfFollowing();\n  },\n  methods: {\n    async followUser() {\n      const token = localStorage.getItem(\"authToken\");\n      try {\n        const response = await apiClient.post(`/follow/`, {\n          followed_id: this.userId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 201) {\n          this.isFollowing = true;\n          this.$emit(\"update-followers\"); // Emitir un evento para actualizar la vista de seguidores\n        }\n      } catch (error) {\n        console.error(\"Error al seguir al usuario:\", error);\n      }\n    },\n    async unfollowUser() {\n      const token = localStorage.getItem(\"authToken\"); // Recupera el token de autenticación\n      try {\n        const response = await apiClient.delete(`/unfollow`,\n        // Ruta de dejar de seguir en el backend\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          data: {\n            followed_id: this.userId\n          }\n        });\n        if (response.status === 200) {\n          this.isFollowing = false;\n          this.$emit(\"update-followers\"); // Emitir un evento para actualizar la vista de seguidores\n        }\n      } catch (error) {\n        console.error(\"Error al dejar de seguir al usuario:\", error);\n      }\n    },\n    async checkIfFollowing() {\n      const token = localStorage.getItem(\"authToken\"); // Recupera el token de autenticación\n      try {\n        const response = await apiClient.get(`/follow/${this.userId}/is-following`,\n        // Ruta que deberías implementar en tu backend\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.isFollowing = response.data.isFollowing; // Si está siguiendo, actualiza el estado\n      } catch (error) {\n        console.error(\"Error al comprobar el estado de seguimiento:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","userId","type","Number","required","data","isFollowing","mounted","checkIfFollowing","methods","followUser","token","localStorage","getItem","response","post","followed_id","headers","Authorization","status","$emit","error","console","unfollowUser","delete","get"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\follow_component.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <button\r\n      v-if=\"!isFollowing\"\r\n      class=\"btn btn-primary\"\r\n      @click=\"followUser\"\r\n    >\r\n      Seguir\r\n    </button>\r\n    <button\r\n      v-if=\"isFollowing\"\r\n      class=\"btn btn-secondary\"\r\n      @click=\"unfollowUser\"\r\n    >\r\n      Dejar de seguir\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";  // Asegúrate de que ApiService esté configurado correctamente\r\n\r\nexport default {\r\n  props: {\r\n    userId: {   // Asegúrate de que este prop se pasa desde el componente padre\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isFollowing: false,  // Establecer si ya estás siguiendo al usuario\r\n    };\r\n  },\r\n  mounted() {\r\n    this.checkIfFollowing();\r\n  },\r\n  methods: {\r\n    async followUser() {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      try {\r\n        const response = await apiClient.post(`/follow/`, { followed_id: this.userId },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        if (response.status === 201) {\r\n          this.isFollowing = true;\r\n          this.$emit(\"update-followers\");  // Emitir un evento para actualizar la vista de seguidores\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al seguir al usuario:\", error);\r\n      }\r\n    },\r\n    async unfollowUser() {\r\n      const token = localStorage.getItem(\"authToken\");  // Recupera el token de autenticación\r\n      try {\r\n        const response = await apiClient.delete(\r\n          `/unfollow`,  // Ruta de dejar de seguir en el backend\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            data: { followed_id: this.userId },\r\n          }\r\n        );\r\n        if (response.status === 200) {\r\n          this.isFollowing = false;\r\n          this.$emit(\"update-followers\");  // Emitir un evento para actualizar la vista de seguidores\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al dejar de seguir al usuario:\", error);\r\n      }\r\n    },\r\n    async checkIfFollowing() {\r\n      const token = localStorage.getItem(\"authToken\");  // Recupera el token de autenticación\r\n      try {\r\n        const response = await apiClient.get(\r\n          `/follow/${this.userId}/is-following`,  // Ruta que deberías implementar en tu backend\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        this.isFollowing = response.data.isFollowing;  // Si está siguiendo, actualiza el estado\r\n      } catch (error) {\r\n        console.error(\"Error al comprobar el estado de seguimiento:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.btn {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAoBA,OAAOA,SAAQ,MAAO,uBAAuB,EAAG;;AAEhD,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;MAAI;MACVC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,KAAK,CAAG;IACvB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,SAAS,CAACgB,IAAI,CAAC,UAAU,EAAE;UAAEC,WAAW,EAAE,IAAI,CAACf;QAAO,CAAC,EAC5E;UACEgB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CACF,CAAC;QACD,IAAIG,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACb,WAAU,GAAI,IAAI;UACvB,IAAI,CAACc,KAAK,CAAC,kBAAkB,CAAC,EAAG;QACnC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACnB,MAAMZ,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAG;MAClD,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,SAAS,CAACyB,MAAM,CACrC,WAAW;QAAG;QACd;UACEP,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC,CAAC;UACDN,IAAI,EAAE;YAAEW,WAAW,EAAE,IAAI,CAACf;UAAO;QACnC,CACF,CAAC;QACD,IAAIa,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACb,WAAU,GAAI,KAAK;UACxB,IAAI,CAACc,KAAK,CAAC,kBAAkB,CAAC,EAAG;QACnC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC;IACD,MAAMb,gBAAgBA,CAAA,EAAG;MACvB,MAAMG,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAG;MAClD,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,SAAS,CAAC0B,GAAG,CAClC,WAAW,IAAI,CAACxB,MAAM,eAAe;QAAG;QACxC;UACEgB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CACF,CAAC;QACD,IAAI,CAACL,WAAU,GAAIQ,QAAQ,CAACT,IAAI,CAACC,WAAW,EAAG;MACjD,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}