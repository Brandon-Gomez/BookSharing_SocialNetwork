{"ast":null,"code":"import apiClient from \"@/services/ApiService\";\nimport { ref } from \"vue\";\nimport jwtDecode from \"jwt-decode\";\nexport default {\n  __name: 'btn-google-auth_component',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // import { googleAuthCodeLogin } from \"vue3-google-login\"\n    const userProfile = ref(null);\n    const callback = response => {\n      console.log(\"Handle the response\", response);\n      // Extraer el token JWT enviado en la respuesta\n      const jwtToken = response.credential;\n\n      // Decodificar el token JWT para obtener el perfil del usuario\n      const decodedToken = jwtDecode(jwtToken);\n      userProfile.value = decodedToken;\n\n      // Enviar el token al backend para validación y procesamiento\n      apiClient.post(\"/auth/google\", {\n        token: jwtToken\n      }).then(res => {\n        console.log(\"Respuesta del backend\", res.data);\n      }).catch(err => {\n        console.error(\"Error al enviar el token a backend\", err);\n      });\n    };\n\n    // const login = () => {\n    //   googleAuthCodeLogin().then((response) => {\n    //     console.log(\"Handle the response\", response)\n    //     // Extraer el código enviado en la respuesta\n    //     const authCode = response.code;\n\n    //     // Enviar el código al backend para validación y procesamiento\n    //     apiClient.post(\"/auth/google\", { code: authCode })\n    //       .then(res => {\n    //         console.log(\"Respuesta del backend\", res.data)\n    //       })\n    //       .catch(err => {\n    //         console.error(\"Error al enviar el código a backend\", err)\n    //       })\n    //   })\n    // }\n\n    const __returned__ = {\n      userProfile,\n      callback,\n      get apiClient() {\n        return apiClient;\n      },\n      ref,\n      get jwtDecode() {\n        return jwtDecode;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["apiClient","ref","jwtDecode","userProfile","callback","response","console","log","jwtToken","credential","decodedToken","value","post","token","then","res","data","catch","err","error"],"sources":["D:/Downloads/BookSharing_SocialNetwork/fronvue/src/components/btn-google-auth_component.vue"],"sourcesContent":["<script setup>\r\n// import { googleAuthCodeLogin } from \"vue3-google-login\"\r\nimport apiClient from \"@/services/ApiService\" \r\nimport { ref } from \"vue\"\r\nimport jwtDecode from \"jwt-decode\"\r\n\r\nconst userProfile = ref(null)\r\n\r\nconst callback = (response) => {\r\n  console.log(\"Handle the response\", response)\r\n  // Extraer el token JWT enviado en la respuesta\r\n  const jwtToken = response.credential;\r\n  \r\n  // Decodificar el token JWT para obtener el perfil del usuario\r\n  const decodedToken = jwtDecode(jwtToken);\r\n  userProfile.value = decodedToken;\r\n\r\n  // Enviar el token al backend para validación y procesamiento\r\n  apiClient.post(\"/auth/google\", { token: jwtToken })\r\n    .then(res => {\r\n      console.log(\"Respuesta del backend\", res.data)\r\n    })\r\n    .catch(err => {\r\n      console.error(\"Error al enviar el token a backend\", err)\r\n    })\r\n}\r\n\r\n// const login = () => {\r\n//   googleAuthCodeLogin().then((response) => {\r\n//     console.log(\"Handle the response\", response)\r\n//     // Extraer el código enviado en la respuesta\r\n//     const authCode = response.code;\r\n    \r\n//     // Enviar el código al backend para validación y procesamiento\r\n//     apiClient.post(\"/auth/google\", { code: authCode })\r\n//       .then(res => {\r\n//         console.log(\"Respuesta del backend\", res.data)\r\n//       })\r\n//       .catch(err => {\r\n//         console.error(\"Error al enviar el código a backend\", err)\r\n//       })\r\n//   })\r\n// }\r\n</script>\r\n\r\n<template>\r\n  <button :callback=\"callback\">Login Using Google</button>\r\n</template>"],"mappings":"AAEA,OAAOA,SAAS,MAAM,uBAAuB;AAC7C,SAASC,GAAG,QAAQ,KAAK;AACzB,OAAOC,SAAS,MAAM,YAAY;;;;;;;;IAHlC;IAKA,MAAMC,WAAW,GAAGF,GAAG,CAAC,IAAI,CAAC;IAE7B,MAAMG,QAAQ,GAAIC,QAAQ,IAAK;MAC7BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;MAC5C;MACA,MAAMG,QAAQ,GAAGH,QAAQ,CAACI,UAAU;;MAEpC;MACA,MAAMC,YAAY,GAAGR,SAAS,CAACM,QAAQ,CAAC;MACxCL,WAAW,CAACQ,KAAK,GAAGD,YAAY;;MAEhC;MACAV,SAAS,CAACY,IAAI,CAAC,cAAc,EAAE;QAAEC,KAAK,EAAEL;MAAS,CAAC,CAAC,CAChDM,IAAI,CAACC,GAAG,IAAI;QACXT,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEQ,GAAG,CAACC,IAAI,CAAC;MAChD,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZZ,OAAO,CAACa,KAAK,CAAC,oCAAoC,EAAED,GAAG,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;;IAED;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}