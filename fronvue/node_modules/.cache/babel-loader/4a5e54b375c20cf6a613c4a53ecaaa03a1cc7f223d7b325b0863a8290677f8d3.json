{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  props: {\n    postId: String\n  },\n  data() {\n    return {\n      post: {\n        title: '',\n        description: ''\n      },\n      form: {\n        photo: []\n      },\n      profilePhoto: []\n    };\n  },\n  mounted() {\n    this.fetchPost();\n  },\n  methods: {\n    async fetchPost() {\n      try {\n        const response = await apiClient.get(`/posts/${this.postId}`);\n        this.post = response.data;\n        console.log(\"DATA OBTENIDA:\", response.data);\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    },\n    async updatePost() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          // Actualiza los datos del post\n          const response = await apiClient.put(`/posts/${this.postId}`, this.post, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Post updated successfully:', response.data);\n\n          // Si se subió una nueva imagen, manejar la carga\n          if (this.form.photo.length > 0) {\n            const formData = new FormData();\n            formData.append('photo', this.form.photo[0]);\n            const responsePhoto = await apiClient.post(`/upload/post`, formData, {\n              headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            console.log('Post photo updated successfully:', responsePhoto.data);\n          }\n          this.$router.push(`/profile/${this.$route.params.username}`).then(() => {\n            window.location.reload();\n          });\n        } catch (error) {\n          console.error('Error updating post:', error);\n        }\n      }\n    },\n    handleFileUpload(event) {\n      const files = Array.from(event.target.files);\n      this.form.photo = files; // Almacena las imágenes seleccionadas\n      this.profilePhoto = files.map(file => ({\n        name: file.name,\n        previewURL: URL.createObjectURL(file)\n      }));\n    },\n    async deletePost() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          await apiClient.delete(`/posts/${this.postId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log('Post deleted successfully');\n          this.$router.push(`/profile/${this.$route.params.username}`);\n        } catch (error) {\n          console.error('Error deleting post:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","postId","String","data","post","title","description","form","photo","profilePhoto","mounted","fetchPost","methods","response","get","console","log","error","updatePost","token","localStorage","getItem","put","headers","Authorization","length","formData","FormData","append","responsePhoto","$router","push","$route","params","username","then","window","location","reload","handleFileUpload","event","files","Array","from","target","map","file","name","previewURL","URL","createObjectURL","deletePost","delete"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editpost_component.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"post\" class=\"edit-post-container container my-4 py-4\">\r\n    <h2>Editar Publicación</h2>\r\n    <form @submit.prevent=\"updatePost\">\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"title\">Título</label>\r\n        <input type=\"text\" id=\"title\" v-model=\"post.title\" class=\"form-control\" />\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"description\">Descripción</label>\r\n        <textarea id=\"description\" v-model=\"post.description\" class=\"form-control\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group my-2\">\r\n        <label for=\"photo\">Imagen</label>\r\n        <input type=\"file\" id=\"photo\" @change=\"handleFileUpload\" class=\"form-control\" />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n      <button @click=\"deletePost\" class=\"btn btn-danger ml-2\">Eliminar Publicación</button>\r\n    </form>\r\n    \r\n    <div v-if=\"profilePhoto.length > 0\" class=\"image-preview\">\r\n      <h4>Vista Previa de la Imagen:</h4>\r\n      <img v-for=\"image in profilePhoto\" :src=\"image.previewURL\" :key=\"image.name\" class=\"img-thumbnail\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  props: {\r\n    postId: String,\r\n  },\r\n  data() {\r\n    return {\r\n      post: {\r\n        title: '',\r\n        description: '',\r\n      },\r\n      form: {\r\n        photo: [],\r\n      },\r\n      profilePhoto: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n  methods: {\r\n    async fetchPost() {\r\n      try {\r\n        const response = await apiClient.get(`/posts/${this.postId}`);\r\n        this.post = response.data;\r\n        console.log(\"DATA OBTENIDA:\", response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching post:', error);\r\n      }\r\n    },\r\n    async updatePost() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          // Actualiza los datos del post\r\n          const response = await apiClient.put(`/posts/${this.postId}`, this.post, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          console.log('Post updated successfully:', response.data);\r\n          \r\n          // Si se subió una nueva imagen, manejar la carga\r\n          if (this.form.photo.length > 0) {\r\n            const formData = new FormData();\r\n            formData.append('photo', this.form.photo[0]);\r\n            const responsePhoto = await apiClient.post(`/upload/post`, formData, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'multipart/form-data',\r\n              },\r\n            });\r\n            console.log('Post photo updated successfully:', responsePhoto.data);\r\n          }\r\n          \r\n          this.$router.push(`/profile/${this.$route.params.username}`).then(() => {\r\n            window.location.reload();\r\n          });\r\n\r\n        } catch (error) {\r\n          console.error('Error updating post:', error);\r\n        }\r\n      }\r\n    },\r\n    handleFileUpload(event) {\r\n      const files = Array.from(event.target.files);\r\n      this.form.photo = files; // Almacena las imágenes seleccionadas\r\n      this.profilePhoto = files.map((file) => ({\r\n        name: file.name,\r\n        previewURL: URL.createObjectURL(file),\r\n      }));\r\n    },\r\n    async deletePost() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          await apiClient.delete(`/posts/${this.postId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          console.log('Post deleted successfully');\r\n          this.$router.push(`/profile/${this.$route.params.username}`);\r\n        } catch (error) {\r\n          console.error('Error deleting post:', error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n  \r\n  <style scoped>\r\n  .edit-post-container {\r\n    background-color: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}