{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  props: {\n    postId: String\n  },\n  data() {\n    return {\n      newPost: {\n        title: '',\n        description: ''\n      }\n      // newImageFile: null,\n      // newPdfFile: null,\n    };\n  },\n  mounted() {\n    this.fetchPost();\n  },\n  methods: {\n    async fetchPost() {\n      try {\n        const response = await apiClient.get(`/posts/${this.postId}`);\n        this.newPost = response.data;\n        console.log(\"DATA OBTENIDA:\", response.data);\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    },\n    // handleImageUpload(event) {\n    //   this.newImageFile = event.target.files[0];\n    // },\n    // handlePdfUpload(event) {\n    //   this.newPdfFile = event.target.files[0];\n    // },\n    async updatePost() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        const formData = new FormData();\n        formData.append('title', this.newPost.title);\n        formData.append('description', this.newPost.description);\n\n        // Agrega los nuevos archivos solo si existen\n        // if (this.newImageFile) formData.append('images', this.newImageFile);\n        // if (this.newPdfFile) formData.append('pdf_file', this.newPdfFile);\n\n        // Log de datos que se enviarán\n        for (const [key, value] of formData.entries()) {\n          console.log(`${key}:`, value);\n        }\n        try {\n          const response = await apiClient.put(`/posts/${this.postId}`, formData, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log(response.data);\n\n          // Redirecciona después de la actualización exitosa\n          this.$router.push(`/profile/${this.$route.params.username}`);\n        } catch (error) {\n          console.error('Error updating post:', error);\n        }\n      }\n    },\n    async deletePost() {\n      try {\n        await apiClient.delete(`/posts/${this.postId}`);\n        this.$router.push(`/profile/${this.$route.params.username}`);\n      } catch (error) {\n        console.error('Error deleting post:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","props","postId","String","data","newPost","title","description","mounted","fetchPost","methods","response","get","console","log","error","updatePost","token","localStorage","getItem","formData","FormData","append","key","value","entries","put","headers","Authorization","$router","push","$route","params","username","deletePost","delete"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\editpost_component.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"newPost\" class=\"edit-post-container container my-4 py-4\">\r\n      <h2>Editar Publicación</h2>\r\n      <form @submit.prevent=\"updatePost\">\r\n        <div class=\"form-group my-2\">\r\n          <label for=\"title\">Título</label>\r\n          <input type=\"text\" id=\"title\" v-model=\"newPost.title\" class=\"form-control\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group my-2\">\r\n          <label for=\"description\">Descripción</label>\r\n          <textarea id=\"description\" v-model=\"newPost.description\" class=\"form-control\"></textarea>\r\n        </div>\r\n  \r\n        <!-- <div class=\"form-group my-2\">\r\n          <label for=\"image\">Imagen</label>\r\n          <input type=\"file\" id=\"image\" @change=\"handleImageUpload\" class=\"form-control\" accept=\"image/*\"/>\r\n        </div>\r\n  \r\n        <div class=\"form-group my-2\">\r\n          <label for=\"pdf\">Archivo PDF</label>\r\n          <input type=\"file\" id=\"pdf\" @change=\"handlePdfUpload\" class=\"form-control\" />\r\n        </div> -->\r\n        <button type=\"submit\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n        <button @click=\"deletePost\" class=\"btn btn-danger ml-2\">Eliminar Publicación</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  props: {\r\n    postId: String, \r\n  },\r\n  data() {\r\n    return {\r\n      newPost: { \r\n        title: '',\r\n        description: '',\r\n      },\r\n      // newImageFile: null,\r\n      // newPdfFile: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n  methods: {\r\n    async fetchPost() {\r\n  try {\r\n    const response = await apiClient.get(`/posts/${this.postId}`);\r\n    this.newPost = response.data;\r\n    console.log(\"DATA OBTENIDA:\", response.data);\r\n  } catch (error) {\r\n    console.error('Error fetching post:', error);\r\n  }\r\n},\r\n    // handleImageUpload(event) {\r\n    //   this.newImageFile = event.target.files[0];\r\n    // },\r\n    // handlePdfUpload(event) {\r\n    //   this.newPdfFile = event.target.files[0];\r\n    // },\r\n    async updatePost() {\r\n  const token = localStorage.getItem('authToken');\r\n  if (token) {\r\n    const formData = new FormData();\r\n    \r\n    formData.append('title', this.newPost.title);\r\n    formData.append('description', this.newPost.description);\r\n\r\n    // Agrega los nuevos archivos solo si existen\r\n    // if (this.newImageFile) formData.append('images', this.newImageFile);\r\n    // if (this.newPdfFile) formData.append('pdf_file', this.newPdfFile);\r\n\r\n    // Log de datos que se enviarán\r\n    for (const [key, value] of formData.entries()) {\r\n      console.log(`${key}:`, value);\r\n    }\r\n\r\n    try {\r\n      const response = await apiClient.put(`/posts/${this.postId}`, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log(response.data);\r\n\r\n      // Redirecciona después de la actualización exitosa\r\n      this.$router.push(`/profile/${this.$route.params.username}`);\r\n    } catch (error) {\r\n      console.error('Error updating post:', error);\r\n    }\r\n  }\r\n},\r\n    async deletePost() {\r\n      try {\r\n        await apiClient.delete(`/posts/${this.postId}`);\r\n        this.$router.push(`/profile/${this.$route.params.username}`);\r\n      } catch (error) {\r\n        console.error('Error deleting post:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n  \r\n  <style scoped>\r\n  .edit-post-container {\r\n    background-color: #ffffff;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  </style>\r\n  "],"mappings":";AA8BA,OAAOA,SAAQ,MAAO,uBAAuB;AAE7C,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAEC;EACV,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;MACf;MACA;MACA;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMX,SAAS,CAACY,GAAG,CAAC,UAAU,IAAI,CAACV,MAAM,EAAE,CAAC;QAC7D,IAAI,CAACG,OAAM,GAAIM,QAAQ,CAACP,IAAI;QAC5BS,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACP,IAAI,CAAC;MAC9C,EAAE,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACG;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,UAAUA,CAAA,EAAG;MACrB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAIF,KAAK,EAAE;QACT,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAE/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACjB,OAAO,CAACC,KAAK,CAAC;QAC5Cc,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACjB,OAAO,CAACE,WAAW,CAAC;;QAExD;QACA;QACA;;QAEA;QACA,KAAK,MAAM,CAACgB,GAAG,EAAEC,KAAK,KAAKJ,QAAQ,CAACK,OAAO,CAAC,CAAC,EAAE;UAC7CZ,OAAO,CAACC,GAAG,CAAC,GAAGS,GAAG,GAAG,EAAEC,KAAK,CAAC;QAC/B;QAEA,IAAI;UACF,MAAMb,QAAO,GAAI,MAAMX,SAAS,CAAC0B,GAAG,CAAC,UAAU,IAAI,CAACxB,MAAM,EAAE,EAAEkB,QAAQ,EAAE;YACtEO,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUX,KAAK,EAAE;cAChC,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UACFJ,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACP,IAAI,CAAC;;UAE1B;UACA,IAAI,CAACyB,OAAO,CAACC,IAAI,CAAC,YAAY,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE,CAAC;QAC9D,EAAE,OAAOlB,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;MACF;IACF,CAAC;IACG,MAAMmB,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMlC,SAAS,CAACmC,MAAM,CAAC,UAAU,IAAI,CAACjC,MAAM,EAAE,CAAC;QAC/C,IAAI,CAAC2B,OAAO,CAACC,IAAI,CAAC,YAAY,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE,CAAC;MAC9D,EAAE,OAAOlB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}