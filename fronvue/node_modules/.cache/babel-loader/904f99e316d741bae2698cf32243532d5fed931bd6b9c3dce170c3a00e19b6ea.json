{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <button\\r\\n      :class=\\\"['btn-wishlist btn-sm ml-3', customClass]\\\"\\r\\n      :style=\\\"customStyle\\\"\\r\\n      type=\\\"button\\\"\\r\\n      data-bs-toggle=\\\"tooltip\\\"\\r\\n      data-bs-placement=\\\"left\\\"\\r\\n      :title=\\\"isLiked ? 'Quitar de favoritos' : 'Añadir a favoritos'\\\"\\r\\n      @click=\\\"toggleLike\\\"\\r\\n    >\\r\\n      <span v-if=\\\"!isLiked\\\">\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"13\\\" height=\\\"13\\\" viewBox=\\\"0 0 28 28\\\">\\r\\n          <path d=\\\"M26 9.312c0-4.391-2.969-5.313-5.469-5.313-2.328 0-4.953 2.516-5.766 3.484-0.375 0.453-1.156 0.453-1.531 0-0.812-0.969-3.437-3.484-5.766-3.484-2.5 0-5.469 0.922-5.469 5.313 0 2.859 2.891 5.516 2.922 5.547l9.078 8.75 9.063-8.734c0.047-0.047 2.938-2.703 2.938-5.563zM28 9.312c0 3.75-3.437 6.891-3.578 7.031l-9.734 9.375c-0.187 0.187-0.438 0.281-0.688 0.281s-0.5-0.094-0.688-0.281l-9.75-9.406c-0.125-0.109-3.563-3.25-3.563-7 0-4.578 2.797-7.313 7.469-7.313 2.734 0 5.297 2.156 6.531 3.375 1.234-1.219 3.797-3.375 6.531-3.375 4.672 0 7.469 2.734 7.469 7.313z\\\"/>\\r\\n        </svg>\\r\\n      </span>\\r\\n      <span v-else>\\r\\n        <svg  xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"13\\\" height=\\\"13\\\" viewBox=\\\"0 0 28 28\\\">\\r\\n          <path fill=\\\"#e74c3c\\\" d=\\\"M14 26c-0.25 0-0.5-0.094-0.688-0.281l-9.75-9.406c-0.125-0.109-3.563-3.25-3.563-7 0-4.578 2.797-7.313 7.469-7.313 2.734 0 5.297 2.156 6.531 3.375 1.234-1.219 3.797-3.375 6.531-3.375 4.672 0 7.469 2.734 7.469 7.313 0 3.75-3.437 6.891-3.578 7.031l-9.734 9.375c-0.187 0.187-0.438 0.281-0.688 0.281z\\\"/>\\r\\n        </svg>\\r\\n      </span>\\r\\n    </button> \"), _createCommentVNode(\" <span>{{ likeCount }} Me gusta</span> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createCommentVNode"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\like_component.vue"],"sourcesContent":["<template>\r\n    <!-- <button\r\n      :class=\"['btn-wishlist btn-sm ml-3', customClass]\"\r\n      :style=\"customStyle\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"tooltip\"\r\n      data-bs-placement=\"left\"\r\n      :title=\"isLiked ? 'Quitar de favoritos' : 'Añadir a favoritos'\"\r\n      @click=\"toggleLike\"\r\n    >\r\n      <span v-if=\"!isLiked\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"13\" height=\"13\" viewBox=\"0 0 28 28\">\r\n          <path d=\"M26 9.312c0-4.391-2.969-5.313-5.469-5.313-2.328 0-4.953 2.516-5.766 3.484-0.375 0.453-1.156 0.453-1.531 0-0.812-0.969-3.437-3.484-5.766-3.484-2.5 0-5.469 0.922-5.469 5.313 0 2.859 2.891 5.516 2.922 5.547l9.078 8.75 9.063-8.734c0.047-0.047 2.938-2.703 2.938-5.563zM28 9.312c0 3.75-3.437 6.891-3.578 7.031l-9.734 9.375c-0.187 0.187-0.438 0.281-0.688 0.281s-0.5-0.094-0.688-0.281l-9.75-9.406c-0.125-0.109-3.563-3.25-3.563-7 0-4.578 2.797-7.313 7.469-7.313 2.734 0 5.297 2.156 6.531 3.375 1.234-1.219 3.797-3.375 6.531-3.375 4.672 0 7.469 2.734 7.469 7.313z\"/>\r\n        </svg>\r\n      </span>\r\n      <span v-else>\r\n        <svg  xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"13\" height=\"13\" viewBox=\"0 0 28 28\">\r\n          <path fill=\"#e74c3c\" d=\"M14 26c-0.25 0-0.5-0.094-0.688-0.281l-9.75-9.406c-0.125-0.109-3.563-3.25-3.563-7 0-4.578 2.797-7.313 7.469-7.313 2.734 0 5.297 2.156 6.531 3.375 1.234-1.219 3.797-3.375 6.531-3.375 4.672 0 7.469 2.734 7.469 7.313 0 3.75-3.437 6.891-3.578 7.031l-9.734 9.375c-0.187 0.187-0.438 0.281-0.688 0.281z\"/>\r\n        </svg>\r\n      </span>\r\n    </button> -->\r\n    <!-- <span>{{ likeCount }} Me gusta</span> -->\r\n\r\n\r\n     \r\n</template>\r\n  \r\n  <script>\r\n  import apiClient from \"@/services/ApiService\";\r\n  \r\n  export default {\r\n    props: {\r\n      postId: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n      customClass: {\r\n        type: String,\r\n        default: \"\",\r\n      },\r\n      customStyle: {\r\n        type: Object,\r\n        default: () => ({}),\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        isLiked: null, // Cambiar a null para evitar un valor inicial incorrecto\r\n        likeCount: 0,\r\n      };\r\n    },\r\n    async created() {\r\n      try {\r\n        // Obtén el contador de \"likes\" y verifica si el usuario ya ha dado like\r\n        await this.fetchLikeCount();\r\n        await this.checkIfLiked();\r\n      } catch (error) {\r\n        console.error(\"Error during initialization:\", error);\r\n      }\r\n    },\r\n    methods: {\r\n      // Obtiene el contador de \"likes\"\r\n      async fetchLikeCount() {\r\n        try {\r\n          const response = await apiClient.get(`/like/count/${this.postId}`);\r\n          this.likeCount = response.data.likeCount;\r\n        } catch (error) {\r\n          console.error(\"Error fetching like count:\", error);\r\n        }\r\n      },\r\n      // Cambia el estado del \"like\" (activar/desactivar)\r\n      async toggleLike() {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (!token) {\r\n          console.error(\"Authentication token not found\");\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          if (this.isLiked) {\r\n            // Quitar \"like\"\r\n            await apiClient.delete(`/like/${this.postId}`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n              data: { postId: this.postId },\r\n            });\r\n            this.likeCount--;\r\n            this.isLiked = false;\r\n          } else {\r\n            // Agregar \"like\"\r\n            await apiClient.post(\r\n              `/like`,\r\n              { postId: this.postId },\r\n              { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n            this.likeCount++;\r\n            this.isLiked = true;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error toggling like:\", error);\r\n        }\r\n      },\r\n      // Verifica si el usuario ya ha dado like\r\n      async checkIfLiked() {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (!token) {\r\n          console.error(\"Authentication token not found\");\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await apiClient.get(`/like/check/${this.postId}`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          this.isLiked = response.data.isLiked; // Establecemos el valor de isLiked con la respuesta de la API\r\n        } catch (error) {\r\n          console.error(\"Error checking if liked:\", error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,mBAAA,slDAmBa,EACbA,mBAAA,2CAA8C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}