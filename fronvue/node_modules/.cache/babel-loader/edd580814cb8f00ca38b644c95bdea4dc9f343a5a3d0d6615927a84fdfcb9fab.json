{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MainLayout = _resolveComponent(\"MainLayout\");\n  return _openBlock(), _createBlock(_component_MainLayout, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Posts\", -1 /* HOISTED */)), !$data.isAuth ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"Please log in to see the posts.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: post.id\n      }, [_createElementVNode(\"h2\", null, _toDisplayString(post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(post.body), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]))])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","key","_createBlock","_component_MainLayout","default","_withCtx","_createElementVNode","_hoisted_1","$data","isAuth","_createElementBlock","_hoisted_2","_cache","_hoisted_3","_Fragment","_renderList","posts","post","id","_toDisplayString","title","body","_"],"sources":["D:\\Downloads\\BookSharing_SocialNetwork\\fronvue\\src\\components\\home_component.vue"],"sourcesContent":["<template>\r\n  <MainLayout>\r\n\r\n    <div class=\"container\">\r\n      <h1>Posts</h1>\r\n      <div v-if=\"!isAuth\">\r\n        <p>Please log in to see the posts.</p>\r\n      </div>\r\n      <div v-else>\r\n        <ul>\r\n          <li v-for=\"post in posts\" :key=\"post.id\">\r\n            <h2>{{ post.title }}</h2>\r\n            <p>{{ post.body }}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </MainLayout>\r\n\r\n</template>\r\n\r\n<script>\r\nimport apiClient from \"@/services/ApiService\";\r\nimport MainLayout from \"@/layouts/MainLayout.vue\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isAuth: true,\r\n      posts: [],\r\n    };\r\n  },\r\n  components: {\r\n    MainLayout,\r\n  },\r\n  methods: {\r\n    async getAllPosts() {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (!token) {\r\n          this.isAuth = false;\r\n          return;\r\n        }\r\n        const response = await apiClient.get(`/posts`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        this.posts = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error getting posts:\", error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getAllPosts();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAW;;EAH1BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,YAAA,CAgBaC,qBAAA;IAjBfC,OAAA,EAAAC,QAAA,CAGI,MAaM,CAbNC,mBAAA,CAaM,OAbNC,UAaM,G,0BAZJD,mBAAA,CAAc,YAAV,OAAK,sB,CACGE,KAAA,CAAAC,MAAM,I,cAAlBC,mBAAA,CAEM,OAPZC,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAMQN,mBAAA,CAAsC,WAAnC,iCAA+B,oB,qBAEpCI,mBAAA,CAOM,OAfZG,UAAA,GASQP,mBAAA,CAKK,c,kBAJHI,mBAAA,CAGKI,SAAA,QAbfC,WAAA,CAU6BP,KAAA,CAAAQ,KAAK,EAAbC,IAAI;2BAAfP,mBAAA,CAGK;QAHsBT,GAAG,EAAEgB,IAAI,CAACC;UACnCZ,mBAAA,CAAyB,YAAAa,gBAAA,CAAlBF,IAAI,CAACG,KAAK,kBACjBd,mBAAA,CAAsB,WAAAa,gBAAA,CAAhBF,IAAI,CAACI,IAAI,iB;;IAZ3BC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}