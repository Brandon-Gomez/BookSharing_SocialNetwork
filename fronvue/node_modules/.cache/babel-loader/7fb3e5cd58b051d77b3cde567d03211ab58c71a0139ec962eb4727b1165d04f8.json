{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiClient from '@/services/ApiService';\nexport default {\n  data() {\n    return {\n      profileData: {\n        name: '',\n        birthdate: '',\n        gender: '',\n        description: '',\n        profile_picture: ''\n      },\n      isCurrentUser: false,\n      publications: 0,\n      followers: 0,\n      following: 0,\n      posts: []\n    };\n  },\n  computed: {\n    filteredPosts() {\n      return this.posts.filter(post => post.username === this.profileData.username);\n    }\n  },\n  methods: {\n    async getProfile() {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.profileData = response.data.user;\n          this.isCurrentUser = response.data.isCurrentUser;\n          if (this.isCurrentUser) localStorage.setItem('profileData', JSON.stringify(this.profileData));\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      }\n    },\n    getProfileImage() {\n      const staticFiles = \"http://localhost:4000/api/upload/profile\";\n      return this.profileData.profile_picture ? this.profileData.profile_picture : staticFiles + \"default.jpg\";\n    },\n    async getAllPosts() {\n      try {\n        const token = localStorage.getItem('authToken');\n        const response = await apiClient.get('/posts/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.posts = response.data;\n      } catch (error) {\n        console.error('Error getting posts:', error);\n      }\n    },\n    addNewPost() {\n      this.$router.push('/posts');\n    },\n    editPost(postId) {\n      this.$router.push(`/posts/edit/${postId}`);\n    },\n    async deletePost(postId) {\n      const token = localStorage.getItem('authToken');\n      if (confirm(\"¬øEst√°s seguro de que deseas eliminar esta publicaci√≥n?\")) {\n        try {\n          await apiClient.delete(`/posts/${postId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          this.posts = this.posts.filter(post => post.id !== postId); // Actualiza la lista de publicaciones\n        } catch (error) {\n          console.error('Error deleting post:', error);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.getProfile();\n    this.getAllPosts();\n  }\n};","map":{"version":3,"names":["apiClient","data","profileData","name","birthdate","gender","description","profile_picture","isCurrentUser","publications","followers","following","posts","computed","filteredPosts","filter","post","username","methods","getProfile","token","localStorage","getItem","response","get","$route","params","headers","Authorization","user","setItem","JSON","stringify","error","console","getProfileImage","staticFiles","getAllPosts","addNewPost","$router","push","editPost","postId","deletePost","confirm","delete","id","mounted"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\components\\profile_component.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container container my-4 py-4\" v-if=\"profileData\">\r\n    <div class=\"profile-header row align-items-center\">\r\n      <div class=\"col-md-3 text-center\">\r\n        <img :src=\"getProfileImage()\" class=\"profile-image img-fluid rounded-circle border\" alt=\"Profile Picture\" />\r\n      </div>\r\n      <div class=\"col-md-9 profile-info\">\r\n        <h1 class=\"h3\">{{ profileData.name }}</h1>\r\n        <p class=\"text-muted\"><strong>{{ profileData.username || 'No disponible' }}</strong></p>\r\n        <div class=\"profile-stats d-flex justify-content-between my-3\">\r\n          <span><strong>{{ publications }}</strong> publicaciones</span>\r\n          <span><strong>{{ followers }}</strong> seguidores</span>\r\n          <span><strong>{{ following }}</strong> seguidos</span>\r\n        </div>\r\n        <p v-if=\"profileData.description\">{{ profileData.description }}</p>\r\n        <router-link v-if=\"isCurrentUser\" :to=\"`/profile/${profileData.username}/edit-account`\" class=\"btn btn-primary btn-block\">\r\n          Editar perfil\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"isCurrentUser\" class=\"add-post-button my-4 text-center d-flex justify-content-center align-items-baseline\">\r\n      <button @click=\"addNewPost\" class=\"btn btn-success rounded-circle\">\r\n        <i class=\"fas fa-plus\"></i>\r\n      </button>\r\n      <div class=\"px-2\">\r\n        <!-- <p> AGREGAR NUEVO POST</p> -->\r\n      </div>\r\n    </div>\r\n\r\n     <!-- Contenedor para las publicaciones -->\r\n     <div class=\"posts-container\">\r\n      <div v-for=\"post in filteredPosts\" :key=\"post.id\" class=\"post-card mb-4 shadow-sm\">\r\n        <div class=\"d-flex align-items-start\">\r\n          <img v-if=\"post.image\" :src=\"post.image\" alt=\"Post Image\" class=\"post-image me-3\" />\r\n          <div class=\"post-content\">\r\n            <h3 class=\"post-title\">{{ post.title }}</h3>\r\n            <p class=\"post-description\">{{ post.description }}</p>\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <a v-if=\"post.pdf_file\" :href=\"post.pdf_file\" target=\"_blank\" class=\"btn btn-primary\">\r\n                üìÑ Ver libro (PDF)\r\n              </a>\r\n              <button @click=\"likePost(post.id)\" class=\"btn btn-success\">\r\n                üëç Like ({{ post.likes_count || 0 }})\r\n              </button>\r\n              <!-- Botones de editar y eliminar solo si es el usuario autenticado -->\r\n              <button v-if=\"isCurrentUser\" @click=\"editPost(post.id)\" class=\"btn btn-warning\">\r\n                ‚úèÔ∏è Editar\r\n              </button>\r\n              <button v-if=\"isCurrentUser\" @click=\"deletePost(post.id)\" class=\"btn btn-danger\">\r\n                üóëÔ∏è Eliminar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/ApiService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      profileData: {\r\n        name: '',\r\n        birthdate: '',\r\n        gender: '',\r\n        description: '',\r\n        profile_picture: ''\r\n      },\r\n      isCurrentUser: false,\r\n      publications: 0,\r\n      followers: 0,\r\n      following: 0,\r\n      posts: [],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredPosts() {\r\n      return this.posts.filter(post => post.username === this.profileData.username);\r\n    }\r\n  },\r\n  methods: {\r\n    async getProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        try {\r\n          const response = await apiClient.get(`/profile/${this.$route.params.username}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.profileData = response.data.user;\r\n          this.isCurrentUser = response.data.isCurrentUser;\r\n          if (this.isCurrentUser) localStorage.setItem('profileData', JSON.stringify(this.profileData));\r\n        } catch (error) {\r\n          console.error(\"Error fetching profile:\", error);\r\n        }\r\n      }\r\n    },\r\n    getProfileImage() {\r\n      const staticFiles = \"http://localhost:4000/api/upload/profile\";\r\n      return this.profileData.profile_picture\r\n        ? this.profileData.profile_picture\r\n        : staticFiles + \"default.jpg\";\r\n    },\r\n    async getAllPosts() {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        const response = await apiClient.get('/posts/user', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        this.posts = response.data;\r\n      } catch (error) {\r\n        console.error('Error getting posts:', error);\r\n      }\r\n    },\r\n    addNewPost() {\r\n      this.$router.push('/posts');\r\n    },\r\n    editPost(postId) {\r\n      this.$router.push(`/posts/edit/${postId}`);\r\n    },\r\n    async deletePost(postId) {\r\n      const token = localStorage.getItem('authToken');\r\n      if (confirm(\"¬øEst√°s seguro de que deseas eliminar esta publicaci√≥n?\")) {\r\n        try {\r\n          await apiClient.delete(`/posts/${postId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          this.posts = this.posts.filter(post => post.id !== postId); // Actualiza la lista de publicaciones\r\n        } catch (error) {\r\n          console.error('Error deleting post:', error);\r\n        }\r\n      }\r\n    }\r\n    \r\n  },\r\n  mounted() {\r\n    this.getProfile();\r\n    this.getAllPosts();\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.profile-container {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n}\r\n\r\n.profile-image {\r\n  width: 150px;\r\n  height: 150px;\r\n}\r\n\r\n.profile-info h1 {\r\n  font-size: 1.75rem;\r\n}\r\n\r\n.profile-stats {\r\n  font-size: 1rem;\r\n}\r\n\r\n.add-post-button .btn {\r\n  font-size: 1.5rem;\r\n  width: 50px;\r\n  height: 50px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.posts-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.post-card {\r\n  display: flex;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n  transition: box-shadow 0.3s, transform 0.3s;\r\n  border: 1px solid #ddd; /* A√±adir un borde */\r\n}\r\n\r\n.post-card:hover {\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n  transform: translateY(-5px); /* Efecto de elevaci√≥n */\r\n}\r\n\r\n.post-image {\r\n  width: 150px; /* Tama√±o m√°s grande para la imagen */\r\n  height: 150px; /* Tama√±o m√°s grande para la imagen */\r\n  object-fit: cover; /* Mantiene la relaci√≥n de aspecto */\r\n  border-radius: 10px; /* Bordes redondeados */\r\n}\r\n\r\n.post-content {\r\n  flex: 1; /* Hace que el contenido ocupe el espacio restante */\r\n  margin-left: 15px; /* Espaciado entre la imagen y el contenido */\r\n}\r\n\r\n.post-title {\r\n  font-size: 1.5rem;\r\n  margin: 0.5rem 0;\r\n  color: #333; /* Color del t√≠tulo */\r\n}\r\n\r\n.post-description {\r\n  margin: 0.5rem 0;\r\n  color: #666; /* Color m√°s suave para la descripci√≥n */\r\n}\r\n\r\n.btn-primary, .btn-success {\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3; /* Cambiar el color en hover */\r\n}\r\n\r\n.btn-success:hover {\r\n  background-color: #45a049; /* Cambiar el color en hover */\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .profile-header {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-image {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .profile-info {\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-stats {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  .post-card {\r\n    flex-direction: column; /* Cambiar a columna en dispositivos m√°s peque√±os */\r\n    align-items: center;\r\n  }\r\n\r\n  .post-image {\r\n    margin-bottom: 10px; /* Espaciado entre imagen y contenido */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}