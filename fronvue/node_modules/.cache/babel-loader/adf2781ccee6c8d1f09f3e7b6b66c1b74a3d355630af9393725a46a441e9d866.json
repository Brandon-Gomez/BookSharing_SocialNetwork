{"ast":null,"code":"import SearchComponent from '@/components/search_component.vue';\nimport NavComponent from '@/components/navbar_component.vue';\n// Si necesitas decodificar el JWT, puedes usar jwt-decode (opcional)\n// import jwt_decode from \"jwt-decode\";\n\nexport default {\n  components: {\n    SearchComponent,\n    NavComponent\n  },\n  data() {\n    return {\n      showSearch: false,\n      isAuthenticated: false\n    };\n  },\n  methods: {\n    handleSearch() {\n      this.showSearch = !this.showSearch;\n    },\n    checkAuth() {\n      // Obtener el token del localStorage\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          // Validar si el token aún es válido (opcional, puedes decodificarlo)\n          // const decoded = jwt_decode(token);\n          // // Verifica si el token ha expirado (opcionalmente, usando el campo 'exp' del JWT)\n          // const currentTime = Math.floor(Date.now() / 1000);\n          // if (decoded.exp < currentTime) {\n          //   this.isAuthenticated = false;\n          //   localStorage.removeItem('authToken'); // Limpiar token si está expirado\n          //   return;\n          // }\n\n          // Si el token es válido y no ha expirado, el usuario está autenticado\n          this.isAuthenticated = true;\n        } catch (error) {\n          // Si ocurre algún error al verificar o decodificar el token, el usuario no está autenticado\n          this.isAuthenticated = false;\n          localStorage.removeItem('authToken'); // Limpiar token inválido\n        }\n      } else {\n        this.isAuthenticated = false;\n      }\n    }\n  },\n  mounted() {\n    this.checkAuth();\n  }\n};","map":{"version":3,"names":["SearchComponent","NavComponent","components","data","showSearch","isAuthenticated","methods","handleSearch","checkAuth","token","localStorage","getItem","error","removeItem","mounted"],"sources":["C:\\DATA\\POW\\BookSharing_SocialNetwork\\fronvue\\src\\layouts\\MainLayout.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-layout\">\r\n    <aside class=\"sidebar\" v-if=\"isAuthenticated\">\r\n      <search-component v-if=\"showSearch\" />\r\n    </aside>\r\n    <NavComponent v-if=\"isAuthenticated\" @search=\"handleSearch\" />\r\n    <main class=\"content\">\r\n      <router-view />\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SearchComponent from '@/components/search_component.vue';\r\nimport NavComponent from '@/components/navbar_component.vue';\r\n// Si necesitas decodificar el JWT, puedes usar jwt-decode (opcional)\r\n// import jwt_decode from \"jwt-decode\";\r\n\r\nexport default {\r\n  components: {\r\n    SearchComponent,\r\n    NavComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      showSearch: false,\r\n      isAuthenticated: false,\r\n    };\r\n  },\r\n  methods: {\r\n    handleSearch() {\r\n      this.showSearch = !this.showSearch;\r\n    },\r\n    checkAuth() {\r\n      // Obtener el token del localStorage\r\n      const token = localStorage.getItem('authToken');\r\n      \r\n      if (token) {\r\n        try {\r\n          // Validar si el token aún es válido (opcional, puedes decodificarlo)\r\n          // const decoded = jwt_decode(token);\r\n          // // Verifica si el token ha expirado (opcionalmente, usando el campo 'exp' del JWT)\r\n          // const currentTime = Math.floor(Date.now() / 1000);\r\n          // if (decoded.exp < currentTime) {\r\n          //   this.isAuthenticated = false;\r\n          //   localStorage.removeItem('authToken'); // Limpiar token si está expirado\r\n          //   return;\r\n          // }\r\n          \r\n          // Si el token es válido y no ha expirado, el usuario está autenticado\r\n          this.isAuthenticated = true;\r\n        } catch (error) {\r\n          // Si ocurre algún error al verificar o decodificar el token, el usuario no está autenticado\r\n          this.isAuthenticated = false;\r\n          localStorage.removeItem('authToken'); // Limpiar token inválido\r\n        }\r\n      } else {\r\n        this.isAuthenticated = false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.checkAuth();\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.main-layout {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  overflow-y: auto;\r\n  background-image: url('@/assets/back1.jpg'); /* Reemplaza con la ruta de tu imagen */\r\n  /* background-size: cover;  */\r\n  background-position: center; /* Para centrar la imagen */\r\n  background-repeat: no-repeat; /* Para evitar que se repita */\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  margin-top: 0;\r\n}\r\n</style>"],"mappings":"AAaA,OAAOA,eAAc,MAAO,mCAAmC;AAC/D,OAAOC,YAAW,MAAO,mCAAmC;AAC5D;AACA;;AAEA,eAAe;EACbC,UAAU,EAAE;IACVF,eAAe;IACfC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACH,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU;IACpC,CAAC;IACDI,SAASA,CAAA,EAAG;MACV;MACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA,IAAI,CAACJ,eAAc,GAAI,IAAI;QAC7B,EAAE,OAAOO,KAAK,EAAE;UACd;UACA,IAAI,CAACP,eAAc,GAAI,KAAK;UAC5BK,YAAY,CAACG,UAAU,CAAC,WAAW,CAAC,EAAE;QACxC;MACF,OAAO;QACL,IAAI,CAACR,eAAc,GAAI,KAAK;MAC9B;IACF;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,SAAS,CAAC,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}