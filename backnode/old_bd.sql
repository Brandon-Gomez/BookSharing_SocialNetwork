-- Eliminar la tabla si ya existe
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FOLLOWERS;
DROP TABLE IF EXISTS POSTS;
DROP TABLE IF EXISTS LIKES;

CREATE TABLE USERS(
    ID SERIAL PRIMARY KEY,
    EMAIL VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR(60) NOT NULL,
    USERNAME VARCHAR(50) NOT NULL UNIQUE,
    NAME VARCHAR(100),
    BIRTHDATE DATE,
    GENDER VARCHAR(10),
    DESCRIPTION TEXT,
    RESET_TOKEN VARCHAR(255),
    RESET_TOKEN_EXPIRY TIMESTAMP,
    PROFILE_PICTURE VARCHAR(255),
    TERMS_ACCEPTED BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE POSTS (
  id SERIAL PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT NOT NULL,
  user_id INTEGER NOT NULL,
  image VARCHAR(255),
  pdf_file VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES USERS(id)
);

CREATE TABLE LIKES (
  id SERIAL PRIMARY KEY,
  post_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (post_id) REFERENCES POSTS(id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
  UNIQUE (post_id, user_id) -- Impide que un usuario dé like más de una vez a la misma publicación
);

-- CREATE TABLE COMMENTS (
--   id SERIAL PRIMARY KEY,
--   post_id INTEGER NOT NULL,
--   user_id INTEGER NOT NULL,
--   content TEXT NOT NULL,
--   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--   updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--   parent_comment_id INTEGER,
--   FOREIGN KEY (post_id) REFERENCES POSTS(id) ON DELETE CASCADE,
--   FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
--   FOREIGN KEY (parent_comment_id) REFERENCES COMMENTS(id) ON DELETE CASCADE
-- );

-- CREATE TABLE FOLLOWERS (
--     follower_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
--     following_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
--     PRIMARY KEY (follower_id, following_id)
-- );

CREATE TABLE FOLLOWS (
  follower_id INT NOT NULL,
  followed_id INT NOT NULL,
  follow_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (follower_id, followed_id),
  FOREIGN KEY (follower_id) REFERENCES Users(id) ON DELETE CASCADE,
  FOREIGN KEY (followed_id) REFERENCES Users(id) ON DELETE CASCADE
);

-- Ver los datos de la tabla USERS
SELECT * FROM USERS;